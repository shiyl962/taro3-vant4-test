{"version":3,"file":"taro.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;ACRA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AClFA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA0BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAqJA;AACA;AAAA;AASA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA4CA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAqBA;ACzCA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AC5BA;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;AC/CA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACtFA;AACA;AACA;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AAAA;AAGA;ACHA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AAIA;AACA;AACA;AAGA;AACA;;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AAAA;;AAKA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;;AACA;AACA;AACA;AACA;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAGA;;AACA;AACA;AACA;;AAEA;AAGA;;AACA;AACA;;AAEA;AAGA;;AACA;AACA;;AAEA;AAGA;;AACA;AACA;;AAEA;AAGA;;AACA;AACA;;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;ACvNA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;;AAIA;AAEA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;;AAIA;;AAGA;AAEA;AACA;AACA;AACA;;AAGA;AACA;AAAA;AAAA;AACA;;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;ACnOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AACA;;AAEA;;AAEA;;;;;AAIA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAEA;;ACnHA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;;AAEA;AAAA;AACA;AACA;AAGA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AAAA;AACA;;AAMA;;AAGA;;AAEA;AACA;AAIA;AADA;AAEA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;AAMA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;;;;AAMA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AAGA;AADA;AAAA;AAEA;AACA;AAAA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACzHA;ACMA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AJVA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AKLA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;ACtCA;AAEA;;;;;;;AAOA;AAPA;AAcA;AAAA;AAFA;AAGA;;AAGA;;;;;;;AAOA;AAPA;AAAA;AAAA;AASA;AACA;AACA;AAEA;;AAGA;;;;AAIA;AAJA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;;AAGA;;;;AAIA;AAJA;AAAA;AAAA;AAMA;;AACA;AAAA;AAAA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AC9HA;AAAA;AACA;AACA;AACA;;AAUA;AAAA;AAAA;AAEA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;ACpBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AChIA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAxDA;ACKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;ACZA;AACA;AACA;AACA;AACA;ACIA;AACA;AAEA;;;;;AAKA;AACA;AAAA;AACA;;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AAIA;AAEA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AC9GA;AAAA;AACA;;AAsFA;AAAA;AAAA;AAnFA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;;;;;AAMA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;ACrEA;AACA;AAAA;AAEA;AAAA;AAQA;AAAA;AAAA;AACA;AAJA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AALA;AACA;AACA;AAAA;;AACA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;AAGA;AAEA;AAEA;;AACA;AAAA;AAAA;AAGA;AAEA;;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;;AAGA;;;AAGA;;;;AAEA;AACA;AACA;;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;;;;AAOA;AAPA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;AAAA;AAAA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAEA;;AAGA;;;;;;;AAOA;AAPA;AAAA;AAAA;AASA;;AAGA;;;;;;;AAOA;AAPA;AAAA;AAAA;AASA;;AAGA;;;;AAKA;AAAA;AAAA;AAEA;;AAGA;;;;;;AAMA;AANA;AAAA;AAAA;AAOA;AACA;AAAA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AClTA;;;AAGA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;ACtLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAXA;AAAA;AAAA;AAaA;AACA;AAEA;AACA;AACA;AAAA;AAWA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;AAAA;AAAA;AAGA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;ACvLA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;ACvBA;AAAA;AAOA;AAAA;AAAA;AACA;AANA;AAEA;AAKA;AACA;AACA;AAAA;;AACA;AAAA;AAAA;;AAIA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;;;;AAIA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;AAGA;AACA;AACA;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;ACrYA;AACA;AACA;;ACcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AASA;AAAA;AANA;AAEA;AAKA;;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;ACjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAqBA;AAAA;AACA;;AAoMA;AAAA;AAAA;AAlMA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAAA;AAAA;;;AA0BA;AAAA;AAAA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;;AAIA;;AAGA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;ACpRA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;ACjRA;AACA;AACA;AAKA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;ACvBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;;;AAGA;AACA;;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AChCA;AAAA;AA0BA;AAAA;AAfA;AAEA;AAEA;;AAGA;;;AAIA;AAKA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AC3LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAzBA;ACPA;AAAA;AACA;;AAoBA;AAAA;AAAA;AAjBA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AAAA;AAAA;AAGA;ACVA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA;;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AASA;AAAA;AAAA;AACA;AATA;AAEA;AAEA;AAEA;AAIA;AACA;AAAA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;;AAeA;;AAGA;AACA;AACA;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;;AAEA;AAIA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AArJA;AChDA;AAAA;AAKA;AAAA;AAAA;AACA;AAJA;AACA;AAIA;AAAA;;AACA;AAAA;AAAA;AAgBA;AACA;AAAA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAWA;AACA;AAAA;AALA;;AACA;AAAA;AAAA;AAWA;AACA;AAAA;AALA;;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAKA;AAAA;AAFA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;;AC1HA;AAiBA;AAAA;;AAPA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAIA;AACA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;;;;AAIA;AACA;;AACA;AAAA;AAAA;AAGA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AArKA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;;AAmKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;ACjOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AAAA;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AA9CA;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACkBA;AAAA;AAMA;AAAA;AAAA;AACA;AAHA;AAIA;AACA;AAAA;;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAEA;;;;;;AAKA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;;AAIA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAIA;;;;;AAIA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;ACrFA;AAEA;;AAEA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;ACHA;;ACFA;;AAEA;AAFA;AAQA;AAAA;AAFA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;;ACNA;AAAA;AAEA;AAAA;AAQA;AAAA;AAAA;AACA;;;AAPA;AACA;AACA;AAEA;AAKA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;;;;;AAeA;AACA;;AACA;AAAA;AAAA;AAGA;;;;;AAIA;AACA;AAEA;AACA;AAEA;AAEA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAIA;AACA;;AACA;AAAA;AAAA;AApEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;ACxEA;AACA;AACA;AACA;;AAGA;AAAA;AAAA;;ACRA;AACA;AAAA;AAEA;AAAA;AAMA;AAAA;AAAA;AACA;;;AALA;AACA;AACA;AAKA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAKA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAIA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAEA;;;;;AAsEA;AACA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAEA;;;;;AAIA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;;;;;AAIA;AACA;;AACA;AAAA;AAAA;;AAvNA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAMA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AA4JA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AC1TA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;AAIA;AACA;ACpBA;AAEA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;AACA;AAVA;AACA;AACA;AACA;AASA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAEA;;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AACA;AAAA;AAAA;AAGA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAGA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;;ACvGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ACHA;AAsBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AAAA;AAAA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;;AAGA;;AACA;AAIA;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AC9WA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AhDneA;AiDtgBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AAIA;AAAA;;AACA;;AACA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;AAlGA;;ACZA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AC3BA;AAAA;AACA;AACA;AACA;AACA;AAiEA;AACA;AAKA;AAuBA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAbA;AAAA;AAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAGA;;AACA;AAAA;AAAA;AA0DA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;;;AAGA;AACA;AAeA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AxDtTA;AAEA;AAEA;AAWA;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AyDlNA;AA0HA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAaA;AAEA;AAAA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAGA;;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC7YA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA","sources":["webpack://taro-vant4/.._src_utils.js","webpack://taro-vant4/.._src_polyfill.js","webpack://taro-vant4/.._.._shared_dist_shared.esm.js","webpack://taro-vant4/.._src_env.js","webpack://taro-vant4/.._src_interceptor_chain.js","webpack://taro-vant4/.._src_interceptor_index.js","webpack://taro-vant4/.._src_interceptor_interceptors.js","webpack://taro-vant4/.._src_tools.js","webpack://taro-vant4/.._src_index.js","webpack://taro-vant4/.._src_runtime_composition-functions.ts","webpack://taro-vant4/.._src_runtime_plugins.ts","webpack://taro-vant4/.._src_runtime_utils.ts","webpack://taro-vant4/.._src_runtime_connect.ts","webpack://taro-vant4/.._src_runtime_connect-native.ts","webpack://taro-vant4/.._src_runtime_index.ts","webpack://taro-vant4/.._src_constant.ts","webpack://taro-vant4/.._src_utils.ts","webpack://taro-vant4/.._src_runtime.ts","webpack://taro-vant4/.._src_apis-list.ts","webpack://taro-vant4/.._src_apis.ts","webpack://taro-vant4/.._src_components.ts","webpack://taro-vant4/.._src_runtime-utils.ts","webpack://taro-vant4/.._src_constants_index.ts","webpack://taro-vant4/.._src_dom-external_mutation-observer_implements.ts","webpack://taro-vant4/.._src_dom-external_mutation-observer_index.ts","webpack://taro-vant4/.._src_utils_index.ts","webpack://taro-vant4/.._src_dom_class-list.ts","webpack://taro-vant4/.._src_dom_event-source.ts","webpack://taro-vant4/.._src_env.ts","webpack://taro-vant4/.._src_hydrate.ts","webpack://taro-vant4/.._src_dom_event-target.ts","webpack://taro-vant4/.._src_dom_node.ts","webpack://taro-vant4/.._src_dom_style_properties.ts","webpack://taro-vant4/.._src_dom_style.ts","webpack://taro-vant4/.._src_dom_tree.ts","webpack://taro-vant4/.._src_dom_element.ts","webpack://taro-vant4/.._src_options.ts","webpack://taro-vant4/.._src_dom-external_inner-html_scaner.ts","webpack://taro-vant4/.._src_dom-external_inner-html_utils.ts","webpack://taro-vant4/.._src_dom-external_inner-html_style.ts","webpack://taro-vant4/.._src_dom-external_inner-html_tags.ts","webpack://taro-vant4/.._src_dom-external_inner-html_parser.ts","webpack://taro-vant4/.._src_dom-external_inner-html_html.ts","webpack://taro-vant4/.._src_dom-external_element.ts","webpack://taro-vant4/.._src_dom-external_node.ts","webpack://taro-vant4/.._src_dom-external_index.ts","webpack://taro-vant4/.._src_dom_event.ts","webpack://taro-vant4/.._src_dom_form.ts","webpack://taro-vant4/.._src_perf.ts","webpack://taro-vant4/.._src_dom_root.ts","webpack://taro-vant4/.._src_dom_text.ts","webpack://taro-vant4/.._src_bom_URLSearchParams.ts","webpack://taro-vant4/.._src_bom_URL.ts","webpack://taro-vant4/.._src_dom_anchor-element.ts","webpack://taro-vant4/.._src_dom_custom-wrapper.ts","webpack://taro-vant4/.._src_dom_document.ts","webpack://taro-vant4/.._src_bom_document.ts","webpack://taro-vant4/.._src_bom_getComputedStyle.ts","webpack://taro-vant4/.._src_emitter_emitter.ts","webpack://taro-vant4/.._src_utils_cache.ts","webpack://taro-vant4/.._src_bom_history.ts","webpack://taro-vant4/.._src_current.ts","webpack://taro-vant4/.._src_bom_location.ts","webpack://taro-vant4/.._src_bom_navigator.ts","webpack://taro-vant4/.._src_bom_raf.ts","webpack://taro-vant4/.._src_bom_window.ts","webpack://taro-vant4/.._src_dom_svg.ts","webpack://taro-vant4/.._src_dsl_common.ts","webpack://taro-vant4/.._src_next-tick.ts","webpack://taro-vant4/.._src_constants.ts","webpack://taro-vant4/.._src_event-emitter.ts","webpack://taro-vant4/.._src_is.ts","webpack://taro-vant4/.._src_runtime-hooks.ts","webpack://taro-vant4/.._src_native-apis.ts","webpack://taro-vant4/._node_modules_@tarojs_taro_index.js","webpack://taro-vant4/._node_modules_@tarojs_webpack5-runner_dist_template_comp.js","webpack://taro-vant4/.._.._src_template_custom-wrapper.ts"],"sourcesContent":["export function isFunction (x) {\n  return typeof x === 'function'\n}\n\nexport function isUndefined (x) {\n  return typeof x === 'undefined'\n}\n\nexport function isObject (x) {\n  return x && typeof x === 'object'\n}\n","import { isFunction, isObject, isUndefined } from './utils'\n\nconst isBadObj = (x) => !isObject(x)\n\nfunction throwTypeError (s) {\n  throw new TypeError(s)\n}\n\nif (!isFunction(Object.assign)) {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.assign = function (target) { // .length of function is 2\n    if (target == null) { // TypeError if undefined or null\n      throwTypeError('Cannot convert undefined or null to object')\n    }\n\n    const to = Object(target)\n\n    for (let index = 1; index < arguments.length; index++) {\n      const nextSource = arguments[index]\n\n      if (nextSource != null) { // Skip over if undefined or null\n        for (const nextKey in nextSource) {\n          // Avoid bugs when hasOwnProperty is shadowed\n          if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n            to[nextKey] = nextSource[nextKey]\n          }\n        }\n      }\n    }\n    return to\n  }\n}\n\nif (!isFunction(Object.defineProperties)) {\n  Object.defineProperties = function (obj, properties) {\n    function convertToDescriptor (desc) {\n      function hasProperty (obj, prop) {\n        return Object.prototype.hasOwnProperty.call(obj, prop)\n      }\n\n      if (isBadObj(desc)) { throwTypeError('bad desc') }\n\n      const d = {}\n\n      if (hasProperty(desc, 'enumerable')) d.enumerable = !!desc.enumerable\n      if (hasProperty(desc, 'configurable')) { d.configurable = !!desc.configurable }\n      if (hasProperty(desc, 'value')) d.value = desc.value\n      if (hasProperty(desc, 'writable')) d.writable = !!desc.writable\n      if (hasProperty(desc, 'get')) {\n        const g = desc.get\n\n        if (!isFunction(g) && !isUndefined(g)) { throwTypeError('bad get') }\n        d.get = g\n      }\n      if (hasProperty(desc, 'set')) {\n        const s = desc.set\n        if (!isFunction(s) && !isUndefined(s)) { throwTypeError('bad set') }\n        d.set = s\n      }\n\n      if (('get' in d || 'set' in d) && ('value' in d || 'writable' in d)) { throwTypeError('identity-confused descriptor') }\n\n      return d\n    }\n\n    if (isBadObj(obj)) throwTypeError('bad obj')\n\n    properties = Object(properties)\n\n    const keys = Object.keys(properties)\n    const descs = []\n\n    for (let i = 0; i < keys.length; i++) {\n      descs.push([keys[i], convertToDescriptor(properties[keys[i]])])\n    }\n\n    for (let i = 0; i < descs.length; i++) {\n      Object.defineProperty(obj, descs[i][0], descs[i][1])\n    }\n\n    return obj\n  }\n}\n","const DEFAULT_EMPTY_ARRAY = '[]';\nconst NO_DEFAULT_VALUE = '';\nconst DEFAULT_TRUE = '!0';\nconst DEFAULT_FALSE = '!1';\nconst touchEvents = {\n    bindTouchStart: NO_DEFAULT_VALUE,\n    bindTouchMove: NO_DEFAULT_VALUE,\n    bindTouchEnd: NO_DEFAULT_VALUE,\n    bindTouchCancel: NO_DEFAULT_VALUE,\n    bindLongTap: NO_DEFAULT_VALUE\n};\nconst animation = {\n    animation: NO_DEFAULT_VALUE,\n    bindAnimationStart: NO_DEFAULT_VALUE,\n    bindAnimationIteration: NO_DEFAULT_VALUE,\n    bindAnimationEnd: NO_DEFAULT_VALUE,\n    bindTransitionEnd: NO_DEFAULT_VALUE\n};\nfunction singleQuote(s) {\n    return `'${s}'`;\n}\nconst View = Object.assign(Object.assign({ 'hover-class': singleQuote('none'), 'hover-stop-propagation': DEFAULT_FALSE, 'hover-start-time': '50', 'hover-stay-time': '400' }, touchEvents), animation);\nconst Icon = {\n    type: NO_DEFAULT_VALUE,\n    size: '23',\n    color: NO_DEFAULT_VALUE\n};\nconst MapComp = Object.assign({ longitude: NO_DEFAULT_VALUE, latitude: NO_DEFAULT_VALUE, scale: '16', markers: DEFAULT_EMPTY_ARRAY, covers: NO_DEFAULT_VALUE, polyline: DEFAULT_EMPTY_ARRAY, circles: DEFAULT_EMPTY_ARRAY, controls: DEFAULT_EMPTY_ARRAY, 'include-points': DEFAULT_EMPTY_ARRAY, 'show-location': NO_DEFAULT_VALUE, 'layer-style': '1', bindMarkerTap: NO_DEFAULT_VALUE, bindControlTap: NO_DEFAULT_VALUE, bindCalloutTap: NO_DEFAULT_VALUE, bindUpdated: NO_DEFAULT_VALUE }, touchEvents);\nconst Progress = {\n    percent: NO_DEFAULT_VALUE,\n    'stroke-width': '6',\n    color: singleQuote('#09BB07'),\n    activeColor: singleQuote('#09BB07'),\n    backgroundColor: singleQuote('#EBEBEB'),\n    active: DEFAULT_FALSE,\n    'active-mode': singleQuote('backwards'),\n    'show-info': DEFAULT_FALSE\n};\nconst RichText = {\n    nodes: DEFAULT_EMPTY_ARRAY\n};\nconst Text = {\n    selectable: DEFAULT_FALSE,\n    space: NO_DEFAULT_VALUE,\n    decode: DEFAULT_FALSE\n};\nconst Button = Object.assign({ size: singleQuote('default'), type: NO_DEFAULT_VALUE, plain: DEFAULT_FALSE, disabled: NO_DEFAULT_VALUE, loading: DEFAULT_FALSE, 'form-type': NO_DEFAULT_VALUE, 'open-type': NO_DEFAULT_VALUE, 'hover-class': singleQuote('button-hover'), 'hover-stop-propagation': DEFAULT_FALSE, 'hover-start-time': '20', 'hover-stay-time': '70', name: NO_DEFAULT_VALUE }, touchEvents);\nconst Checkbox = {\n    value: NO_DEFAULT_VALUE,\n    disabled: NO_DEFAULT_VALUE,\n    checked: DEFAULT_FALSE,\n    color: singleQuote('#09BB07'),\n    name: NO_DEFAULT_VALUE\n};\nconst CheckboxGroup = {\n    bindChange: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Form = {\n    'report-submit': DEFAULT_FALSE,\n    bindSubmit: NO_DEFAULT_VALUE,\n    bindReset: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Input = {\n    value: NO_DEFAULT_VALUE,\n    type: singleQuote(NO_DEFAULT_VALUE),\n    password: DEFAULT_FALSE,\n    placeholder: NO_DEFAULT_VALUE,\n    'placeholder-style': NO_DEFAULT_VALUE,\n    'placeholder-class': singleQuote('input-placeholder'),\n    disabled: NO_DEFAULT_VALUE,\n    maxlength: '140',\n    'cursor-spacing': '0',\n    focus: DEFAULT_FALSE,\n    'confirm-type': singleQuote('done'),\n    'confirm-hold': DEFAULT_FALSE,\n    cursor: 'i.value.length',\n    'selection-start': '-1',\n    'selection-end': '-1',\n    bindInput: NO_DEFAULT_VALUE,\n    bindFocus: NO_DEFAULT_VALUE,\n    bindBlur: NO_DEFAULT_VALUE,\n    bindConfirm: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Label = {\n    for: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Picker = {\n    mode: singleQuote('selector'),\n    disabled: NO_DEFAULT_VALUE,\n    range: NO_DEFAULT_VALUE,\n    'range-key': NO_DEFAULT_VALUE,\n    value: NO_DEFAULT_VALUE,\n    start: NO_DEFAULT_VALUE,\n    end: NO_DEFAULT_VALUE,\n    fields: singleQuote('day'),\n    'custom-item': NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE,\n    bindCancel: NO_DEFAULT_VALUE,\n    bindChange: NO_DEFAULT_VALUE,\n    bindColumnChange: NO_DEFAULT_VALUE\n};\nconst PickerView = {\n    value: NO_DEFAULT_VALUE,\n    'indicator-style': NO_DEFAULT_VALUE,\n    'indicator-class': NO_DEFAULT_VALUE,\n    'mask-style': NO_DEFAULT_VALUE,\n    'mask-class': NO_DEFAULT_VALUE,\n    bindChange: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst PickerViewColumn = {\n    name: NO_DEFAULT_VALUE\n};\nconst Radio = {\n    value: NO_DEFAULT_VALUE,\n    checked: DEFAULT_FALSE,\n    disabled: NO_DEFAULT_VALUE,\n    color: singleQuote('#09BB07'),\n    name: NO_DEFAULT_VALUE\n};\nconst RadioGroup = {\n    bindChange: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Slider = {\n    min: '0',\n    max: '100',\n    step: '1',\n    disabled: NO_DEFAULT_VALUE,\n    value: '0',\n    activeColor: singleQuote('#1aad19'),\n    backgroundColor: singleQuote('#e9e9e9'),\n    'block-size': '28',\n    'block-color': singleQuote('#ffffff'),\n    'show-value': DEFAULT_FALSE,\n    bindChange: NO_DEFAULT_VALUE,\n    bindChanging: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Switch = {\n    checked: DEFAULT_FALSE,\n    disabled: NO_DEFAULT_VALUE,\n    type: singleQuote('switch'),\n    color: singleQuote('#04BE02'),\n    bindChange: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst Textarea = {\n    value: NO_DEFAULT_VALUE,\n    placeholder: NO_DEFAULT_VALUE,\n    'placeholder-style': NO_DEFAULT_VALUE,\n    'placeholder-class': singleQuote('textarea-placeholder'),\n    disabled: NO_DEFAULT_VALUE,\n    maxlength: '140',\n    'auto-focus': DEFAULT_FALSE,\n    focus: DEFAULT_FALSE,\n    'auto-height': DEFAULT_FALSE,\n    fixed: DEFAULT_FALSE,\n    'cursor-spacing': '0',\n    cursor: '-1',\n    'selection-start': '-1',\n    'selection-end': '-1',\n    bindFocus: NO_DEFAULT_VALUE,\n    bindBlur: NO_DEFAULT_VALUE,\n    bindLineChange: NO_DEFAULT_VALUE,\n    bindInput: NO_DEFAULT_VALUE,\n    bindConfirm: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE\n};\nconst CoverImage = {\n    src: NO_DEFAULT_VALUE,\n    bindLoad: 'eh',\n    bindError: 'eh'\n};\nconst CoverView = Object.assign({ 'scroll-top': DEFAULT_FALSE }, touchEvents);\nconst MovableArea = {\n    'scale-area': DEFAULT_FALSE\n};\nconst MovableView = Object.assign(Object.assign({ direction: 'none', inertia: DEFAULT_FALSE, 'out-of-bounds': DEFAULT_FALSE, x: NO_DEFAULT_VALUE, y: NO_DEFAULT_VALUE, damping: '20', friction: '2', disabled: NO_DEFAULT_VALUE, scale: DEFAULT_FALSE, 'scale-min': '0.5', 'scale-max': '10', 'scale-value': '1', bindChange: NO_DEFAULT_VALUE, bindScale: NO_DEFAULT_VALUE, bindHTouchMove: NO_DEFAULT_VALUE, bindVTouchMove: NO_DEFAULT_VALUE, width: singleQuote('10px'), height: singleQuote('10px') }, touchEvents), animation);\nconst ScrollView = Object.assign(Object.assign({ 'scroll-x': DEFAULT_FALSE, 'scroll-y': DEFAULT_FALSE, 'upper-threshold': '50', 'lower-threshold': '50', 'scroll-top': NO_DEFAULT_VALUE, 'scroll-left': NO_DEFAULT_VALUE, 'scroll-into-view': NO_DEFAULT_VALUE, 'scroll-with-animation': DEFAULT_FALSE, 'enable-back-to-top': DEFAULT_FALSE, bindScrollToUpper: NO_DEFAULT_VALUE, bindScrollToLower: NO_DEFAULT_VALUE, bindScroll: NO_DEFAULT_VALUE }, touchEvents), animation);\nconst Swiper = Object.assign({ 'indicator-dots': DEFAULT_FALSE, 'indicator-color': singleQuote('rgba(0, 0, 0, .3)'), 'indicator-active-color': singleQuote('#000000'), autoplay: DEFAULT_FALSE, current: '0', interval: '5000', duration: '500', circular: DEFAULT_FALSE, vertical: DEFAULT_FALSE, 'previous-margin': singleQuote('0px'), 'next-margin': singleQuote('0px'), 'display-multiple-items': '1', bindChange: NO_DEFAULT_VALUE, bindTransition: NO_DEFAULT_VALUE, bindAnimationFinish: NO_DEFAULT_VALUE }, touchEvents);\nconst SwiperItem = {\n    'item-id': NO_DEFAULT_VALUE\n};\nconst Navigator = {\n    url: NO_DEFAULT_VALUE,\n    'open-type': singleQuote('navigate'),\n    delta: '1',\n    'hover-class': singleQuote('navigator-hover'),\n    'hover-stop-propagation': DEFAULT_FALSE,\n    'hover-start-time': '50',\n    'hover-stay-time': '600',\n    bindSuccess: NO_DEFAULT_VALUE,\n    bindFail: NO_DEFAULT_VALUE,\n    bindComplete: NO_DEFAULT_VALUE\n};\nconst Audio = {\n    id: NO_DEFAULT_VALUE,\n    src: NO_DEFAULT_VALUE,\n    loop: DEFAULT_FALSE,\n    controls: DEFAULT_FALSE,\n    poster: NO_DEFAULT_VALUE,\n    name: NO_DEFAULT_VALUE,\n    author: NO_DEFAULT_VALUE,\n    bindError: NO_DEFAULT_VALUE,\n    bindPlay: NO_DEFAULT_VALUE,\n    bindPause: NO_DEFAULT_VALUE,\n    bindTimeUpdate: NO_DEFAULT_VALUE,\n    bindEnded: NO_DEFAULT_VALUE\n};\nconst Camera = {\n    'device-position': singleQuote('back'),\n    flash: singleQuote('auto'),\n    bindStop: NO_DEFAULT_VALUE,\n    bindError: NO_DEFAULT_VALUE\n};\nconst Image = Object.assign({ src: NO_DEFAULT_VALUE, mode: singleQuote('scaleToFill'), 'lazy-load': DEFAULT_FALSE, bindError: NO_DEFAULT_VALUE, bindLoad: NO_DEFAULT_VALUE }, touchEvents);\nconst LivePlayer = Object.assign({ src: NO_DEFAULT_VALUE, autoplay: DEFAULT_FALSE, muted: DEFAULT_FALSE, orientation: singleQuote('vertical'), 'object-fit': singleQuote('contain'), 'background-mute': DEFAULT_FALSE, 'min-cache': '1', 'max-cache': '3', bindStateChange: NO_DEFAULT_VALUE, bindFullScreenChange: NO_DEFAULT_VALUE, bindNetStatus: NO_DEFAULT_VALUE }, animation);\nconst Video = Object.assign({ src: NO_DEFAULT_VALUE, duration: NO_DEFAULT_VALUE, controls: DEFAULT_TRUE, 'danmu-list': NO_DEFAULT_VALUE, 'danmu-btn': NO_DEFAULT_VALUE, 'enable-danmu': NO_DEFAULT_VALUE, autoplay: DEFAULT_FALSE, loop: DEFAULT_FALSE, muted: DEFAULT_FALSE, 'initial-time': '0', 'page-gesture': DEFAULT_FALSE, direction: NO_DEFAULT_VALUE, 'show-progress': DEFAULT_TRUE, 'show-fullscreen-btn': DEFAULT_TRUE, 'show-play-btn': DEFAULT_TRUE, 'show-center-play-btn': DEFAULT_TRUE, 'enable-progress-gesture': DEFAULT_TRUE, 'object-fit': singleQuote('contain'), poster: NO_DEFAULT_VALUE, 'show-mute-btn': DEFAULT_FALSE, bindPlay: NO_DEFAULT_VALUE, bindPause: NO_DEFAULT_VALUE, bindEnded: NO_DEFAULT_VALUE, bindTimeUpdate: NO_DEFAULT_VALUE, bindFullScreenChange: NO_DEFAULT_VALUE, bindWaiting: NO_DEFAULT_VALUE, bindError: NO_DEFAULT_VALUE }, animation);\nconst Canvas = Object.assign({ 'canvas-id': NO_DEFAULT_VALUE, 'disable-scroll': DEFAULT_FALSE, bindError: NO_DEFAULT_VALUE }, touchEvents);\nconst Ad = {\n    'unit-id': NO_DEFAULT_VALUE,\n    'ad-intervals': NO_DEFAULT_VALUE,\n    bindLoad: NO_DEFAULT_VALUE,\n    bindError: NO_DEFAULT_VALUE,\n    bindClose: NO_DEFAULT_VALUE\n};\nconst WebView = {\n    src: NO_DEFAULT_VALUE,\n    bindMessage: NO_DEFAULT_VALUE,\n    bindLoad: NO_DEFAULT_VALUE,\n    bindError: NO_DEFAULT_VALUE\n};\nconst Block = {};\n// For Vue，因为 slot 标签被 vue 占用了\nconst SlotView = {\n    name: NO_DEFAULT_VALUE\n};\n// For React\n// Slot 和 SlotView 最终都会编译成 <view slot={{ i.name }} />\n// 因为 <slot name=\"{{ i.name }}\" /> 适用性没有前者高（无法添加类和样式）\n// 不给 View 直接加 slot 属性的原因是性能损耗\nconst Slot = {\n    name: NO_DEFAULT_VALUE\n};\nconst NativeSlot = {\n    name: NO_DEFAULT_VALUE\n};\nconst internalComponents = {\n    View,\n    Icon,\n    Progress,\n    RichText,\n    Text,\n    Button,\n    Checkbox,\n    CheckboxGroup,\n    Form,\n    Input,\n    Label,\n    Picker,\n    PickerView,\n    PickerViewColumn,\n    Radio,\n    RadioGroup,\n    Slider,\n    Switch,\n    CoverImage,\n    Textarea,\n    CoverView,\n    MovableArea,\n    MovableView,\n    ScrollView,\n    Swiper,\n    SwiperItem,\n    Navigator,\n    Audio,\n    Camera,\n    Image,\n    LivePlayer,\n    Video,\n    Canvas,\n    Ad,\n    WebView,\n    Block,\n    Map: MapComp,\n    Slot,\n    SlotView,\n    NativeSlot,\n};\nconst controlledComponent = new Set([\n    'input',\n    'checkbox',\n    'picker',\n    'picker-view',\n    'radio',\n    'slider',\n    'switch',\n    'textarea'\n]);\nconst focusComponents = new Set([\n    'input',\n    'textarea'\n]);\nconst voidElements = new Set([\n    'progress',\n    'icon',\n    'rich-text',\n    'input',\n    'textarea',\n    'slider',\n    'switch',\n    'audio',\n    'ad',\n    'official-account',\n    'open-data',\n    'navigation-bar'\n]);\nconst nestElements = new Map([\n    ['view', -1],\n    ['catch-view', -1],\n    ['cover-view', -1],\n    ['static-view', -1],\n    ['pure-view', -1],\n    ['block', -1],\n    ['text', -1],\n    ['static-text', 6],\n    ['slot', 8],\n    ['slot-view', 8],\n    ['label', 6],\n    ['form', 4],\n    ['scroll-view', 4],\n    ['swiper', 4],\n    ['swiper-item', 4]\n]);\n\nvar PLATFORM_TYPE;\n(function (PLATFORM_TYPE) {\n    PLATFORM_TYPE[\"MINI\"] = \"mini\";\n    PLATFORM_TYPE[\"WEB\"] = \"web\";\n    PLATFORM_TYPE[\"RN\"] = \"rn\";\n    PLATFORM_TYPE[\"HARMONY\"] = \"harmony\";\n    PLATFORM_TYPE[\"QUICK\"] = \"quickapp\";\n})(PLATFORM_TYPE || (PLATFORM_TYPE = {}));\nconst PLATFORM_CONFIG_MAP = {\n    h5: {\n        type: PLATFORM_TYPE.WEB\n    },\n    harmony: {\n        type: PLATFORM_TYPE.HARMONY\n    },\n    mini: {\n        type: PLATFORM_TYPE.MINI\n    },\n    rn: {\n        type: PLATFORM_TYPE.RN\n    },\n    quickapp: {\n        type: PLATFORM_TYPE.QUICK\n    }\n};\n\nclass Events {\n    constructor(opts) {\n        var _a;\n        this.callbacks = (_a = opts === null || opts === void 0 ? void 0 : opts.callbacks) !== null && _a !== void 0 ? _a : {};\n    }\n    on(eventName, callback, context) {\n        let event, node, tail, list;\n        if (!callback) {\n            return this;\n        }\n        eventName = eventName.split(Events.eventSplitter);\n        this.callbacks || (this.callbacks = {});\n        const calls = this.callbacks;\n        while ((event = eventName.shift())) {\n            list = calls[event];\n            node = list ? list.tail : {};\n            node.next = tail = {};\n            node.context = context;\n            node.callback = callback;\n            calls[event] = {\n                tail,\n                next: list ? list.next : node\n            };\n        }\n        return this;\n    }\n    once(events, callback, context) {\n        const wrapper = (...args) => {\n            callback.apply(this, args);\n            this.off(events, wrapper, context);\n        };\n        this.on(events, wrapper, context);\n        return this;\n    }\n    off(events, callback, context) {\n        let event, calls, node, tail, cb, ctx;\n        if (!(calls = this.callbacks)) {\n            return this;\n        }\n        if (!(events || callback || context)) {\n            delete this.callbacks;\n            return this;\n        }\n        events = events ? events.split(Events.eventSplitter) : Object.keys(calls);\n        while ((event = events.shift())) {\n            node = calls[event];\n            delete calls[event];\n            if (!node || !(callback || context)) {\n                continue;\n            }\n            tail = node.tail;\n            while ((node = node.next) !== tail) {\n                cb = node.callback;\n                ctx = node.context;\n                if ((callback && cb !== callback) || (context && ctx !== context)) {\n                    this.on(event, cb, ctx);\n                }\n            }\n        }\n        return this;\n    }\n    trigger(events) {\n        let event, node, calls, tail;\n        if (!(calls = this.callbacks)) {\n            return this;\n        }\n        events = events.split(Events.eventSplitter);\n        const rest = [].slice.call(arguments, 1);\n        while ((event = events.shift())) {\n            if ((node = calls[event])) {\n                tail = node.tail;\n                while ((node = node.next) !== tail) {\n                    node.callback.apply(node.context || this, rest);\n                }\n            }\n        }\n        return this;\n    }\n}\nEvents.eventSplitter = ','; // Note: Harmony ACE API 8 开发板不支持使用正则 split 字符串 /\\s+/\n\nfunction isString(o) {\n    return typeof o === 'string';\n}\nfunction isUndefined(o) {\n    return typeof o === 'undefined';\n}\nfunction isNull(o) {\n    return o === null;\n}\nfunction isObject(o) {\n    return o !== null && typeof o === 'object';\n}\nfunction isBoolean(o) {\n    return o === true || o === false;\n}\nfunction isFunction(o) {\n    return typeof o === 'function';\n}\nfunction isNumber(o) {\n    return typeof o === 'number';\n}\nfunction isBooleanStringLiteral(o) {\n    return o === 'true' || o === 'false';\n}\nconst isArray = Array.isArray;\nconst isWebPlatform = () => process.env.TARO_ENV === 'h5' || process.env.TARO_PLATFORM === 'web';\n\nvar HOOK_TYPE;\n(function (HOOK_TYPE) {\n    HOOK_TYPE[HOOK_TYPE[\"SINGLE\"] = 0] = \"SINGLE\";\n    HOOK_TYPE[HOOK_TYPE[\"MULTI\"] = 1] = \"MULTI\";\n    HOOK_TYPE[HOOK_TYPE[\"WATERFALL\"] = 2] = \"WATERFALL\";\n})(HOOK_TYPE || (HOOK_TYPE = {}));\nconst defaultMiniLifecycle = {\n    app: [\n        'onLaunch',\n        'onShow',\n        'onHide'\n    ],\n    page: [\n        'onLoad',\n        'onUnload',\n        'onReady',\n        'onShow',\n        'onHide',\n        [\n            'onPullDownRefresh',\n            'onReachBottom',\n            'onPageScroll',\n            'onResize',\n            'onTabItemTap',\n            'onTitleClick',\n            'onOptionMenuClick',\n            'onPopMenuClick',\n            'onPullIntercept',\n            'onAddToFavorites'\n        ],\n        [\n            'onShareAppMessage',\n            'onShareTimeline'\n        ]\n    ],\n    component: [\n        'attached',\n        'detached'\n    ]\n};\nfunction TaroHook(type, initial) {\n    return {\n        type,\n        initial: initial || null\n    };\n}\nclass TaroHooks extends Events {\n    constructor(hooks, opts) {\n        super(opts);\n        this.hooks = hooks;\n        for (const hookName in hooks) {\n            const { initial } = hooks[hookName];\n            if (isFunction(initial)) {\n                this.on(hookName, initial);\n            }\n        }\n    }\n    tapOneOrMany(hookName, callback) {\n        const list = isFunction(callback) ? [callback] : callback;\n        list.forEach(cb => this.on(hookName, cb));\n    }\n    tap(hookName, callback) {\n        const hooks = this.hooks;\n        const { type, initial } = hooks[hookName];\n        if (type === HOOK_TYPE.SINGLE) {\n            this.off(hookName);\n            this.on(hookName, isFunction(callback) ? callback : callback[callback.length - 1]);\n        }\n        else {\n            initial && this.off(hookName, initial);\n            this.tapOneOrMany(hookName, callback);\n        }\n    }\n    call(hookName, ...rest) {\n        var _a;\n        const hook = this.hooks[hookName];\n        if (!hook)\n            return;\n        const { type } = hook;\n        const calls = this.callbacks;\n        if (!calls)\n            return;\n        const list = calls[hookName];\n        if (list) {\n            const tail = list.tail;\n            let node = list.next;\n            let args = rest;\n            let res;\n            while (node !== tail) {\n                res = (_a = node.callback) === null || _a === void 0 ? void 0 : _a.apply(node.context || this, args);\n                if (type === HOOK_TYPE.WATERFALL) {\n                    const params = [res];\n                    args = params;\n                }\n                node = node.next;\n            }\n            return res;\n        }\n    }\n    isExist(hookName) {\n        var _a;\n        return Boolean((_a = this.callbacks) === null || _a === void 0 ? void 0 : _a[hookName]);\n    }\n}\nconst hooks = new TaroHooks({\n    getMiniLifecycle: TaroHook(HOOK_TYPE.SINGLE, defaultConfig => defaultConfig),\n    getMiniLifecycleImpl: TaroHook(HOOK_TYPE.SINGLE, function () {\n        return this.call('getMiniLifecycle', defaultMiniLifecycle);\n    }),\n    getLifecycle: TaroHook(HOOK_TYPE.SINGLE, (instance, lifecycle) => instance[lifecycle]),\n    getPathIndex: TaroHook(HOOK_TYPE.SINGLE, indexOfNode => `[${indexOfNode}]`),\n    getEventCenter: TaroHook(HOOK_TYPE.SINGLE, Events => new Events()),\n    isBubbleEvents: TaroHook(HOOK_TYPE.SINGLE, eventName => {\n        /**\n         * 支持冒泡的事件, 除 支付宝小程序外，其余的可冒泡事件都和微信保持一致\n         * 详见 见 https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html\n         */\n        const BUBBLE_EVENTS = new Set([\n            'touchstart',\n            'touchmove',\n            'touchcancel',\n            'touchend',\n            'touchforcechange',\n            'tap',\n            'longpress',\n            'longtap',\n            'transitionend',\n            'animationstart',\n            'animationiteration',\n            'animationend'\n        ]);\n        return BUBBLE_EVENTS.has(eventName);\n    }),\n    getSpecialNodes: TaroHook(HOOK_TYPE.SINGLE, () => ['view', 'text', 'image']),\n    onRemoveAttribute: TaroHook(HOOK_TYPE.SINGLE),\n    batchedEventUpdates: TaroHook(HOOK_TYPE.SINGLE),\n    mergePageInstance: TaroHook(HOOK_TYPE.SINGLE),\n    modifyPageObject: TaroHook(HOOK_TYPE.SINGLE),\n    createPullDownComponent: TaroHook(HOOK_TYPE.SINGLE),\n    getDOMNode: TaroHook(HOOK_TYPE.SINGLE),\n    modifyHydrateData: TaroHook(HOOK_TYPE.SINGLE),\n    modifySetAttrPayload: TaroHook(HOOK_TYPE.SINGLE),\n    modifyRmAttrPayload: TaroHook(HOOK_TYPE.SINGLE),\n    onAddEvent: TaroHook(HOOK_TYPE.SINGLE),\n    modifyMpEvent: TaroHook(HOOK_TYPE.MULTI),\n    modifyMpEventImpl: TaroHook(HOOK_TYPE.SINGLE, function (e) {\n        try {\n            // 有些小程序的事件对象的某些属性只读\n            this.call('modifyMpEvent', e);\n        }\n        catch (error) {\n            console.warn('[Taro modifyMpEvent hook Error]: ' + (error === null || error === void 0 ? void 0 : error.message));\n        }\n    }),\n    modifyTaroEvent: TaroHook(HOOK_TYPE.MULTI),\n    modifyDispatchEvent: TaroHook(HOOK_TYPE.MULTI),\n    initNativeApi: TaroHook(HOOK_TYPE.MULTI),\n    patchElement: TaroHook(HOOK_TYPE.MULTI)\n});\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\nconst noop = (..._) => { };\n/**\n * box creates a boxed value.\n *\n * @typeparam T Value type.\n * @param v Value.\n * @returns Boxed value.\n */\nconst box = (v) => ({ v });\n/**\n * box creates a boxed value.\n *\n * @typeparam T Value type.\n * @param b Boxed value.\n * @returns Value.\n */\nconst unbox = (b) => b.v;\nfunction toDashed(s) {\n    return s.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n}\nfunction toCamelCase(s) {\n    let camel = '';\n    let nextCap = false;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] !== '-') {\n            camel += nextCap ? s[i].toUpperCase() : s[i];\n            nextCap = false;\n        }\n        else {\n            nextCap = true;\n        }\n    }\n    return camel;\n}\nconst toKebabCase = function (string) {\n    return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\nfunction capitalize(s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\n/**\n * ensure takes a condition and throw a error if the condition fails,\n * like failure::ensure: https://docs.rs/failure/0.1.1/failure/macro.ensure.html\n * @param condition condition.\n * @param msg error message.\n */\nfunction ensure(condition, msg) {\n    if (!condition) {\n        if (process.env.NODE_ENV !== 'production') {\n            const reportIssue = '\\n如有疑问，请提交 issue 至：https://github.com/nervjs/taro/issues';\n            throw new Error(msg + reportIssue);\n        }\n        else {\n            throw new Error(msg);\n        }\n    }\n}\nfunction warn(condition, msg) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (condition) {\n            console.warn(`[taro warn] ${msg}`);\n        }\n    }\n}\nfunction queryToJson(str) {\n    const dec = decodeURIComponent;\n    const qp = str.split('&');\n    const ret = {};\n    let name;\n    let val;\n    for (let i = 0, l = qp.length, item; i < l; ++i) {\n        item = qp[i];\n        if (item.length) {\n            const s = item.indexOf('=');\n            if (s < 0) {\n                name = dec(item);\n                val = '';\n            }\n            else {\n                name = dec(item.slice(0, s));\n                val = dec(item.slice(s + 1));\n            }\n            if (typeof ret[name] === 'string') { // inline'd type check\n                ret[name] = [ret[name]];\n            }\n            if (Array.isArray(ret[name])) {\n                ret[name].push(val);\n            }\n            else {\n                ret[name] = val;\n            }\n        }\n    }\n    return ret; // Object\n}\nlet _uniqueId = 1;\nconst _loadTime = (new Date()).getTime().toString();\nfunction getUniqueKey() {\n    return _loadTime + (_uniqueId++);\n}\nconst cacheData = {};\nfunction cacheDataSet(key, val) {\n    cacheData[key] = val;\n}\nfunction cacheDataGet(key, delelteAfterGet) {\n    const temp = cacheData[key];\n    delelteAfterGet && delete cacheData[key];\n    return temp;\n}\nfunction cacheDataHas(key) {\n    return key in cacheData;\n}\nfunction mergeInternalComponents(components) {\n    Object.keys(components).forEach(name => {\n        if (name in internalComponents) {\n            Object.assign(internalComponents[name], components[name]);\n        }\n        else {\n            internalComponents[name] = components[name];\n        }\n    });\n    return internalComponents;\n}\nfunction getComponentsAlias(origin) {\n    const mapping = {};\n    const viewAttrs = origin.View;\n    const extraList = {\n        '#text': {},\n        StaticView: viewAttrs,\n        StaticImage: origin.Image,\n        StaticText: origin.Text,\n        PureView: viewAttrs,\n        CatchView: viewAttrs\n    };\n    origin = Object.assign(Object.assign({}, origin), extraList);\n    Object.keys(origin)\n        .sort((a, b) => {\n        const reg = /^(Static|Pure|Catch)*(View|Image|Text)$/;\n        const isACommonly = reg.test(a);\n        const isBCommonly = reg.test(b);\n        if (isACommonly && isBCommonly) {\n            return a > b ? 1 : -1;\n        }\n        else if (isACommonly) {\n            return -1;\n        }\n        else if (isBCommonly) {\n            return 1;\n        }\n        else {\n            return a >= b ? 1 : -1;\n        }\n    })\n        .forEach((key, num) => {\n        const obj = {\n            _num: String(num)\n        };\n        Object.keys(origin[key])\n            .filter(attr => !(/^bind/.test(attr)) && !['focus', 'blur'].includes(attr))\n            .sort()\n            .forEach((attr, index) => {\n            obj[toCamelCase(attr)] = 'p' + index;\n        });\n        mapping[toDashed(key)] = obj;\n    });\n    return mapping;\n}\nfunction getPlatformType(platform = 'weapp', configNameOrType = PLATFORM_TYPE.MINI) {\n    if (Object.keys(PLATFORM_CONFIG_MAP).includes(platform)) {\n        configNameOrType = platform;\n    }\n    const param = PLATFORM_CONFIG_MAP[configNameOrType] || {};\n    return param.type || configNameOrType;\n}\nfunction mergeReconciler(hostConfig, hooksForTest) {\n    const obj = hooksForTest || hooks;\n    const keys = Object.keys(hostConfig);\n    keys.forEach(key => {\n        obj.tap(key, hostConfig[key]);\n    });\n}\nfunction nonsupport(api) {\n    return function () {\n        console.warn(`小程序暂不支持 ${api}`);\n    };\n}\nfunction setUniqueKeyToRoute(key, obj) {\n    const routerParamsPrivateKey = '__key_';\n    const useDataCacheApis = [\n        'navigateTo',\n        'redirectTo',\n        'reLaunch',\n        'switchTab'\n    ];\n    if (useDataCacheApis.indexOf(key) > -1) {\n        const url = obj.url = obj.url || '';\n        const hasMark = url.indexOf('?') > -1;\n        const cacheKey = getUniqueKey();\n        obj.url += (hasMark ? '&' : '?') + `${routerParamsPrivateKey}=${cacheKey}`;\n    }\n}\nfunction indent(str, size) {\n    return str.split('\\n')\n        .map((line, index) => {\n        const indent = index === 0 ? '' : Array(size).fill(' ').join('');\n        return indent + line;\n    })\n        .join('\\n');\n}\n\nconst needPromiseApis = new Set([\n    'addPhoneContact',\n    'authorize',\n    'canvasGetImageData',\n    'canvasPutImageData',\n    'canvasToTempFilePath',\n    'checkSession',\n    'chooseAddress',\n    'chooseImage',\n    'chooseInvoiceTitle',\n    'chooseLocation',\n    'chooseVideo',\n    'clearStorage',\n    'closeBLEConnection',\n    'closeBluetoothAdapter',\n    'closeSocket',\n    'compressImage',\n    'connectSocket',\n    'createBLEConnection',\n    'downloadFile',\n    'exitMiniProgram',\n    'getAvailableAudioSources',\n    'getBLEDeviceCharacteristics',\n    'getBLEDeviceServices',\n    'getBatteryInfo',\n    'getBeacons',\n    'getBluetoothAdapterState',\n    'getBluetoothDevices',\n    'getClipboardData',\n    'getConnectedBluetoothDevices',\n    'getConnectedWifi',\n    'getExtConfig',\n    'getFileInfo',\n    'getImageInfo',\n    'getLocation',\n    'getNetworkType',\n    'getSavedFileInfo',\n    'getSavedFileList',\n    'getScreenBrightness',\n    'getSetting',\n    'getStorage',\n    'getStorageInfo',\n    'getSystemInfo',\n    'getUserInfo',\n    'getWifiList',\n    'hideHomeButton',\n    'hideShareMenu',\n    'hideTabBar',\n    'hideTabBarRedDot',\n    'loadFontFace',\n    'login',\n    'makePhoneCall',\n    'navigateBack',\n    'navigateBackMiniProgram',\n    'navigateTo',\n    'navigateToBookshelf',\n    'navigateToMiniProgram',\n    'notifyBLECharacteristicValueChange',\n    'hideKeyboard',\n    'hideLoading',\n    'hideNavigationBarLoading',\n    'hideToast',\n    'openBluetoothAdapter',\n    'openDocument',\n    'openLocation',\n    'openSetting',\n    'pageScrollTo',\n    'previewImage',\n    'queryBookshelf',\n    'reLaunch',\n    'readBLECharacteristicValue',\n    'redirectTo',\n    'removeSavedFile',\n    'removeStorage',\n    'removeTabBarBadge',\n    'requestSubscribeMessage',\n    'saveFile',\n    'saveImageToPhotosAlbum',\n    'saveVideoToPhotosAlbum',\n    'scanCode',\n    'sendSocketMessage',\n    'setBackgroundColor',\n    'setBackgroundTextStyle',\n    'setClipboardData',\n    'setEnableDebug',\n    'setInnerAudioOption',\n    'setKeepScreenOn',\n    'setNavigationBarColor',\n    'setNavigationBarTitle',\n    'setScreenBrightness',\n    'setStorage',\n    'setTabBarBadge',\n    'setTabBarItem',\n    'setTabBarStyle',\n    'showActionSheet',\n    'showFavoriteGuide',\n    'showLoading',\n    'showModal',\n    'showShareMenu',\n    'showTabBar',\n    'showTabBarRedDot',\n    'showToast',\n    'startBeaconDiscovery',\n    'startBluetoothDevicesDiscovery',\n    'startDeviceMotionListening',\n    'startPullDownRefresh',\n    'stopBeaconDiscovery',\n    'stopBluetoothDevicesDiscovery',\n    'stopCompass',\n    'startCompass',\n    'startAccelerometer',\n    'stopAccelerometer',\n    'showNavigationBarLoading',\n    'stopDeviceMotionListening',\n    'stopPullDownRefresh',\n    'switchTab',\n    'uploadFile',\n    'vibrateLong',\n    'vibrateShort',\n    'writeBLECharacteristicValue'\n]);\nfunction getCanIUseWebp(taro) {\n    return function () {\n        var _a;\n        const res = (_a = taro.getSystemInfoSync) === null || _a === void 0 ? void 0 : _a.call(taro);\n        if (!res) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error('不支持 API canIUseWebp');\n            }\n            return false;\n        }\n        const { platform } = res;\n        const platformLower = platform.toLowerCase();\n        if (platformLower === 'android' || platformLower === 'devtools') {\n            return true;\n        }\n        return false;\n    };\n}\nfunction getNormalRequest(global) {\n    return function request(options) {\n        options = options\n            ? (isString(options)\n                ? { url: options }\n                : options)\n            : {};\n        const originSuccess = options.success;\n        const originFail = options.fail;\n        const originComplete = options.complete;\n        let requestTask;\n        const p = new Promise((resolve, reject) => {\n            options.success = res => {\n                originSuccess && originSuccess(res);\n                resolve(res);\n            };\n            options.fail = res => {\n                originFail && originFail(res);\n                reject(res);\n            };\n            options.complete = res => {\n                originComplete && originComplete(res);\n            };\n            requestTask = global.request(options);\n        });\n        equipTaskMethodsIntoPromise(requestTask, p);\n        p.abort = (cb) => {\n            cb && cb();\n            if (requestTask) {\n                requestTask.abort();\n            }\n            return p;\n        };\n        return p;\n    };\n}\nfunction processApis(taro, global, config = {}) {\n    const patchNeedPromiseApis = config.needPromiseApis || [];\n    const _needPromiseApis = new Set([...patchNeedPromiseApis, ...needPromiseApis]);\n    const preserved = [\n        'getEnv',\n        'interceptors',\n        'Current',\n        'getCurrentInstance',\n        'options',\n        'nextTick',\n        'eventCenter',\n        'Events',\n        'preload',\n        'webpackJsonp'\n    ];\n    const apis = new Set(!config.isOnlyPromisify\n        ? Object.keys(global).filter(api => preserved.indexOf(api) === -1)\n        : patchNeedPromiseApis);\n    if (config.modifyApis) {\n        config.modifyApis(apis);\n    }\n    apis.forEach(key => {\n        if (_needPromiseApis.has(key)) {\n            const originKey = key;\n            taro[originKey] = (options = {}, ...args) => {\n                let key = originKey;\n                // 第一个参数 options 为字符串，单独处理\n                if (typeof options === 'string') {\n                    if (args.length) {\n                        return global[key](options, ...args);\n                    }\n                    return global[key](options);\n                }\n                // 改变 key 或 option 字段，如需要把支付宝标准的字段对齐微信标准的字段\n                if (config.transformMeta) {\n                    const transformResult = config.transformMeta(key, options);\n                    key = transformResult.key;\n                    options = transformResult.options;\n                    // 新 key 可能不存在\n                    if (!global.hasOwnProperty(key)) {\n                        return nonsupport(key)();\n                    }\n                }\n                let task = null;\n                const obj = Object.assign({}, options);\n                // 为页面跳转相关的 API 设置一个随机数作为路由参数。为了给 runtime 区分页面。\n                setUniqueKeyToRoute(key, options);\n                // Promise 化\n                const p = new Promise((resolve, reject) => {\n                    obj.success = res => {\n                        var _a, _b;\n                        (_a = config.modifyAsyncResult) === null || _a === void 0 ? void 0 : _a.call(config, key, res);\n                        (_b = options.success) === null || _b === void 0 ? void 0 : _b.call(options, res);\n                        if (key === 'connectSocket') {\n                            resolve(Promise.resolve().then(() => task ? Object.assign(task, res) : res));\n                        }\n                        else {\n                            resolve(res);\n                        }\n                    };\n                    obj.fail = res => {\n                        var _a;\n                        (_a = options.fail) === null || _a === void 0 ? void 0 : _a.call(options, res);\n                        reject(res);\n                    };\n                    obj.complete = res => {\n                        var _a;\n                        (_a = options.complete) === null || _a === void 0 ? void 0 : _a.call(options, res);\n                    };\n                    if (args.length) {\n                        task = global[key](obj, ...args);\n                    }\n                    else {\n                        task = global[key](obj);\n                    }\n                });\n                // 给 promise 对象挂载属性\n                if (['uploadFile', 'downloadFile'].includes(key)) {\n                    equipTaskMethodsIntoPromise(task, p);\n                    p.progress = cb => {\n                        task === null || task === void 0 ? void 0 : task.onProgressUpdate(cb);\n                        return p;\n                    };\n                    p.abort = cb => {\n                        cb === null || cb === void 0 ? void 0 : cb();\n                        task === null || task === void 0 ? void 0 : task.abort();\n                        return p;\n                    };\n                }\n                return p;\n            };\n        }\n        else {\n            let platformKey = key;\n            // 改变 key 或 option 字段，如需要把支付宝标准的字段对齐微信标准的字段\n            if (config.transformMeta) {\n                platformKey = config.transformMeta(key, {}).key;\n            }\n            // API 不存在\n            if (!global.hasOwnProperty(platformKey)) {\n                taro[key] = nonsupport(key);\n                return;\n            }\n            if (isFunction(global[key])) {\n                taro[key] = (...args) => {\n                    if (config.handleSyncApis) {\n                        return config.handleSyncApis(key, global, args);\n                    }\n                    else {\n                        return global[platformKey].apply(global, args);\n                    }\n                };\n            }\n            else {\n                taro[key] = global[platformKey];\n            }\n        }\n    });\n    !config.isOnlyPromisify && equipCommonApis(taro, global, config);\n}\n/**\n * 挂载常用 API\n * @param taro Taro 对象\n * @param global 小程序全局对象，如微信的 wx，支付宝的 my\n */\nfunction equipCommonApis(taro, global, apis = {}) {\n    taro.canIUseWebp = getCanIUseWebp(taro);\n    taro.getCurrentPages = getCurrentPages || nonsupport('getCurrentPages');\n    taro.getApp = getApp || nonsupport('getApp');\n    taro.env = global.env || {};\n    try {\n        taro.requirePlugin = requirePlugin || nonsupport('requirePlugin');\n    }\n    catch (error) {\n        taro.requirePlugin = nonsupport('requirePlugin');\n    }\n    // request & interceptors\n    const request = apis.request || getNormalRequest(global);\n    function taroInterceptor(chain) {\n        return request(chain.requestParams);\n    }\n    const link = new taro.Link(taroInterceptor);\n    taro.request = link.request.bind(link);\n    taro.addInterceptor = link.addInterceptor.bind(link);\n    taro.cleanInterceptors = link.cleanInterceptors.bind(link);\n    taro.miniGlobal = taro.options.miniGlobal = global;\n}\n/**\n * 将Task对象中的方法挂载到promise对象中，适配小程序api原生返回结果\n * @param task Task对象 {RequestTask | DownloadTask | UploadTask}\n * @param promise Promise\n */\nfunction equipTaskMethodsIntoPromise(task, promise) {\n    if (!task || !promise)\n        return;\n    const taskMethods = ['abort', 'onHeadersReceived', 'offHeadersReceived', 'onProgressUpdate', 'offProgressUpdate', 'onChunkReceived', 'offChunkReceived'];\n    task && taskMethods.forEach(method => {\n        if (method in task) {\n            promise[method] = task[method].bind(task);\n        }\n    });\n}\n\nexport { EMPTY_ARR, EMPTY_OBJ, Events, HOOK_TYPE, PLATFORM_CONFIG_MAP, PLATFORM_TYPE, TaroHook, TaroHooks, animation, box, cacheDataGet, cacheDataHas, cacheDataSet, capitalize, controlledComponent, ensure, focusComponents, getComponentsAlias, getPlatformType, getUniqueKey, hasOwn, hooks, indent, internalComponents, isArray, isBoolean, isBooleanStringLiteral, isFunction, isNull, isNumber, isObject, isString, isUndefined, isWebPlatform, mergeInternalComponents, mergeReconciler, nestElements, nonsupport, noop, processApis, queryToJson, setUniqueKeyToRoute, singleQuote, toCamelCase, toDashed, toKebabCase, touchEvents, unbox, voidElements, warn };\n//# sourceMappingURL=shared.esm.js.map\n","import { isWebPlatform } from '@tarojs/shared'\n\nexport const ENV_TYPE = {\n  WEAPP: 'WEAPP',\n  SWAN: 'SWAN',\n  ALIPAY: 'ALIPAY',\n  TT: 'TT',\n  QQ: 'QQ',\n  JD: 'JD',\n  WEB: 'WEB',\n  RN: 'RN',\n  HARMONY: 'HARMONY',\n  QUICKAPP: 'QUICKAPP'\n}\n\nconst isWeb = isWebPlatform()\n\nexport function getEnv () {\n  if (process.env.TARO_ENV === 'weapp') {\n    return ENV_TYPE.WEAPP\n  } else if (process.env.TARO_ENV === 'alipay') {\n    return ENV_TYPE.ALIPAY\n  } else if (process.env.TARO_ENV === 'swan') {\n    return ENV_TYPE.SWAN\n  } else if (process.env.TARO_ENV === 'tt') {\n    return ENV_TYPE.TT\n  } else if (process.env.TARO_ENV === 'jd') {\n    return ENV_TYPE.JD\n  } else if (process.env.TARO_ENV === 'qq') {\n    return ENV_TYPE.QQ\n  } else if (isWeb) {\n    return ENV_TYPE.WEB\n  } else if (process.env.TARO_ENV === 'rn') {\n    return ENV_TYPE.RN\n  } else if (process.env.TARO_ENV === 'harmony') {\n    return ENV_TYPE.HARMONY\n  } else if (process.env.TARO_ENV === 'quickapp') {\n    return ENV_TYPE.QUICKAPP\n  } else {\n    return process.env.TARO_ENV || 'Unknown'\n  }\n}\n","import { isFunction } from '../utils'\n\nexport default class Chain {\n  constructor (requestParams, interceptors, index) {\n    this.index = index || 0\n    this.requestParams = requestParams\n    this.interceptors = interceptors || []\n  }\n\n  proceed (requestParams) {\n    this.requestParams = requestParams\n    if (this.index >= this.interceptors.length) {\n      throw new Error('chain 参数错误, 请勿直接修改 request.chain')\n    }\n    const nextInterceptor = this._getNextInterceptor()\n    const nextChain = this._getNextChain()\n    const p = nextInterceptor(nextChain)\n    const res = p.catch(err => Promise.reject(err))\n    Object.keys(p).forEach(k => isFunction(p[k]) && (res[k] = p[k]))\n    return res\n  }\n\n  _getNextInterceptor () {\n    return this.interceptors[this.index]\n  }\n\n  _getNextChain () {\n    return new Chain(this.requestParams, this.interceptors, this.index + 1)\n  }\n}\n","import Chain from './chain'\n\nexport default class Link {\n  constructor (interceptor) {\n    this.taroInterceptor = interceptor\n    this.chain = new Chain()\n  }\n\n  request (requestParams) {\n    const chain = this.chain\n    const taroInterceptor = this.taroInterceptor\n\n    chain.interceptors = chain.interceptors\n      .filter(interceptor => interceptor !== taroInterceptor)\n      .concat(taroInterceptor)\n\n    return chain.proceed({ ...requestParams })\n  }\n\n  addInterceptor (interceptor) {\n    this.chain.interceptors.push(interceptor)\n  }\n\n  cleanInterceptors () {\n    this.chain = new Chain()\n  }\n}\n","import { isFunction, isUndefined } from '../utils'\n\nexport function timeoutInterceptor (chain) {\n  const requestParams = chain.requestParams\n  let p\n  const res = new Promise((resolve, reject) => {\n    let timeout = setTimeout(() => {\n      timeout = null\n      reject(new Error('网络链接超时,请稍后再试！'))\n    }, (requestParams && requestParams.timeout) || 60000)\n\n    p = chain.proceed(requestParams)\n    p\n      .then(res => {\n        if (!timeout) return\n        clearTimeout(timeout)\n        resolve(res)\n      })\n      .catch(err => {\n        timeout && clearTimeout(timeout)\n        reject(err)\n      })\n  })\n  if (!isUndefined(p) && isFunction(p.abort)) res.abort = p.abort\n\n  return res\n}\n\nexport function logInterceptor (chain) {\n  const requestParams = chain.requestParams\n  const { method, data, url } = requestParams\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.log(`http ${method || 'GET'} --> ${url} data: `, data)\n  }\n\n  const p = chain.proceed(requestParams)\n  const res = p\n    .then(res => {\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.log(`http <-- ${url} result:`, res)\n      }\n      return res\n    })\n  if (isFunction(p.abort)) res.abort = p.abort\n\n  return res\n}\n","import { isFunction, isObject } from './utils'\n\nexport function Behavior (options) {\n  return options\n}\n\nexport function getPreload (current) {\n  return function (key, val) {\n    current.preloadData = isObject(key)\n      ? key\n      : {\n        [key]: val\n      }\n  }\n}\n\nconst defaultDesignWidth = 750\nconst defaultDesignRatio = {\n  640: 2.34 / 2,\n  750: 1,\n  828: 1.81 / 2\n}\nconst defaultBaseFontSize = 20\n\nexport function getInitPxTransform (taro) {\n  return function (config) {\n    const {\n      designWidth = defaultDesignWidth,\n      deviceRatio = defaultDesignRatio,\n      baseFontSize = defaultBaseFontSize\n    } = config\n    taro.config = taro.config || {}\n    taro.config.designWidth = designWidth\n    taro.config.deviceRatio = deviceRatio\n    taro.config.baseFontSize = baseFontSize\n  }\n}\n\nexport function getPxTransform (taro) {\n  return function (size) {\n    const config = taro.config || {}\n    const deviceRatio = config.deviceRatio || defaultDesignRatio\n    const designWidth = (((input = 0) => isFunction(config.designWidth)\n      ? config.designWidth(input)\n      : config.designWidth || defaultDesignWidth))(size)\n    if (!(designWidth in deviceRatio)) {\n      throw new Error(`deviceRatio 配置中不存在 ${designWidth} 的设置！`)\n    }\n    return (parseInt(size, 10) * deviceRatio[designWidth]) + 'rpx'\n  }\n}\n","/* eslint-disable camelcase */\nimport './polyfill'\n\nimport {\n  Current,\n  eventCenter,\n  Events,\n  getCurrentInstance,\n  nextTick,\n  options\n} from '@tarojs/runtime'\n\nimport { ENV_TYPE, getEnv } from './env'\nimport Link from './interceptor'\nimport * as interceptors from './interceptor/interceptors'\nimport {\n  Behavior,\n  getInitPxTransform,\n  getPreload,\n  getPxTransform\n} from './tools'\n\nconst Taro = {\n  Behavior,\n  getEnv,\n  ENV_TYPE,\n  Link,\n  interceptors,\n  Current,\n  getCurrentInstance,\n  options,\n  nextTick,\n  eventCenter,\n  Events,\n  getInitPxTransform\n}\n\nTaro.initPxTransform = getInitPxTransform(Taro)\nTaro.preload = getPreload(Current)\nTaro.pxTransform = getPxTransform(Taro)\n\nexport default Taro\n","import {\n  AppInstance, Current,\n  Func, getPageInstance,\n  injectPageInstance,\n  PageLifeCycle\n} from '@tarojs/runtime'\nimport { isArray, isFunction, isUndefined } from '@tarojs/shared'\nimport {\n  inject,\n  onMounted,\n  onUnmounted,\n  ref\n} from 'vue'\n\nfunction createTaroHook (lifecycle: keyof PageLifeCycle | keyof AppInstance) {\n  return (fn: Func) => {\n    const id = inject<string>('id')!\n    const fnRef = ref(fn)\n\n    let inst: any\n    let callback\n    onMounted(() => {\n      inst = getPageInstance(id)\n      if (inst === undefined) {\n        inst = Object.create({\n          $options: {}\n        })\n        injectPageInstance(inst!, id)\n      }\n      inst = inst.$options\n\n      callback = (...args: any) => fnRef.value(...args)\n      const currentCallback = inst[lifecycle]\n\n      if (isUndefined(currentCallback)) {\n        inst[lifecycle] = callback\n      } else if (isFunction(currentCallback)) {\n        inst[lifecycle] = [inst[lifecycle], callback]\n      } else if (isArray(currentCallback)) {\n        inst[lifecycle] = [...currentCallback, callback]\n      }\n    })\n\n    onUnmounted(() => {\n      if (!inst || !callback) {\n        return\n      }\n      const list = inst![lifecycle]\n      if (list === callback) {\n        inst[lifecycle] = undefined\n      } else if (isArray(list)) {\n        inst[lifecycle] = list.filter(item => item !== callback)\n      }\n      inst = null\n      callback = null\n    })\n  }\n}\n\n/** LifeCycle */\nexport const useDidShow = createTaroHook('onShow')\nexport const useDidHide = createTaroHook('onHide')\n\n/** Page */\nexport const useLoad = createTaroHook('onLoad')\nexport const usePageScroll = createTaroHook('onPageScroll')\nexport const usePullDownRefresh = createTaroHook('onPullDownRefresh')\nexport const usePullIntercept = createTaroHook('onPullIntercept')\nexport const useReachBottom = createTaroHook('onReachBottom')\nexport const useResize = createTaroHook('onResize')\nexport const useUnload = createTaroHook('onUnload')\n\n/** Mini-Program */\nexport const useAddToFavorites = createTaroHook('onAddToFavorites')\nexport const useOptionMenuClick = createTaroHook('onOptionMenuClick')\nexport const useSaveExitState = createTaroHook('onSaveExitState')\nexport const useShareAppMessage = createTaroHook('onShareAppMessage')\nexport const useShareTimeline = createTaroHook('onShareTimeline')\nexport const useTitleClick = createTaroHook('onTitleClick')\n\n/** Router */\nexport const useReady = createTaroHook('onReady')\nexport const useRouter = () => {\n  // return dynamic ? Current.router : React.useMemo(() => Current.router, [])\n  return Current.router\n}\nexport const useTabItemTap = createTaroHook('onTabItemTap')\n","export const setGlobalDataPlugin = {\n  install: (app, data) => {\n    app.taroGlobalData = data\n  }\n}\n","import { Current } from '@tarojs/runtime'\n\n/**\n * set writable, enumerable to true\n */\nexport function setDefaultDescriptor (obj: Record<string, any>) {\n  obj.writable = true\n  obj.enumerable = true\n  return obj\n}\n\n/**\n * 设置入口的路由参数\n * @param options 小程序传入的参数\n */\nexport function setRouterParams (options) {\n  Current.router = {\n    params: options?.query,\n    ...options\n  }\n}\n","import { Current, injectPageInstance } from '@tarojs/runtime'\nimport { ensure, hooks, isArray, isFunction, isWebPlatform } from '@tarojs/shared'\nimport { provide } from 'vue'\n\nimport { setDefaultDescriptor, setRouterParams } from './utils'\n\nimport type { AppInstance, TaroElement } from '@tarojs/runtime'\nimport type { AppConfig as Config } from '@tarojs/taro'\nimport type {\n  App,\n  Component,\n  ComponentOptions,\n  ComponentPublicInstance,\n  h as createElement,\n  VNode\n} from '@vue/runtime-core'\n\nconst isWeb = isWebPlatform()\n\nexport function setReconciler () {\n  hooks.tap('getLifecycle', function (instance, lifecycle) {\n    return instance.$options[lifecycle]\n  })\n\n  if (isWeb) {\n    hooks.tap('createPullDownComponent', (component, path, h: typeof createElement) => {\n      const inject = {\n        props: {\n          tid: String\n        },\n        created () {\n          injectPageInstance(this, path)\n        }\n      }\n\n      component.mixins = isArray(component.mixins)\n        ? component.mixins.push(inject)\n        : [inject]\n\n      return {\n        render () {\n          return h(\n            'taro-pull-to-refresh',\n            {\n              class: 'hydrated'\n            },\n            [h(component, this.$slots.default)]\n          )\n        }\n      }\n    })\n\n    hooks.tap('getDOMNode', el => {\n      return el.$el as any\n    })\n  }\n}\n\nfunction createVue3Page (h: typeof createElement, id: string) {\n  return function (component): VNode {\n    // 处理类组件\n    component = isClassComponent(component) ? component.__vccOpts : component\n    const inject = {\n      props: {\n        tid: String\n      },\n      created () {\n        injectPageInstance(this, id)\n      }\n    }\n\n    if (isArray(component.mixins)) {\n      const mixins = component.mixins\n      const idx = mixins.length - 1\n      if (!mixins[idx].props?.tid) {\n        // mixins 里还没注入过，直接推入数组\n        component.mixins.push(inject)\n      } else {\n        // mixins 里已经注入过，代替前者\n        component.mixins[idx] = inject\n      }\n    } else {\n      component.mixins = [inject]\n    }\n\n    const ProviderComponent = {\n      setup () {\n        provide('id', id)\n      },\n      render () {\n        return this.$slots.default()\n      }\n    }\n    const RootElement = isWeb ? 'div' : 'root'\n    const PageComponent = Object.assign({}, component)\n    const option = PageComponent.props?.option?.default?.() || {}\n\n    return h(\n      ProviderComponent,\n      {\n        key: id\n      },\n      {\n        default () {\n          return [\n            h(\n              RootElement,\n              {\n                id,\n                class: isWeb ? 'taro_page' : ''\n              },\n              [\n                h(PageComponent, { tid: id, option })\n              ]\n            )\n          ]\n        }\n      }\n    )\n  }\n}\n\nexport function createVue3App (app: App<TaroElement>, h: typeof createElement, config: Config) {\n  let pages: VNode[] = []\n  let appInstance: ComponentPublicInstance\n\n  ensure(!(isFunction(app._component) && !isClassComponent(app._component)), '入口组件不支持使用函数式组件')\n\n  setReconciler()\n\n  ;(app._component as ComponentOptions).render = function () {\n    return pages.slice()\n  }\n\n  if (!isWeb) {\n    appInstance = app.mount('#app')\n  }\n\n  const [ONLAUNCH, ONSHOW, ONHIDE] = hooks.call('getMiniLifecycleImpl')!.app\n\n  const appConfig: AppInstance = Object.create({\n    mount (component: Component, id: string, cb: () => void) {\n      const page = createVue3Page(h, id)(component)\n      pages.push(page)\n      this.updateAppInstance(cb)\n    },\n\n    unmount (id: string, cb: () => void) {\n      pages = pages.filter(page => page.key !== id)\n      this.updateAppInstance(cb)\n    },\n\n    updateAppInstance (cb?: (() => void | undefined)) {\n      appInstance.$forceUpdate()\n      appInstance.$nextTick(cb)\n    }\n  }, {\n    config: setDefaultDescriptor({\n      configurable: true,\n      value: config\n    }),\n\n    [ONLAUNCH]: setDefaultDescriptor({\n      value (options) {\n        setRouterParams(options)\n        if (isWeb) {\n          appInstance = app.mount(`#${config.appId || 'app'}`)\n        }\n\n        // 把 App Class 上挂载的额外属性同步到全局 app 对象中\n        // eslint-disable-next-line dot-notation\n        if (app['taroGlobalData']) {\n          // eslint-disable-next-line dot-notation\n          const globalData = app['taroGlobalData']\n          const keys = Object.keys(globalData)\n          const descriptors = Object.getOwnPropertyDescriptors(globalData)\n          keys.forEach(key => {\n            Object.defineProperty(this, key, {\n              configurable: true,\n              enumerable: true,\n              get () {\n                return globalData[key]\n              },\n              set (value) {\n                globalData[key] = value\n              }\n            })\n          })\n          Object.defineProperties(this, descriptors)\n        }\n\n        const onLaunch = appInstance?.$options?.onLaunch\n        isFunction(onLaunch) && onLaunch.call(appInstance, options)\n      }\n    }),\n\n    [ONSHOW]: setDefaultDescriptor({\n      value (options) {\n        setRouterParams(options)\n        const onShow = appInstance?.$options?.onShow\n        isFunction(onShow) && onShow.call(appInstance, options)\n      }\n    }),\n\n    [ONHIDE]: setDefaultDescriptor({\n      value (options) {\n        const onHide = appInstance?.$options?.onHide\n        isFunction(onHide) && onHide.call(appInstance, options)\n      }\n    }),\n\n    onError: setDefaultDescriptor({\n      value (error) {\n        const onError = appInstance?.$options?.onError\n        isFunction(onError) && onError.call(appInstance, error)\n      }\n    }),\n\n    onUnhandledRejection: setDefaultDescriptor({\n      value (error) {\n        const onUnhandledRejection = appInstance?.$options?.onUnhandledRejection\n        isFunction(onUnhandledRejection) && onUnhandledRejection.call(appInstance, error)\n      }\n    }),\n\n    onPageNotFound: setDefaultDescriptor({\n      value (res) {\n        const onPageNotFound = appInstance?.$options?.onPageNotFound\n        isFunction(onPageNotFound) && onPageNotFound.call(appInstance, res)\n      }\n    })\n  })\n\n  Current.app = appConfig\n\n  return appConfig\n}\n\nexport function isClassComponent (value: unknown) {\n  return isFunction(value) && '__vccOpts' in value\n}\n","import {\n  addLeadingSlash,\n  Current,\n  eventHandler,\n  incrementId,\n  injectPageInstance,\n  removePageInstance,\n  safeExecute\n} from '@tarojs/runtime'\nimport { isArray } from '@tarojs/shared'\nimport { createApp, defineComponent, onMounted, provide, ref, shallowReactive, toRaw } from 'vue'\n\nimport { isClassComponent, setReconciler } from './connect'\n\nimport type { TaroRootElement } from '@tarojs/runtime'\nimport type { PageInstance } from '@tarojs/taro'\nimport type { ComponentOptions, h as createElement } from '@vue/runtime-core'\n\ndeclare const getCurrentPages: () => PageInstance[]\n\ninterface PageItem {\n  compId: string\n  component: ComponentOptions\n}\n\nconst getNativeCompId = incrementId()\n\nfunction initNativeComponentEntry (h: typeof createElement) {\n  setReconciler()\n\n  const NativeComponentWrapper = {\n    props: ['getCtx', 'compId'],\n    setup (props) {\n      const root = ref<TaroRootElement>()\n      const ctx = props.getCtx()\n      provide('id', props.compId)\n\n      onMounted(() => {\n        const rootElement = toRaw(root.value)!\n        rootElement.ctx = ctx\n        rootElement.performUpdate(true)\n      })\n\n      return { root }\n    },\n    render () {\n      return h(\n        'root',\n        {\n          ref: 'root',\n          id: this.compId\n        },\n        this.$slots.default()\n      )\n    }\n  }\n\n  const App = defineComponent({\n    setup () {\n      const components = shallowReactive<PageItem[]>([])\n\n      function mount (component: ComponentOptions, compId: string, getCtx: () => any) {\n        // 处理类组件\n        component = isClassComponent(component) ? component.__vccOpts : component\n        const inject = {\n          props: {\n            tid: String\n          },\n          created () {\n            injectPageInstance(this, compId)\n          }\n        }\n        if (isArray(component.mixins)) {\n          const mixins = component.mixins\n          const idx = mixins.length - 1\n          if (!mixins[idx].props?.tid) {\n            // mixins 里还没注入过，直接推入数组\n            component.mixins.push(inject)\n          } else {\n            // mixins 里已经注入过，代替前者\n            component.mixins[idx] = inject\n          }\n        } else {\n          component.mixins = [inject]\n        }\n        const PageComponent: any = Object.assign({}, component)\n        const option = PageComponent.props?.option?.default?.() || {}\n        const ctx = getCtx()\n\n        const page: ComponentOptions = {\n          mounted () {\n            ctx.component = this\n          },\n          unmounted () {\n            removePageInstance(compId)\n          },\n          render () {\n            return h(\n              NativeComponentWrapper,\n              {\n                compId,\n                getCtx\n              },\n              {\n                default () {\n                  return [\n                    h(PageComponent, {\n                      tid: compId,\n                      option,\n                      ...(ctx.data ||= {}).props,\n                      _scope: ctx\n                    })\n                  ]\n                }\n              }\n            )\n          }\n        }\n\n        components.push({\n          compId,\n          component: page\n        })\n      }\n\n      function unmount (compId: string) {\n        const index = components.findIndex(page => page.compId === compId)\n        components.splice(index, 1)\n      }\n\n      onMounted(() => (Current.app = {\n        mount: mount as any,\n        unmount\n      }))\n\n      return {\n        components\n      }\n    },\n    render () {\n      return this.components.map(page => h(page.component, { key: page.compId }))\n    }\n  })\n\n  createApp(App).mount('#app')\n}\n\nexport function createNativeComponentConfig (component, h: typeof createElement, componentConfig) {\n  const componentObj: Record<string, any> = {\n    options: componentConfig,\n    properties: {\n      props: {\n        type: null,\n        value: null,\n        observer (_newVal, oldVal) {\n          oldVal && this.component?.$forceUpdate()\n        }\n      }\n    },\n    created () {\n      if (!Current.app) {\n        initNativeComponentEntry(h)\n      }\n    },\n    attached () {\n      const compId = this.compId = getNativeCompId()\n      setCurrent(compId)\n      this.config = componentConfig\n      Current.app!.mount!(component, compId, () => this)\n    },\n    ready () {\n      safeExecute(this.compId, 'onReady')\n    },\n    detached () {\n      resetCurrent()\n      Current.app!.unmount!(this.compId)\n      this.component = null\n    },\n    pageLifetimes: {\n      show (options) {\n        safeExecute(this.compId, 'onShow', options)\n      },\n      hide () {\n        safeExecute(this.compId, 'onHide')\n      }\n    },\n    methods: {\n      eh: eventHandler\n    }\n  }\n\n  function resetCurrent () {\n    // 小程序插件页面卸载之后返回到宿主页面时，需重置Current页面和路由。否则引发插件组件二次加载异常 fix:#11991\n    Current.page = null\n    Current.router = null\n  }\n\n  function setCurrent (compId: string) {\n    const pages = getCurrentPages()\n    const currentPage = pages[pages.length - 1]\n    if (Current.page === currentPage) return\n\n    Current.page = currentPage\n\n    const route = (currentPage as any).route || (currentPage as any).__route__\n    const router = {\n      params: currentPage.options || {},\n      path: addLeadingSlash(route),\n      $taroPath: compId,\n      onReady: '',\n      onHide: '',\n      onShow: ''\n    }\n    Current.router = router\n\n    if (!currentPage.options) {\n      // 例如在微信小程序中，页面 options 的设置时机比组件 attached 慢\n      Object.defineProperty(currentPage, 'options', {\n        enumerable: true,\n        configurable: true,\n        get () {\n          return this._optionsValue\n        },\n        set (value) {\n          router.params = value\n          this._optionsValue = value\n        }\n      })\n    }\n  }\n\n  return componentObj\n}\n","import { hooks } from '@tarojs/shared'\n\nimport * as taroHooks from './composition-functions'\nimport { setGlobalDataPlugin } from './plugins'\n\nhooks.tap('initNativeApi', function (taro) {\n  for (const hook in taroHooks) {\n    taro[hook] = taroHooks[hook]\n  }\n  taro.setGlobalDataPlugin = setGlobalDataPlugin\n})\n\nexport * from './composition-functions'\nexport * from './connect'\nexport * from './connect-native'\nexport * from './plugins'\n","import { isString } from '@tarojs/shared'\n\ninterface SpecialMaps {\n  mapName: string | SpecialMaps.MapNameFn\n  mapNameCondition?: string[]\n  mapAttr?: SpecialMaps.MapAttrFn\n}\n\nexport namespace SpecialMaps {\n  export interface MapNameFn {\n    (props: Record<string, any>): string\n  }\n  export interface MapAttrFn {\n    (key: string, value: any, props: Record<string, any>): [string, any]\n  }\n}\n\nfunction genAttrMapFnFromDir (dir: Record<string, string | [string, Record<string, any>]>): SpecialMaps.MapAttrFn {\n  const fn: SpecialMaps.MapAttrFn = function (key, value) {\n    const lowerKey = key.toLowerCase()\n    if (lowerKey in dir) {\n      const res = dir[lowerKey]\n      if (isString(res)) {\n        key = res\n      } else {\n        key = res[0]\n        value = res[1][value] || value\n      }\n    }\n    return [key, value]\n  }\n  return fn\n}\n\nexport const inlineElements = new Set<string>([])\nexport const blockElements = new Set<string>([])\nexport const specialElements = new Map<string, string | SpecialMaps>([\n  ['slot', 'slot'],\n  ['form', 'form'],\n  ['iframe', 'web-view'],\n  ['img', 'image'],\n  ['audio', 'audio'],\n  ['video', 'video'],\n  ['canvas', 'canvas'],\n  ['a', {\n    mapName (props) {\n      if(props.as && isString(props.as)) return props.as.toLowerCase()\n      return !props.href || (/^javascript/.test(props.href)) ? 'view' : 'navigator'\n    },\n    mapNameCondition: ['href'],\n    mapAttr: genAttrMapFnFromDir({\n      href: 'url',\n      target: ['openType', {\n        _blank: 'navigate',\n        _self: 'redirect'\n      }]\n    })\n  }],\n  ['input', {\n    mapName (props) {\n      if (props.type === 'checkbox') {\n        return 'checkbox'\n      } else if (props.type === 'radio') {\n        return 'radio'\n      }\n      return 'input'\n    },\n    mapNameCondition: ['type'],\n    mapAttr (key, value, props) {\n      const htmlKey = key.toLowerCase()\n      if (htmlKey === 'autofocus') {\n        key = 'focus'\n      } else if (htmlKey === 'readonly') {\n        if (props.disabled === true) {\n          value = true\n        }\n        key = 'disabled'\n      } else if (htmlKey === 'type') {\n        if (value === 'password') {\n          key = 'password'\n          value = true\n        } else if (value === 'tel') {\n          value = 'number'\n        }\n      } else if (htmlKey === 'maxlength') {\n        key = 'maxlength'\n      }\n      return [key, value]\n    }\n  }],\n  ['label', {\n    mapName: 'label',\n    mapAttr: genAttrMapFnFromDir({\n      htmlfor: 'for'\n    })\n  }],\n  ['textarea', {\n    mapName: 'textarea',\n    mapAttr: genAttrMapFnFromDir({\n      autofocus: 'focus',\n      readonly: 'disabled',\n      maxlength: 'maxlength'\n    })\n  }],\n  ['progress', {\n    mapName: 'progress',\n    mapAttr (key, value, props) {\n      if (key === 'value') {\n        const max = props.max || 1\n        key = 'percent'\n        value = Math.round(value / max * 100)\n      }\n      return [key, value]\n    }\n  }],\n  ['button', {\n    mapName: 'button',\n    mapAttr (key, value) {\n      if (key === 'type' && (value === 'submit' || value === 'reset')) {\n        key = 'formType'\n      }\n      return [key, value]\n    }\n  }]\n])\n","import { isFunction, isString, Shortcuts } from '@tarojs/shared'\n\nimport {\n  blockElements,\n  inlineElements,\n  specialElements,\n  SpecialMaps\n} from './constant'\n\nexport function isHtmlTags (nodeName: string): boolean {\n  if (inlineElements.has(nodeName) || blockElements.has(nodeName) || specialElements.has(nodeName)) {\n    return true\n  }\n  return false\n}\n\nexport function getMappedType (nodeName: string, rawProps: Record<string, any>): string {\n  if (inlineElements.has(nodeName)) {\n    return 'text'\n  } else if (specialElements.has(nodeName)) {\n    const mapping = specialElements.get(nodeName)!\n    if (isString(mapping)) {\n      return mapping\n    }\n    const { mapName } = mapping\n    return isFunction(mapName) ? mapName(rawProps) : mapName\n  } else {\n    return 'view'\n  }\n}\n\nexport function getAttrMapFn (nodeName): SpecialMaps.MapAttrFn | undefined {\n  const mapping = specialElements.get(nodeName)\n  if (!isString(mapping)) {\n    return mapping?.mapAttr\n  }\n}\n\nfunction getMapNameByCondition (nodeName: string, attr: string, props: Record<string, any>): string | undefined {\n  const mapping = specialElements.get(nodeName)\n  if (!mapping || isString(mapping)) return\n\n  const { mapName, mapNameCondition } = mapping\n  if (!mapNameCondition) return\n\n  if (mapNameCondition.indexOf(attr) > -1 && !isString(mapName)) {\n    return mapName(props)\n  }\n}\n\nexport function mapNameByContion (nodeName: string, key: string, element: any, componentsAlias) {\n  const mapName = getMapNameByCondition(nodeName, key, element.props)\n  if (mapName) {\n    const mapNameAlias = componentsAlias[mapName]._num\n    element.enqueueUpdate({\n      path: `${element._path}.${Shortcuts.NodeName}`,\n      value: mapNameAlias\n    })\n  }\n}\n\nexport function ensureHtmlClass (tagName: string, className = ''): string {\n  const classList = className.split(' ')\n  const htmlClass = `h5-${tagName}`\n  if (classList.indexOf(htmlClass) === -1) {\n    classList.unshift(htmlClass)\n  }\n  return classList.join(' ')\n}\n\nexport function ensureRect (props: Record<string, any>, style = ''): string {\n  let cssText = style\n  const { width, height } = props\n  if (width) {\n    cssText = `width: ${width};${cssText}`\n  }\n  if (height) {\n    cssText = `height: ${height};${cssText}`\n  }\n  return cssText\n}\n\nexport function defineMappedProp (obj, propName, mapName) {\n  Object.defineProperty(obj, propName, {\n    enumerable: true,\n    configurable: true,\n    get () {\n      return obj[mapName]\n    },\n    set (val) {\n      obj[mapName] = val\n    }\n  })\n}\n","import { TaroElement } from '@tarojs/runtime'\nimport { hooks, Shortcuts, toCamelCase, warn } from '@tarojs/shared'\n\nimport {\n  defineMappedProp,\n  ensureHtmlClass,\n  ensureRect,\n  getAttrMapFn,\n  getMappedType,\n  isHtmlTags,\n  mapNameByContion\n} from './utils'\n\nhooks.tap('modifyHydrateData', data => {\n  const nodeName = data[Shortcuts.NodeName]\n  if (!isHtmlTags(nodeName)) return\n\n  process.env.NODE_ENV !== 'production' && warn(data[Shortcuts.NodeName] === 'select', '请使用 Picker 组件代替 <select>')\n\n  // map nodeName\n  data[Shortcuts.NodeName] = getMappedType(nodeName, data)\n\n  // map attr Key/Value\n  const attrMapFn = getAttrMapFn(nodeName)\n  if (attrMapFn) {\n    for (const key in data) {\n      const value = data[key]\n      const [mapKey, mapValue] = attrMapFn(key, value, data)\n      if (key !== mapKey) {\n        delete data[key]\n        data[mapKey] = mapValue\n      } else if (value !== mapValue) {\n        data[key] = mapValue\n      }\n    }\n  }\n\n  if (nodeName === 'br') {\n    data[Shortcuts.Childnodes] = [{\n      [Shortcuts.NodeName]: '#text',\n      v: '\\n'\n    }]\n  }\n\n  data[Shortcuts.Class] = ensureHtmlClass(nodeName, data[Shortcuts.Class])\n  data[Shortcuts.Style] = ensureRect(data, data[Shortcuts.Style])\n})\n\nhooks.tap('modifySetAttrPayload', (element, key, payload, componentsAlias) => {\n  const { nodeName, _path, props } = element\n  if (!isHtmlTags(nodeName)) return\n\n  // map nodeName\n  mapNameByContion(nodeName, key, element, componentsAlias)\n\n  const mapName = getMappedType(nodeName, props)\n  const alias = componentsAlias[mapName]\n\n  // map attr Key/Value\n  const attrMapFn = getAttrMapFn(nodeName)\n  if (attrMapFn) {\n    const value = payload.value\n    const [mapKey, mapValue] = attrMapFn(key, value, props)\n    payload.path = `${_path}.${alias[mapKey] || mapKey}`\n    payload.value = mapValue\n  } else if (alias[key] && alias[key] !== key) {\n    payload.path = `${_path}.${toCamelCase(alias[key])}`\n  }\n\n  if (key === Shortcuts.Class) {\n    payload.value = ensureHtmlClass(nodeName, payload.value as string)\n  } else if (key === Shortcuts.Style || key === 'width' || key === 'height') {\n    payload.path = `${_path}.${Shortcuts.Style}`\n    payload.value = ensureRect(props, element.style.cssText)\n  }\n})\n\nhooks.tap('modifyRmAttrPayload', (element, key, payload, componentsAlias) => {\n  const { nodeName, _path, props } = element\n  if (!isHtmlTags(nodeName)) return\n\n  // map nodeName\n  mapNameByContion(nodeName, key, element, componentsAlias)\n\n  const mapName = getMappedType(nodeName, props)\n  const alias = componentsAlias[mapName]\n\n  // map attr Key/Value\n  const attrMapFn = getAttrMapFn(nodeName)\n  if (attrMapFn) {\n    const value = payload[key]\n    const [mapKey] = attrMapFn(key, value, props)\n    payload.path = `${_path}.${alias[mapKey] || mapKey}`\n  } else if (alias[key] && alias[key] !== key) {\n    payload.path = `${_path}.${toCamelCase(alias[key])}`\n  }\n\n  if (key === Shortcuts.Class) {\n    payload.value = ensureHtmlClass(nodeName, payload.value as string)\n  } else if (key === Shortcuts.Style || key === 'width' || key === 'height') {\n    payload.path = `${_path}.${Shortcuts.Style}`\n    payload.value = ensureRect(props, element.style.cssText)\n  }\n})\n\nhooks.tap('onAddEvent', (type, _handler, _options, node) => {\n  node = node as TaroElement\n  if (!isHtmlTags(node.nodeName)) return\n  if (type === 'click') {\n    defineMappedProp(node.__handlers, type, 'tap')\n  } else if (node.nodeName === 'input') {\n    if (type === 'change') {\n      if (node.props.type === 'checkbox' || node.props.type === 'radio') {\n        defineMappedProp(node.__handlers, type, 'tap')\n      } else {\n        defineMappedProp(node.__handlers, type, 'input')\n      }\n    } else if (type === 'keypress') {\n      defineMappedProp(node.__handlers, type, 'confirm')\n    }\n  }\n})\n\nhooks.tap('modifyTaroEvent', (event, element) => {\n  const { nodeName, props } = element\n  if (nodeName === 'input' && event.type === 'tap') {\n    if (props.type === 'checkbox') {\n      props.checked = !props.checked\n    } else if (props.type === 'radio' && !props.checked) {\n      props.checked = true\n    }\n    if (event.mpEvent) {\n      const { currentTarget, target } = event.mpEvent\n      currentTarget.checked = props.checked\n      if (target.id === currentTarget.id) {\n        target.checked = props.checked\n      }\n    }\n  }\n})\n","export const needPromiseApis = new Set([\n  'addFileToFavorites',\n  'addVideoToFavorites',\n  'authPrivateMessage',\n  'checkIsAddedToMyMiniProgram',\n  'chooseContact',\n  'cropImage',\n  'disableAlertBeforeUnload',\n  'editImage',\n  'enableAlertBeforeUnload',\n  'getBackgroundFetchData',\n  'getFuzzyLocation',\n  'getGroupEnterInfo',\n  'getLocalIPAddress',\n  'getShareInfo',\n  'getUserProfile',\n  'getWeRunData',\n  'join1v1Chat',\n  'openCustomerServiceChat',\n  'openVideoEditor',\n  'saveFileToDisk',\n  'scanItem',\n  'setEnable1v1Chat',\n  'setWindowSize',\n  'sendBizRedPacket',\n  'startFacialRecognitionVerify',\n])\n","import { processApis } from '@tarojs/shared'\n\nimport { needPromiseApis } from './apis-list'\n\ndeclare const wx: any\n\nexport function initNativeApi (taro) {\n  processApis(taro, wx, {\n    needPromiseApis,\n    modifyApis (apis) {\n      // fix https://github.com/NervJS/taro/issues/9899\n      apis.delete('lanDebug')\n    },\n    transformMeta (api: string, options: Record<string, any>) {\n      if (api === 'showShareMenu') {\n        options.menus = options.showShareItems?.map(item => item === 'wechatFriends' ? 'shareAppMessage' : item === 'wechatMoment' ? 'shareTimeline' : item)\n      }\n\n      return {\n        key: api,\n        options\n      }\n    }\n  })\n  taro.cloud = wx.cloud\n  taro.getTabBar = function (pageCtx) {\n    if (typeof pageCtx?.getTabBar === 'function') {\n      return pageCtx.getTabBar()?.$taroInstances\n    }\n  }\n}\n","const _true = 'true'\nconst _false = 'false'\nconst _empty = ''\nconst _zero = '0'\n\nexport const components = {\n  // ======== 调整属性 ========\n  Progress: {\n    'border-radius': _zero,\n    'font-size': '16',\n    duration: '30',\n    bindActiveEnd: _empty\n  },\n  RichText: {\n    space: _empty,\n    'user-select': _false\n  },\n  Text: {\n    'user-select': _false\n  },\n  Map: {\n    polygons: '[]',\n    subkey: _empty,\n    rotate: _zero,\n    skew: _zero,\n    'max-scale': '20',\n    'min-scale': '3',\n    'enable-3D': _false,\n    'show-compass': _false,\n    'show-scale': _false,\n    'enable-overlooking': _false,\n    'enable-zoom': _true,\n    'enable-scroll': _true,\n    'enable-rotate': _false,\n    'enable-satellite': _false,\n    'enable-traffic': _false,\n    'enable-poi': _true,\n    'enable-building': _true,\n    setting: '[]',\n    bindLabelTap: _empty,\n    bindRegionChange: _empty,\n    bindPoiTap: _empty,\n    bindAnchorPointTap: _empty\n  },\n  Button: {\n    lang: 'en',\n    'session-from': _empty,\n    'send-message-title': _empty,\n    'send-message-path': _empty,\n    'send-message-img': _empty,\n    'app-parameter': _empty,\n    'show-message-card': _false,\n    'business-id': _empty,\n    bindGetUserInfo: _empty,\n    bindContact: _empty,\n    bindGetPhoneNumber: _empty,\n    bindChooseAvatar: _empty,\n    bindError: _empty,\n    bindOpenSetting: _empty,\n    bindLaunchApp: _empty\n  },\n  Form: {\n    'report-submit-timeout': _zero\n  },\n  Input: {\n    'always-embed': _false,\n    'adjust-position': _true,\n    'hold-keyboard': _false,\n    'safe-password-cert-path': '',\n    'safe-password-length': '',\n    'safe-password-time-stamp': '',\n    'safe-password-nonce': '',\n    'safe-password-salt': '',\n    'safe-password-custom-hash': '',\n    'auto-fill': _empty,\n    bindKeyboardHeightChange: _empty,\n    bindNicknameReview: _empty\n  },\n  Picker: {\n    'header-text': _empty,\n    'level': 'region'\n  },\n  PickerView: {\n    'immediate-change': _false,\n    bindPickStart: _empty,\n    bindPickEnd: _empty\n  },\n  Slider: {\n    color: \"'#e9e9e9'\",\n    'selected-color': \"'#1aad19'\"\n  },\n  Textarea: {\n    'show-confirm-bar': _true,\n    'adjust-position': _true,\n    'hold-keyboard': _false,\n    'disable-default-padding': _false,\n    'confirm-type': \"'return'\",\n    'confirm-hold': _false,\n    bindKeyboardHeightChange: _empty\n  },\n  ScrollView: {\n    'type': \"'list'\",\n    'event-passive': _false,\n    'enable-flex': _false,\n    'scroll-anchoring': _false,\n    'refresher-enabled': _false,\n    'refresher-threshold': '45',\n    'refresher-default-style': \"'black'\",\n    'refresher-background': \"'#FFF'\",\n    'refresher-triggered': _false,\n    enhanced: _false,\n    bounces: _true,\n    'show-scrollbar': _true,\n    'paging-enabled': _false,\n    'fast-deceleration': _false,\n    reverse: _false,\n    'cache-extent': _zero,\n    'scroll-into-view-within-extent': _false,\n    'scroll-into-view-alignment': \"'start'\",\n    bindDragStart: _empty,\n    bindDragging: _empty,\n    bindDragEnd: _empty,\n    bindRefresherPulling: _empty,\n    bindRefresherRefresh: _empty,\n    bindRefresherRestore: _empty,\n    bindRefresherAbort: _empty,\n    bindScrollStart: _empty,\n    bindScrollEnd: _empty,\n    bindRefresherWillRefresh: _empty,\n  },\n  StickySection: {\n    'push-pinned-header': _true,\n  },\n  GridView: {\n    type: \"'aligned'\",\n    'cross-axis-count': '2',\n    'max-cross-axis-extent': _zero,\n    'main-axis-gap': _zero,\n    'cross-axis-gap': _zero,\n  },\n  ListView: {},\n  StickyHeader: {},\n  Swiper: {\n    'snap-to-edge': _false,\n    'easing-function': \"'default'\"\n  },\n  SwiperItem: {\n    'skip-hidden-item-layout': _false\n  },\n  Navigator: {\n    target: \"'self'\",\n    'app-id': _empty,\n    path: _empty,\n    'extra-data': _empty,\n    version: \"'version'\"\n  },\n  Camera: {\n    mode: \"'normal'\",\n    resolution: \"'medium'\",\n    'frame-size': \"'medium'\",\n    bindInitDone: _empty,\n    bindScanCode: _empty\n  },\n  Image: {\n    webp: _false,\n    'show-menu-by-longpress': _false\n  },\n  LivePlayer: {\n    mode: \"'live'\",\n    'sound-mode': \"'speaker'\",\n    'auto-pause-if-navigate': _true,\n    'auto-pause-if-open-native': _true,\n    'picture-in-picture-mode': '[]',\n    bindstatechange: _empty,\n    bindfullscreenchange: _empty,\n    bindnetstatus: _empty,\n    bindAudioVolumeNotify: _empty,\n    bindEnterPictureInPicture: _empty,\n    bindLeavePictureInPicture: _empty\n  },\n  Video: {\n    title: _empty,\n    'play-btn-position': \"'bottom'\",\n    'enable-play-gesture': _false,\n    'auto-pause-if-navigate': _true,\n    'auto-pause-if-open-native': _true,\n    'vslide-gesture': _false,\n    'vslide-gesture-in-fullscreen': _true,\n    'ad-unit-id': _empty,\n    'poster-for-crawler': _empty,\n    'show-casting-button': _false,\n    'picture-in-picture-mode': '[]',\n    // picture-in-picture-show-progress 属性先注释掉的原因如下：\n    // 该属性超过了 wxml 属性的长度限制，实际无法使用且导致编译报错。可等微信官方修复后再放开。\n    // 参考1：https://developers.weixin.qq.com/community/develop/doc/000a429beb87f0eac07acc0fc5b400\n    // 参考2: https://developers.weixin.qq.com/community/develop/doc/0006883619c48054286a4308258c00?_at=vyxqpllafi\n    // 'picture-in-picture-show-progress': 'false',\n    'enable-auto-rotation': _false,\n    'show-screen-lock-button': _false,\n    'show-snapshot-button': _false,\n    'show-background-playback-button': _false,\n    'background-poster': _empty,\n    bindProgress: _empty,\n    bindLoadedMetadata: _empty,\n    bindControlsToggle: _empty,\n    bindEnterPictureInPicture: _empty,\n    bindLeavePictureInPicture: _empty,\n    bindSeekComplete: _empty,\n    bindAdLoad: _empty,\n    bindAdError: _empty,\n    bindAdClose: _empty,\n    bindAdPlay: _empty\n  },\n  Canvas: {\n    type: _empty\n  },\n  Ad: {\n    'ad-type': \"'banner'\",\n    'ad-theme': \"'white'\"\n  },\n  CoverView: {\n    'marker-id': _empty,\n    slot: _empty\n  },\n  // ======== 额外组件 ========\n  Editor: {\n    'read-only': _false,\n    placeholder: _empty,\n    'show-img-size': _false,\n    'show-img-toolbar': _false,\n    'show-img-resize': _false,\n    focus: _false,\n    bindReady: _empty,\n    bindFocus: _empty,\n    bindBlur: _empty,\n    bindInput: _empty,\n    bindStatusChange: _empty,\n    name: _empty\n  },\n  MatchMedia: {\n    'min-width': _empty,\n    'max-width': _empty,\n    width: _empty,\n    'min-height': _empty,\n    'max-height': _empty,\n    height: _empty,\n    orientation: _empty\n  },\n  FunctionalPageNavigator: {\n    version: \"'release'\",\n    name: _empty,\n    args: _empty,\n    bindSuccess: _empty,\n    bindFail: _empty,\n    bindCancel: _empty\n  },\n  LivePusher: {\n    url: _empty,\n    mode: \"'RTC'\",\n    autopush: _false,\n    muted: _false,\n    'enable-camera': _true,\n    'auto-focus': _true,\n    orientation: \"'vertical'\",\n    beauty: _zero,\n    whiteness: _zero,\n    aspect: \"'9:16'\",\n    'min-bitrate': '200',\n    'max-bitrate': '1000',\n    'audio-quality': \"'high'\",\n    'waiting-image': _empty,\n    'waiting-image-hash': _empty,\n    zoom: _false,\n    'device-position': \"'front'\",\n    'background-mute': _false,\n    mirror: _false,\n    'remote-mirror': _false,\n    'local-mirror': _false,\n    'audio-reverb-type': _zero,\n    'enable-mic': _true,\n    'enable-agc': _false,\n    'enable-ans': _false,\n    'audio-volume-type': \"'voicecall'\",\n    'video-width': '360',\n    'video-height': '640',\n    'beauty-style': \"'smooth'\",\n    filter: \"'standard'\",\n    animation: _empty,\n    bindStateChange: _empty,\n    bindNetStatus: _empty,\n    bindBgmStart: _empty,\n    bindBgmProgress: _empty,\n    bindBgmComplete: _empty,\n    bindAudioVolumeNotify: _empty\n  },\n  OfficialAccount: {\n    bindLoad: _empty,\n    bindError: _empty\n  },\n  OpenData: {\n    type: _empty,\n    'open-gid': _empty,\n    lang: \"'en'\",\n    'default-text': _empty,\n    'default-avatar': _empty,\n    bindError: _empty\n  },\n  NavigationBar: {\n    title: _empty,\n    loading: _false,\n    'front-color': _empty,\n    'background-color': _empty,\n    'color-animation-duration': _zero,\n    'color-animation-timing-func': \"'linear'\"\n  },\n  PageMeta: {\n    'background-text-style': _empty,\n    'background-color': _empty,\n    'background-color-top': _empty,\n    'background-color-bottom': _empty,\n    'scroll-top': \"''\",\n    'scroll-duration': '300',\n    'page-style': \"''\",\n    'root-font-size': \"''\",\n    bindResize: _empty,\n    bindScroll: _empty,\n    bindScrollDone: _empty\n  },\n  VoipRoom: {\n    openid: _empty,\n    mode: \"'camera'\",\n    'device-position': \"'front'\",\n    bindError: _empty\n  },\n  AdCustom: {\n    'unit-id': _empty,\n    'ad-intervals': _empty,\n    bindLoad: _empty,\n    bindError: _empty\n  },\n  PageContainer: {\n    show: _false,\n    duration: '300',\n    'z-index': '100',\n    overlay: _true,\n    position: \"'bottom'\",\n    round: _false,\n    'close-on-slide-down': _false,\n    'overlay-style': _empty,\n    'custom-style': _empty,\n    bindBeforeEnter: _empty,\n    bindEnter: _empty,\n    bindAfterEnter: _empty,\n    bindBeforeLeave: _empty,\n    bindLeave: _empty,\n    bindAfterLeave: _empty,\n    bindClickOverlay: _empty\n  },\n  ShareElement: {\n    mapkey: _empty,\n    transform: _false,\n    duration: '300',\n    'easing-function': \"'ease-out'\"\n  },\n  KeyboardAccessory: {},\n  RootPortal: {},\n  ChannelLive: {\n    feedId: _empty,\n    finderUserName: _empty\n  },\n  ChannelVideo: {\n    feedId: _empty,\n    finderUserName: _empty,\n    autoplay: _false,\n    loop: _false,\n    muted: _false,\n    objectFit: \"'contain'\",\n    bindError: _empty\n  },\n}\n","import { initNativeApi } from './apis'\n\nexport { initNativeApi }\nexport * from './apis-list'\nexport * from './components'\nexport const hostConfig = {\n  initNativeApi,\n  getMiniLifecycle (config) {\n    const methods = config.page[5]\n    if (methods.indexOf('onSaveExitState') === -1) {\n      methods.push('onSaveExitState')\n    }\n    return config\n  }\n}\n","export const PROPERTY_THRESHOLD = 2046\nexport const TARO_RUNTIME = 'Taro runtime'\nexport const HOOKS_APP_ID = 'taro-app'\nexport const SET_DATA = '小程序 setData'\nexport const PAGE_INIT = '页面初始化'\nexport const ROOT_STR = 'root'\nexport const HTML = 'html'\nexport const HEAD = 'head'\nexport const BODY = 'body'\nexport const APP = 'app'\nexport const CONTAINER = 'container'\nexport const DOCUMENT_ELEMENT_NAME = '#document'\nexport const DOCUMENT_FRAGMENT = 'document-fragment'\nexport const ID = 'id'\nexport const UID = 'uid'\nexport const CLASS = 'class'\nexport const STYLE = 'style'\nexport const FOCUS = 'focus'\nexport const VIEW = 'view'\nexport const STATIC_VIEW = 'static-view'\nexport const PURE_VIEW = 'pure-view'\nexport const PROPS = 'props'\nexport const DATASET = 'dataset'\nexport const OBJECT = 'object'\nexport const VALUE = 'value'\nexport const INPUT = 'input'\nexport const CHANGE = 'change'\nexport const CUSTOM_WRAPPER = 'custom-wrapper'\nexport const TARGET = 'target'\nexport const CURRENT_TARGET = 'currentTarget'\nexport const TYPE = 'type'\nexport const CONFIRM = 'confirm'\nexport const TIME_STAMP = 'timeStamp'\nexport const KEY_CODE = 'keyCode'\nexport const TOUCHMOVE = 'touchmove'\nexport const DATE = 'Date'\nexport const SET_TIMEOUT = 'setTimeout'\nexport const CATCHMOVE = 'catchMove'\nexport const CATCH_VIEW = 'catch-view'\nexport const COMMENT = 'comment'\nexport const ON_LOAD = 'onLoad'\nexport const ON_READY = 'onReady'\nexport const ON_SHOW = 'onShow'\nexport const ON_HIDE = 'onHide'\nexport const OPTIONS = 'options'\nexport const EXTERNAL_CLASSES = 'externalClasses'\nexport const EVENT_CALLBACK_RESULT = 'e_result'\nexport const BEHAVIORS = 'behaviors'\nexport const A = 'a'\n\n/**\n * 页面上下文切换时的行为\n */\nexport enum CONTEXT_ACTIONS {\n  INIT = '0',\n  RESTORE = '1',\n  RECOVER = '2',\n  DESTORY = '3'\n}\n","import { MutationRecordType } from './record'\n\nimport type { TaroNode } from '../../dom/node'\nimport type { MutationRecord } from './record'\n\nexport type MutationCallback = (mutations: MutationRecord[]) => any\n\n/**\n * @see https://dom.spec.whatwg.org/#dictdef-mutationobserverinit\n */\nexport interface MutationObserverInit {\n  attributeFilter?: string[]\n  attributeOldValue?: boolean\n  attributes?: boolean\n  characterData?: boolean\n  characterDataOldValue?: boolean\n  childList?: boolean\n  subtree?: boolean\n}\n\nconst observers: MutationObserverImpl[] = []\n\n/**\n * The MutationObserver provides the ability\n * to watch for changes being made to the DOM tree.\n * It will invoke a specified callback function\n * when DOM changes occur.\n * @see https://dom.spec.whatwg.org/#mutationobserver\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n */\nexport class MutationObserverImpl {\n  public callback: MutationCallback\n  public target: TaroNode | null\n  public options: MutationObserverInit\n  public records: MutationRecord[] = []\n\n  constructor (callback: MutationCallback) {\n    this.callback = callback\n  }\n\n  /**\n   * Configures the MutationObserver\n   * to begin receiving notifications\n   * through its callback function\n   * when DOM changes matching the given options occur.\n   *\n   * Options matching is to be implemented.\n   */\n  observe (target: TaroNode, options?: MutationObserverInit): void {\n    this.disconnect()\n    this.target = target\n    this.options = options || {}\n\n    observers.push(this)\n  }\n\n  /**\n   * Stop the MutationObserver instance\n   * from receiving further notifications\n   * until and unless observe() is called again.\n   */\n  disconnect (): void {\n    this.target = null\n\n    const index = observers.indexOf(this)\n    if (index >= 0) {\n      observers.splice(index, 1)\n    }\n  }\n\n  /**\n   * Removes all pending notifications\n   * from the MutationObserver's notification queue\n   * and returns them in a new Array of MutationRecord objects.\n   */\n  takeRecords (): MutationRecord[] {\n    return this.records.splice(0, this.records.length)\n  }\n}\n\n/** Match two TaroNodes by sid. */\nconst sidMatches = (\n  observerTarget: TaroNode | null,\n  target: TaroNode | null\n): boolean => {\n  return !!observerTarget && observerTarget.sid === target?.sid\n}\n\nconst isConcerned = (record: MutationRecord, options: MutationObserverInit) => {\n  const { characterData, characterDataOldValue, attributes, attributeOldValue, childList } = options\n  switch (record.type) {\n    case MutationRecordType.CHARACTER_DATA:\n      if (characterData) {\n        if (!characterDataOldValue) record.oldValue = null\n        return true\n      }\n      return false\n    case MutationRecordType.ATTRIBUTES:\n      if (attributes) {\n        if (!attributeOldValue) record.oldValue = null\n        return true\n      }\n      return false\n    case MutationRecordType.CHILD_LIST:\n      if (childList) {\n        return true\n      }\n      return false\n  }\n}\n\nlet pendingMuatations = false\n\nfunction logMutation (observer: MutationObserverImpl, record: MutationRecord) {\n  observer.records.push(record)\n  if (!pendingMuatations) {\n    pendingMuatations = true\n    Promise\n      .resolve()\n      .then(() => {\n        pendingMuatations = false\n        observers.forEach(observer => {\n          return observer.callback(observer.takeRecords())\n        })\n      })\n  }\n}\n\nexport function recordMutation (record: MutationRecord) {\n  observers.forEach(observer => {\n    const { options } = observer\n    for (let t: TaroNode | null = record.target; t; t = t.parentNode) {\n      if (sidMatches(observer.target, t) && isConcerned(record, options)) {\n        logMutation(observer, record)\n        break\n      }\n      if (!options.subtree) break\n    }\n  })\n}\n","import { noop } from '@tarojs/shared'\n\nimport { MutationObserverImpl, recordMutation } from './implements'\nimport { MutationRecord, MutationRecordType } from './record'\n\nimport type { TaroNode } from '../../dom/node'\nimport type { MutationCallback, MutationObserverInit } from './implements'\n\ndeclare const ENABLE_MUTATION_OBSERVER: boolean\n\nexport class MutationObserver {\n  core: Pick<MutationObserverImpl, 'observe' | 'disconnect' | 'takeRecords'>\n\n  constructor (callback: MutationCallback) {\n    if (ENABLE_MUTATION_OBSERVER) {\n      this.core = new MutationObserverImpl(callback)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('[Taro Warning] 若要使用 MutationObserver，请在 Taro 编译配置中设置 \\'mini.enableMutationObserver: true\\'')\n      }\n      this.core = {\n        observe: noop,\n        disconnect: noop,\n        takeRecords: (noop as () => any)\n      }\n    }\n  }\n\n  public observe (...args: [TaroNode, MutationObserverInit?]) {\n    this.core.observe(...args)\n  }\n\n  public disconnect () {\n    this.core.disconnect()\n  }\n\n  public takeRecords () {\n    return this.core.takeRecords()\n  }\n\n  static record (record: MutationRecord) {\n    recordMutation(record)\n  }\n}\n\nexport {\n  MutationRecordType\n}\n","import {\n  getComponentsAlias as _getComponentsAlias,\n  internalComponents,\n  isFunction,\n  Shortcuts\n} from '@tarojs/shared'\n\nimport {\n  CLASS,\n  COMMENT,\n  ID,\n  ROOT_STR,\n  STYLE,\n  UID\n} from '../constants'\nimport { NodeType } from '../dom/node_types'\nimport { Func } from '../interface'\n\nimport type { TaroElement } from '../dom/element'\nimport type { TaroNode } from '../dom/node'\nimport type { TaroText } from '../dom/text'\n\nexport const incrementId = () => {\n  const chatCodes: number[] = []\n  // A-Z\n  for (let i = 65; i <= 90; i++) {\n    chatCodes.push(i)\n  }\n  // a-z\n  for (let i = 97; i <= 122; i++) {\n    chatCodes.push(i)\n  }\n  const chatCodesLen = chatCodes.length - 1\n  const list = [0, 0]\n  return () => {\n    const target = list.map(item => chatCodes[item])\n    const res = String.fromCharCode(...target)\n\n    let tailIdx = list.length - 1\n\n    list[tailIdx]++\n\n    while (list[tailIdx] > chatCodesLen) {\n      list[tailIdx] = 0\n      tailIdx = tailIdx - 1\n      if (tailIdx < 0) {\n        list.push(0)\n        break\n      }\n      list[tailIdx]++\n    }\n\n    return res\n  }\n}\n\nexport function isElement (node: TaroNode): node is TaroElement {\n  return node.nodeType === NodeType.ELEMENT_NODE\n}\n\nexport function isText (node: TaroNode): node is TaroText {\n  return node.nodeType === NodeType.TEXT_NODE\n}\n\nexport function isComment (node: TaroNode): boolean {\n  return node.nodeName === COMMENT\n}\n\nexport function isHasExtractProp (el: TaroElement): boolean {\n  const res = Object.keys(el.props).find(prop => {\n    return !(/^(class|style|id)$/.test(prop) || prop.startsWith('data-'))\n  })\n  return Boolean(res)\n}\n\n/**\n * 往上寻找组件树直到 root，寻找是否有祖先组件绑定了同类型的事件\n * @param node 当前组件\n * @param type 事件类型\n */\nexport function isParentBinded (node: TaroElement | null, type: string): boolean {\n  let res = false\n  while (node?.parentElement && node.parentElement._path !== ROOT_STR) {\n    if (node.parentElement.__handlers[type]?.length) {\n      res = true\n      break\n    }\n    node = node.parentElement\n  }\n  return res\n}\n\nexport function shortcutAttr (key: string): string {\n  switch (key) {\n    case STYLE:\n      return Shortcuts.Style\n    case ID:\n      return UID\n    case CLASS:\n      return Shortcuts.Class\n    default:\n      return key\n  }\n}\n\nexport const customWrapperCache = new Map<string, Record<string, any>>()\n\ninterface Ctor {\n  new (...args: any[]): any\n}\n\nexport function extend (ctor: Ctor, methodName: string, options: Func | Record<string, any>) {\n  if (isFunction(options)) {\n    options = {\n      value: options\n    }\n  }\n  Object.defineProperty(ctor.prototype, methodName, {\n    configurable: true,\n    enumerable: true,\n    ...options\n  })\n}\n\nlet componentsAlias\nexport function getComponentsAlias () {\n  if (!componentsAlias) {\n    componentsAlias = _getComponentsAlias(internalComponents)\n  }\n  return componentsAlias\n}\n","import type { TaroElement } from './element'\n\nexport class ClassList extends Set<string> {\n  private el: TaroElement\n\n  constructor (className: string, el: TaroElement) {\n    super()\n    className.trim().split(/\\s+/).forEach(super.add.bind(this))\n    this.el = el\n  }\n\n  public get value () {\n    return [...this].filter(v => v !== '').join(' ')\n  }\n\n  public add (s: string) {\n    super.add(s)\n    this._update()\n\n    return this\n  }\n\n  public get length (): number {\n    return this.size\n  }\n\n  public remove (s: string) {\n    super.delete(s)\n    this._update()\n  }\n\n  public toggle (s: string) {\n    if (super.has(s)) {\n      super.delete(s)\n    } else {\n      super.add(s)\n    }\n\n    this._update()\n  }\n\n  public replace (s1: string, s2: string) {\n    super.delete(s1)\n    super.add(s2)\n\n    this._update()\n  }\n\n  public contains (s: string) {\n    return super.has(s)\n  }\n\n  public toString () {\n    return this.value\n  }\n\n  private _update () {\n    this.el.className = this.value\n  }\n}\n","import type { TaroNode } from './node'\n\ninterface IEventSource extends Map<string | undefined | null, TaroNode> {\n  removeNode (child: TaroNode): void\n  removeNodeTree (child: TaroNode): void\n}\n\nclass EventSource extends Map {\n  removeNode (child: TaroNode) {\n    const { sid, uid } = child\n    this.delete(sid)\n    if (uid !== sid && uid) this.delete(uid)\n  }\n\n  removeNodeTree (child: TaroNode) {\n    this.removeNode(child)\n    const { childNodes } = child\n    childNodes.forEach(node => this.removeNodeTree(node))\n  }\n}\n\nexport const eventSource: IEventSource = new EventSource()\n","import { EMPTY_OBJ, isWebPlatform } from '@tarojs/shared'\n\nimport type { TaroDocument } from './dom/document'\n\ninterface Env {\n  window\n  document: TaroDocument\n}\n\nconst isWeb = isWebPlatform()\nconst env: Env = {\n  window: isWeb ? window : EMPTY_OBJ,\n  document: isWeb ? document : EMPTY_OBJ\n}\n\nexport default env\n","import { hooks, Shortcuts, toCamelCase } from '@tarojs/shared'\n\nimport {\n  CATCH_VIEW,\n  CATCHMOVE,\n  CLASS,\n  ID,\n  PURE_VIEW,\n  STYLE,\n  VIEW\n} from './constants'\nimport { getComponentsAlias, isComment, isHasExtractProp, isText } from './utils'\n\nimport type { TaroElement } from './dom/element'\nimport type { TaroText } from './dom/text'\nimport type { MiniData, MiniElementData } from './interface'\n\nlet SPECIAL_NODES\nlet componentsAlias\n\n/**\n * React also has a fancy function's name for this: `hydrate()`.\n * You may have been heard `hydrate` as a SSR-related function,\n * actually, `hydrate` basicly do the `render()` thing, but ignore some properties,\n * it's a vnode traverser and modifier: that's exactly what Taro's doing in here.\n */\nexport function hydrate (node: TaroElement | TaroText): MiniData {\n  if (!componentsAlias) {\n    // 初始化 componentsAlias\n    componentsAlias = getComponentsAlias()\n  }\n\n  if (!SPECIAL_NODES) {\n    // 初始化 SPECIAL_NODES\n    SPECIAL_NODES = hooks.call('getSpecialNodes')!\n  }\n\n  const nodeName = node.nodeName\n\n  if (isText(node)) {\n    return {\n      [Shortcuts.Text]: node.nodeValue,\n      [Shortcuts.NodeName]: componentsAlias[nodeName]._num\n    }\n  }\n\n  const data: MiniElementData = {\n    [Shortcuts.NodeName]: nodeName,\n    sid: node.sid\n  }\n\n  if (node.uid !== node.sid) {\n    data.uid = node.uid\n  }\n\n  if (!node.isAnyEventBinded() && SPECIAL_NODES.indexOf(nodeName) > -1) {\n    data[Shortcuts.NodeName] = `static-${nodeName}`\n    if (nodeName === VIEW && !isHasExtractProp(node)) {\n      data[Shortcuts.NodeName] = PURE_VIEW\n    }\n  }\n\n  const { props } = node\n  for (const prop in props) {\n    const propInCamelCase = toCamelCase(prop)\n    if (\n      !prop.startsWith('data-') && // 在 node.dataset 的数据\n      prop !== CLASS &&\n      prop !== STYLE &&\n      prop !== ID &&\n      propInCamelCase !== CATCHMOVE\n    ) {\n      data[propInCamelCase] = props[prop]\n    }\n    if (nodeName === VIEW && propInCamelCase === CATCHMOVE && props[prop] !== false) {\n      data[Shortcuts.NodeName] = CATCH_VIEW\n    }\n  }\n\n  let { childNodes } = node\n\n  // 过滤 comment 节点\n  childNodes = childNodes.filter(node => !isComment(node))\n\n  if (childNodes.length > 0) {\n    data[Shortcuts.Childnodes] = childNodes.map(hydrate)\n  } else {\n    data[Shortcuts.Childnodes] = []\n  }\n\n  if (node.className !== '') {\n    data[Shortcuts.Class] = node.className\n  }\n\n  const cssText = node.cssText\n  if (cssText !== '' && nodeName !== 'swiper-item') {\n    data[Shortcuts.Style] = cssText\n  }\n\n  hooks.call('modifyHydrateData', data)\n\n  const nn = data[Shortcuts.NodeName]\n  const componentAlias = componentsAlias[nn]\n  if (componentAlias) {\n    data[Shortcuts.NodeName] = componentAlias._num\n    for (const prop in data) {\n      if (prop in componentAlias) {\n        data[componentAlias[prop]] = data[prop]\n        delete data[prop]\n      }\n    }\n  }\n\n  return data\n}\n","import { hooks, isArray, isObject, warn } from '@tarojs/shared'\n\nimport type { AddEventListenerOptions, EventHandler } from '../interface'\n\nexport class TaroEventTarget {\n  public __handlers: Record<string, EventHandler[]> = {}\n\n  public addEventListener (type: string, handler: EventHandler, options?: boolean | AddEventListenerOptions) {\n    type = type.toLowerCase()\n\n    hooks.call('onAddEvent', type, handler, options, this)\n\n    if (type === 'regionchange') {\n      // map 组件的 regionchange 事件非常特殊，详情：https://github.com/NervJS/taro/issues/5766\n      this.addEventListener('begin', handler, options)\n      this.addEventListener('end', handler, options)\n      return\n    }\n\n    let isCapture = Boolean(options)\n    let isOnce = false\n    if (isObject<AddEventListenerOptions>(options)) {\n      isCapture = Boolean(options.capture)\n      isOnce = Boolean(options.once)\n    }\n\n    if (isOnce) {\n      const wrapper = function () {\n        handler.apply(this, arguments) // this 指向 Element\n        this.removeEventListener(type, wrapper)\n      }\n      this.addEventListener(type, wrapper, {\n        ...(options as AddEventListenerOptions),\n        once: false\n      })\n      return\n    }\n\n    process.env.NODE_ENV !== 'production' && warn(isCapture, 'Taro 暂未实现 event 的 capture 特性。')\n\n    // 某些框架，如 PReact 有委托的机制，handler 始终是同一个函数\n    // 这会导致多层停止冒泡失败：view -> view(handler.stop = false) -> view(handler.stop = true)\n    // 这样解决：view -> view(handlerA.stop = false) -> view(handlerB.stop = false)\n    // 因此每次绑定事件都新建一个函数，如果带来了性能问题，可以把这段逻辑抽取到 PReact 插件中。\n    const oldHandler = handler\n    handler = function () {\n      return oldHandler.apply(this, arguments) // this 指向 Element\n    }\n    ;(handler as any).oldHandler = oldHandler\n\n    const handlers = this.__handlers[type]\n    if (isArray(handlers)) {\n      handlers.push(handler)\n    } else {\n      this.__handlers[type] = [handler]\n    }\n  }\n\n  public removeEventListener (type: string, handler: EventHandler) {\n    type = type.toLowerCase()\n\n    if (type === 'regionchange') {\n      // map 组件的 regionchange 事件非常特殊，详情：https://github.com/NervJS/taro/issues/5766\n      this.removeEventListener('begin', handler)\n      this.removeEventListener('end', handler)\n      return\n    }\n\n    if (!handler) {\n      return\n    }\n\n    const handlers = this.__handlers[type]\n    if (!isArray(handlers)) {\n      return\n    }\n\n    const index = handlers.findIndex(item => {\n      if (item === handler || (item as any).oldHandler === handler) return true\n    })\n\n    process.env.NODE_ENV !== 'production' && warn(index === -1, `事件: '${type}' 没有注册在 DOM 中，因此不会被移除。`)\n\n    handlers.splice(index, 1)\n  }\n\n  public isAnyEventBinded (): boolean {\n    const handlers = this.__handlers\n    const isAnyEventBinded = Object.keys(handlers).find(key => handlers[key].length)\n    return Boolean(isAnyEventBinded)\n  }\n}\n","import { ensure, hooks, Shortcuts } from '@tarojs/shared'\n\nimport { DOCUMENT_FRAGMENT } from '../constants'\nimport { MutationObserver, MutationRecordType } from '../dom-external/mutation-observer'\nimport env from '../env'\nimport { hydrate } from '../hydrate'\nimport { extend, incrementId, isComment } from '../utils'\nimport { eventSource } from './event-source'\nimport { TaroEventTarget } from './event-target'\nimport { NodeType } from './node_types'\n\nimport type { Func, UpdatePayload } from '../interface'\nimport type { TaroDocument } from './document'\nimport type { TaroElement } from './element'\nimport type { TaroRootElement } from './root'\n\ninterface RemoveChildOptions {\n  cleanRef?: boolean\n  doUpdate?: boolean\n}\n\nconst CHILDNODES = Shortcuts.Childnodes\nconst nodeId = incrementId()\n\nexport class TaroNode extends TaroEventTarget {\n  public uid: string\n  public sid: string\n  public nodeType: NodeType\n  public nodeName: string\n  public parentNode: TaroNode | null = null\n  public childNodes: TaroNode[] = []\n\n  public constructor () {\n    super()\n    this.uid = '_' + nodeId() // dom 节点 id，开发者可修改\n    this.sid = this.uid // dom 节点全局唯一 id，不可被修改\n    eventSource.set(this.sid, this)\n  }\n\n  private hydrate = (node: TaroNode) => () => hydrate(node as TaroElement)\n\n  private updateChildNodes (isClean?: boolean) {\n    const cleanChildNodes = () => []\n    const rerenderChildNodes = () => {\n      const childNodes = this.childNodes.filter(node => !isComment(node))\n      return childNodes.map(hydrate)\n    }\n\n    this.enqueueUpdate({\n      path: `${this._path}.${CHILDNODES}`,\n      value: isClean ? cleanChildNodes : rerenderChildNodes\n    })\n  }\n\n  public get _root (): TaroRootElement | null {\n    return this.parentNode?._root || null\n  }\n\n  protected findIndex (refChild: TaroNode): number {\n    const index = this.childNodes.indexOf(refChild)\n\n    ensure(index !== -1, 'The node to be replaced is not a child of this node.')\n\n    return index\n  }\n\n  public get _path (): string {\n    const parentNode = this.parentNode\n\n    if (parentNode) {\n      // 计算路径时，先过滤掉 comment 节点\n      const list = parentNode.childNodes.filter(node => !isComment(node))\n      const indexOfNode = list.indexOf(this)\n      const index = hooks.call('getPathIndex', indexOfNode)\n\n      return `${parentNode._path}.${CHILDNODES}.${index}`\n    }\n\n    return ''\n  }\n\n  public get nextSibling (): TaroNode | null {\n    const parentNode = this.parentNode\n    return parentNode?.childNodes[parentNode.findIndex(this) + 1] || null\n  }\n\n  public get previousSibling (): TaroNode | null {\n    const parentNode = this.parentNode\n    return parentNode?.childNodes[parentNode.findIndex(this) - 1] || null\n  }\n\n  public get parentElement (): TaroElement | null {\n    const parentNode = this.parentNode\n    if (parentNode?.nodeType === NodeType.ELEMENT_NODE) {\n      return parentNode as TaroElement\n    }\n    return null\n  }\n\n  public get firstChild (): TaroNode | null {\n    return this.childNodes[0] || null\n  }\n\n  public get lastChild (): TaroNode | null {\n    const childNodes = this.childNodes\n    return childNodes[childNodes.length - 1] || null\n  }\n\n  /**\n   * @textContent 目前只能置空子元素\n   * @TODO 等待完整 innerHTML 实现\n   */\n  // eslint-disable-next-line accessor-pairs\n  public set textContent (text: string) {\n    const removedNodes = this.childNodes.slice()\n    const addedNodes: TaroNode[] = []\n\n    // Handle old children' data structure & ref\n    while (this.firstChild) {\n      this.removeChild(this.firstChild, { doUpdate: false })\n    }\n\n    if (text === '') {\n      this.updateChildNodes(true)\n    } else {\n      const newText = env.document.createTextNode(text)\n      addedNodes.push(newText)\n      this.appendChild(newText)\n      this.updateChildNodes()\n    }\n\n    // @Todo: appendChild 会多触发一次\n    MutationObserver.record({\n      type: MutationRecordType.CHILD_LIST,\n      target: this,\n      removedNodes,\n      addedNodes\n    })\n  }\n\n  /**\n   * @doc https://developer.mozilla.org/zh-CN/docs/Web/API/Node/insertBefore\n   * @scenario\n   * [A,B,C]\n   *   1. insert D before C, D has no parent\n   *   2. insert D before C, D has the same parent of C\n   *   3. insert D before C, D has the different parent of C\n   */\n  public insertBefore<T extends TaroNode> (newChild: T, refChild?: TaroNode | null, isReplace?: boolean): T {\n    if (newChild.nodeName === DOCUMENT_FRAGMENT) {\n      newChild.childNodes.reduceRight((previousValue, currentValue) => {\n        this.insertBefore(currentValue, previousValue)\n        return currentValue\n      }, refChild)\n      return newChild\n    }\n\n    // Parent release newChild\n    //   - cleanRef: false (No need to clean eventSource, because newChild is about to be inserted)\n    //   - update: true (Need to update parent.childNodes, because parent.childNodes is reordered)\n    newChild.remove({ cleanRef: false })\n\n    // Data structure\n    newChild.parentNode = this\n    if (refChild) {\n      // insertBefore & replaceChild\n      const index = this.findIndex(refChild)\n      this.childNodes.splice(index, 0, newChild)\n    } else {\n      // appendChild\n      this.childNodes.push(newChild)\n    }\n\n    // Serialization\n    if (this._root) {\n      if (!refChild) {\n        // appendChild\n        const isOnlyChild = this.childNodes.length === 1\n        if (isOnlyChild) {\n          this.updateChildNodes()\n        } else {\n          this.enqueueUpdate({\n            path: newChild._path,\n            value: this.hydrate(newChild)\n          })\n        }\n      } else if (isReplace) {\n        // replaceChild\n        this.enqueueUpdate({\n          path: newChild._path,\n          value: this.hydrate(newChild)\n        })\n      } else {\n        // insertBefore\n        this.updateChildNodes()\n      }\n    }\n\n    MutationObserver.record({\n      type: MutationRecordType.CHILD_LIST,\n      target: this,\n      addedNodes: [newChild],\n      removedNodes: isReplace\n        ? [refChild as TaroNode] /** replaceChild */\n        : [],\n      nextSibling: isReplace\n        ? (refChild as TaroNode).nextSibling /** replaceChild */\n        : (refChild || null), /** insertBefore & appendChild */\n      previousSibling: newChild.previousSibling\n    })\n\n    return newChild\n  }\n\n  /**\n   * @doc https://developer.mozilla.org/zh-CN/docs/Web/API/Node/appendChild\n   * @scenario\n   * [A,B,C]\n   *   1. append C, C has no parent\n   *   2. append C, C has the same parent of B\n   *   3. append C, C has the different parent of B\n   */\n  public appendChild (newChild: TaroNode) {\n    return this.insertBefore(newChild)\n  }\n\n  /**\n   * @doc https://developer.mozilla.org/zh-CN/docs/Web/API/Node/replaceChild\n   * @scenario\n   * [A,B,C]\n   *   1. replace B with C, C has no parent\n   *   2. replace B with C, C has no parent, C has the same parent of B\n   *   3. replace B with C, C has no parent, C has the different parent of B\n   */\n  public replaceChild (newChild: TaroNode, oldChild: TaroNode) {\n    if (oldChild.parentNode !== this) return\n\n    // Insert the newChild\n    this.insertBefore(newChild, oldChild, true)\n\n    // Destroy the oldChild\n    //   - cleanRef: true (Need to clean eventSource, because the oldChild was detached from the DOM tree)\n    //   - update: false (No need to update parent.childNodes, because replace will not cause the parent.childNodes being reordered)\n    oldChild.remove({ doUpdate: false })\n\n    return oldChild\n  }\n\n  /**\n   * @doc https://developer.mozilla.org/zh-CN/docs/Web/API/Node/removeChild\n   * @scenario\n   * [A,B,C]\n   *   1. remove A or B\n   *   2. remove C\n   */\n  public removeChild<T extends TaroNode> (child: T, options: RemoveChildOptions = {}): T {\n    const { cleanRef, doUpdate } = options\n\n    if (cleanRef !== false && doUpdate !== false) {\n      // appendChild/replaceChild/insertBefore 不应该触发\n      // @Todo: 但其实如果 newChild 的父节点是另一颗子树的节点，应该是要触发的\n      MutationObserver.record({\n        type: MutationRecordType.CHILD_LIST,\n        target: this,\n        removedNodes: [child],\n        nextSibling: child.nextSibling,\n        previousSibling: child.previousSibling\n      })\n    }\n\n    // Data Structure\n    const index = this.findIndex(child)\n    this.childNodes.splice(index, 1)\n    child.parentNode = null\n\n    // Set eventSource\n    if (cleanRef !== false) {\n      eventSource.removeNodeTree(child)\n    }\n\n    // Serialization\n    if (this._root && doUpdate !== false) {\n      this.updateChildNodes()\n    }\n\n    return child\n  }\n\n  public remove (options?: RemoveChildOptions) {\n    this.parentNode?.removeChild(this, options)\n  }\n\n  public hasChildNodes () {\n    return this.childNodes.length > 0\n  }\n\n  public enqueueUpdate (payload: UpdatePayload) {\n    this._root?.enqueueUpdate(payload)\n  }\n\n  public get ownerDocument (): TaroDocument {\n    return env.document\n  }\n\n  static extend (methodName: string, options: Func | Record<string, any>) {\n    extend(TaroNode, methodName, options)\n  }\n}\n","/*\n *\n * https://www.w3.org/Style/CSS/all-properties.en.html\n */\n\nconst WEBKIT = 'webkit'\n\nconst styleProperties = [\n  'all',\n  'appearance',\n  'blockOverflow',\n  'blockSize',\n  'bottom',\n  'clear',\n  'contain',\n  'content',\n  'continue',\n  'cursor',\n  'direction',\n  'display',\n  'filter',\n  'float',\n  'gap',\n  'height',\n  'inset',\n  'isolation',\n  'left',\n  'letterSpacing',\n  'lightingColor',\n  'markerSide',\n  'mixBlendMode',\n  'opacity',\n  'order',\n  'position',\n  'quotes',\n  'resize',\n  'right',\n  'rowGap',\n  'tabSize',\n  'tableLayout',\n  'top',\n  'userSelect',\n  'verticalAlign',\n  'visibility',\n  'voiceFamily',\n  'volume',\n  'whiteSpace',\n  'widows',\n  'width',\n  'zIndex',\n  'pointerEvents'\n\n  /** 非常用 style */\n  // 'azimuth',\n  // 'backfaceVisibility',\n  // 'baselineShift',\n  // 'captionSide',\n  // 'chains',\n  // 'dominantBaseline',\n  // 'elevation',\n  // 'emptyCells',\n  // 'forcedColorAdjust',\n  // 'glyphOrientationVertical',\n  // 'hangingPunctuation',\n  // 'hyphenateCharacter',\n  // 'hyphens',\n  // 'imageOrientation',\n  // 'imageResolution',\n  // 'orphans',\n  // 'playDuring',\n  // 'pointerEvents',\n  // 'regionFragment',\n  // 'richness',\n  // 'running',\n  // 'scrollBehavior',\n  // 'speechRate',\n  // 'stress',\n  // 'stringSet',\n  // 'unicodeBidi',\n  // 'willChange',\n  // 'writingMode',\n]\n\n// 减少文件体积\nfunction combine (prefix: string, list: string[], excludeSelf?: boolean) {\n  !excludeSelf && styleProperties.push(prefix)\n  list.forEach(item => {\n    styleProperties.push(prefix + item)\n    if (prefix === WEBKIT) {\n      styleProperties.push('Webkit' + item)\n    }\n  })\n}\n\nconst color = 'Color'\nconst style = 'Style'\nconst width = 'Width'\nconst image = 'Image'\nconst size = 'Size'\nconst color_style_width = [color, style, width]\nconst fitlength_fitwidth_image = ['FitLength', 'FitWidth', image]\nconst fitlength_fitwidth_image_radius = [...fitlength_fitwidth_image, 'Radius']\nconst color_style_width_fitlength_fitwidth_image = [...color_style_width, ...fitlength_fitwidth_image]\nconst endRadius_startRadius = ['EndRadius', 'StartRadius']\nconst bottom_left_right_top = ['Bottom', 'Left', 'Right', 'Top']\nconst end_start = ['End', 'Start']\nconst content_items_self = ['Content', 'Items', 'Self']\nconst blockSize_height_inlineSize_width = ['BlockSize', 'Height', 'InlineSize', width]\nconst after_before = ['After', 'Before']\n\ncombine('borderBlock', color_style_width)\ncombine('borderBlockEnd', color_style_width)\ncombine('borderBlockStart', color_style_width)\ncombine('outline', [...color_style_width, 'Offset'])\ncombine('border', [...color_style_width, 'Boundary', 'Break', 'Collapse', 'Radius', 'Spacing'])\ncombine('borderFit', ['Length', width])\ncombine('borderInline', color_style_width)\ncombine('borderInlineEnd', color_style_width)\ncombine('borderInlineStart', color_style_width)\ncombine('borderLeft', color_style_width_fitlength_fitwidth_image)\ncombine('borderRight', color_style_width_fitlength_fitwidth_image)\ncombine('borderTop', color_style_width_fitlength_fitwidth_image)\ncombine('borderBottom', color_style_width_fitlength_fitwidth_image)\ncombine('textDecoration', [color, style, 'Line'])\ncombine('textEmphasis', [color, style, 'Position'])\ncombine('scrollMargin', bottom_left_right_top)\ncombine('scrollPadding', bottom_left_right_top)\ncombine('padding', bottom_left_right_top)\ncombine('margin', [...bottom_left_right_top, 'Trim'])\ncombine('scrollMarginBlock', end_start)\ncombine('scrollMarginInline', end_start)\ncombine('scrollPaddingBlock', end_start)\ncombine('scrollPaddingInline', end_start)\ncombine('gridColumn', end_start)\ncombine('gridRow', end_start)\ncombine('insetBlock', end_start)\ncombine('insetInline', end_start)\ncombine('marginBlock', end_start)\ncombine('marginInline', end_start)\ncombine('paddingBlock', end_start)\ncombine('paddingInline', end_start)\ncombine('pause', after_before)\ncombine('cue', after_before)\ncombine('mask', ['Clip', 'Composite', image, 'Mode', 'Origin', 'Position', 'Repeat', size, 'Type'])\ncombine('borderImage', ['Outset', 'Repeat', 'Slice', 'Source', 'Transform', width])\ncombine('maskBorder', ['Mode', 'Outset', 'Repeat', 'Slice', 'Source', width])\ncombine('font', ['Family', 'FeatureSettings', 'Kerning', 'LanguageOverride', 'MaxSize', 'MinSize', 'OpticalSizing', 'Palette', size, 'SizeAdjust', 'Stretch', style, 'Weight', 'VariationSettings'])\ncombine('transform', ['Box', 'Origin', style])\ncombine('background', [color, image, 'Attachment', 'BlendMode', 'Clip', 'Origin', 'Position', 'Repeat', size])\ncombine('listStyle', [image, 'Position', 'Type'])\ncombine('scrollSnap', ['Align', 'Stop', 'Type'])\ncombine('grid', ['Area', 'AutoColumns', 'AutoFlow', 'AutoRows'])\ncombine('gridTemplate', ['Areas', 'Columns', 'Rows'])\ncombine('overflow', ['Block', 'Inline', 'Wrap', 'X', 'Y'])\ncombine('transition', ['Delay', 'Duration', 'Property', 'TimingFunction'])\ncombine('color', ['Adjust', 'InterpolationFilters', 'Scheme'])\ncombine('textAlign', ['All', 'Last'])\ncombine('page', ['BreakAfter', 'BreakBefore', 'BreakInside'])\ncombine('animation', ['Delay', 'Direction', 'Duration', 'FillMode', 'IterationCount', 'Name', 'PlayState', 'TimingFunction'])\ncombine('flex', ['Basis', 'Direction', 'Flow', 'Grow', 'Shrink', 'Wrap'])\ncombine('offset', [...after_before, ...end_start, 'Anchor', 'Distance', 'Path', 'Position', 'Rotate'])\ncombine('perspective', ['Origin'])\ncombine('clip', ['Path', 'Rule'])\ncombine('flow', ['From', 'Into'])\n\ncombine('align', ['Content', 'Items', 'Self'], true)\ncombine('alignment', ['Adjust', 'Baseline'], true)\ncombine('borderStart', endRadius_startRadius, true)\ncombine('borderEnd', endRadius_startRadius, true)\ncombine('borderCorner', ['Fit', image, 'ImageTransform'], true)\ncombine('borderTopLeft', fitlength_fitwidth_image_radius, true)\ncombine('borderTopRight', fitlength_fitwidth_image_radius, true)\ncombine('borderBottomLeft', fitlength_fitwidth_image_radius, true)\ncombine('borderBottomRight', fitlength_fitwidth_image_radius, true)\ncombine('column', ['s', 'Count', 'Fill', 'Gap', 'Rule', 'RuleColor', 'RuleStyle', 'RuleWidth', 'Span', width], true)\ncombine('break', [...after_before, 'Inside'], true)\ncombine('wrap', [...after_before, 'Flow', 'Inside', 'Through'], true)\ncombine('justify', content_items_self, true)\ncombine('place', content_items_self, true)\ncombine('max', [...blockSize_height_inlineSize_width, 'Lines'], true)\ncombine('min', blockSize_height_inlineSize_width, true)\ncombine('line', ['Break', 'Clamp', 'Grid', 'Height', 'Padding', 'Snap'], true)\ncombine('inline', ['BoxAlign', size, 'Sizing'], true)\ncombine('text', ['CombineUpright', 'GroupAlign', 'Height', 'Indent', 'Justify', 'Orientation', 'Overflow', 'Shadow', 'SpaceCollapse', 'SpaceTrim', 'Spacing', 'Transform', 'UnderlinePosition', 'Wrap'], true)\ncombine('shape', ['ImageThreshold', 'Inside', 'Margin', 'Outside'], true)\ncombine('word', ['Break', 'Spacing', 'Wrap'], true)\ncombine('object', ['Fit', 'Position'], true)\ncombine('box', ['DecorationBreak', 'Shadow', 'Sizing', 'Snap'], true)\n\ncombine(WEBKIT, ['LineClamp', 'BoxOrient', 'TextFillColor', 'TextStroke', 'TextStrokeColor', 'TextStrokeWidth'], true)\n\n/** 非常用 style */\n// combine('caret', [color, 'Shape'])\n// combine('counter', ['Increment', 'Reset', 'Set'], true)\n// combine('dropInitial', ['AfterAdjust', 'AfterAlign', 'BeforeAdjust', 'BeforeAlign', size, 'Value'], true)\n// combine('flood', [color, 'Opacity'], true)\n// combine('footnote', ['Display', 'Policy'], true)\n// combine('hyphenateLimit', ['Chars', 'Last', 'Lines', 'Zone'], true)\n// combine('initialLetters', ['Align', 'Wrap'])\n// combine('ruby', ['Align', 'Merge', 'Position'], true)\n// combine('lineStacking', ['Ruby', 'Shift', 'Strategy'])\n// combine('bookmark', ['Label', 'Level', 'State'], true)\n// combine('speak', ['Header', 'Numeral', 'Punctuation'])\n// combine('pitch', ['Range'])\n// combine('nav', ['Down', 'Left', 'Right', 'Up'], true)\n// combine('fontSynthesis', ['SmallCaps', style, 'Weight'])\n// combine('fontVariant', ['Alternates', 'Caps', 'EastAsian', 'Emoji', 'Ligatures', 'Numeric', 'Position'])\n\nexport { styleProperties }\n","import { isNull, isString, isUndefined, Shortcuts, toCamelCase, toDashed, warn } from '@tarojs/shared'\n\nimport { PROPERTY_THRESHOLD } from '../constants'\nimport { MutationObserver, MutationRecordType } from '../dom-external/mutation-observer'\nimport { TaroElement } from './element'\nimport { styleProperties } from './style_properties'\n\nfunction recordCss (obj: Style) {\n  MutationObserver.record({\n    type: MutationRecordType.ATTRIBUTES,\n    target: obj._element,\n    attributeName: 'style',\n    oldValue: obj.cssText\n  })\n}\n\nfunction enqueueUpdate (obj: Style) {\n  const element = obj._element\n  if (element._root) {\n    element.enqueueUpdate({\n      path: `${element._path}.${Shortcuts.Style}`,\n      value: obj.cssText\n    })\n  }\n}\n\nfunction setStyle (this: Style, newVal: string, styleKey: string) {\n  process.env.NODE_ENV !== 'production' && warn(\n    isString(newVal) && newVal.length > PROPERTY_THRESHOLD,\n    `Style 属性 ${styleKey} 的值数据量过大，可能会影响渲染性能，考虑使用 CSS 类或其它方案替代。`\n  )\n\n  const old = this[styleKey]\n\n  if (old === newVal) return\n\n  !this._pending && recordCss(this)\n\n  if (isNull(newVal) || isUndefined(newVal)) {\n    this._usedStyleProp.delete(styleKey)\n    delete this._value[styleKey]\n  } else {\n    this._usedStyleProp.add(styleKey)\n    this._value[styleKey] = newVal\n  }\n\n  !this._pending && enqueueUpdate(this)\n}\n\nfunction initStyle (ctor: typeof Style) {\n  const properties = {}\n\n  for (let i = 0; i < styleProperties.length; i++) {\n    const styleKey = styleProperties[i]\n    properties[styleKey] = {\n      get (this: Style) {\n        const val = this._value[styleKey]\n        return isNull(val) || isUndefined(val) ? '' : val\n      },\n      set (this: Style, newVal: string) {\n        setStyle.call(this, newVal, styleKey)\n      }\n    }\n  }\n\n  Object.defineProperties(ctor.prototype, properties)\n}\n\nfunction isCssVariable (propertyName) {\n  return /^--/.test(propertyName)\n}\n\nexport class Style {\n  public _pending: boolean\n\n  public _usedStyleProp: Set<string>\n\n  public _value: Partial<CSSStyleDeclaration>\n\n  public _element: TaroElement\n\n  public constructor (element: TaroElement) {\n    this._element = element\n    this._usedStyleProp = new Set()\n    this._value = {}\n  }\n\n  private setCssVariables (styleKey: string) {\n    this.hasOwnProperty(styleKey) || Object.defineProperty(this, styleKey, {\n      enumerable: true,\n      configurable: true,\n      get: () => {\n        return this._value[styleKey] || ''\n      },\n      set: (newVal: string) => {\n        setStyle.call(this, newVal, styleKey)\n      }\n    })\n  }\n\n  public get cssText () {\n    if (!this._usedStyleProp.size) return ''\n\n    const texts: string[] = []\n    this._usedStyleProp.forEach(key => {\n      const val = this[key]\n      if (isNull(val) || isUndefined(val)) return\n      let styleName = isCssVariable(key) ? key : toDashed(key)\n      if (styleName.indexOf('webkit') === 0 || styleName.indexOf('Webkit') === 0) {\n        styleName = `-${styleName}`\n      }\n      texts.push(`${styleName}: ${val};`)\n    })\n    return texts.join(' ')\n  }\n\n  public set cssText (str: string) {\n    this._pending = true\n    recordCss(this)\n\n    this._usedStyleProp.forEach(prop => {\n      this.removeProperty(prop)\n    })\n\n    if (str === '' || isUndefined(str) || isNull(str)) {\n      this._pending = false\n      enqueueUpdate(this)\n      return\n    }\n\n    const rules = str.split(';')\n\n    for (let i = 0; i < rules.length; i++) {\n      const rule = rules[i].trim()\n      if (rule === '') {\n        continue\n      }\n\n      // 可能存在 'background: url(http:x/y/z)' 的情况\n      const [propName, ...valList] = rule.split(':')\n      const val = valList.join(':')\n\n      if (isUndefined(val)) {\n        continue\n      }\n      this.setProperty(propName.trim(), val.trim())\n    }\n\n    this._pending = false\n    enqueueUpdate(this)\n  }\n\n  public setProperty (propertyName: string, value?: string | null) {\n    if (propertyName[0] === '-') {\n      // 支持 webkit 属性或 css 变量\n      this.setCssVariables(propertyName)\n    } else {\n      propertyName = toCamelCase(propertyName)\n    }\n\n    if (isNull(value) || isUndefined(value)) {\n      this.removeProperty(propertyName)\n    } else {\n      this[propertyName] = value\n    }\n  }\n\n  public removeProperty (propertyName: string): string {\n    propertyName = toCamelCase(propertyName)\n    if (!this._usedStyleProp.has(propertyName)) {\n      return ''\n    }\n\n    const value = this[propertyName]\n    this[propertyName] = undefined\n    return value\n  }\n\n  public getPropertyValue (propertyName: string) {\n    propertyName = toCamelCase(propertyName)\n    const value = this[propertyName]\n    if (!value) {\n      return ''\n    }\n\n    return value\n  }\n}\n\ninitStyle(Style)\n","import { NodeType } from './node_types'\n\nimport type { TaroElement } from './element'\n\ntype Filter = (element: TaroElement) => boolean\n\nfunction returnTrue () {\n  return true\n}\n\nexport function treeToArray (root: TaroElement, predict?: Filter): TaroElement[] {\n  const array: TaroElement[] = []\n  const filter = predict ?? returnTrue\n\n  let object: TaroElement | null = root\n\n  while (object) {\n    if (object.nodeType === NodeType.ELEMENT_NODE && filter(object)) {\n      array.push(object)\n    }\n\n    object = following(object, root)\n  }\n\n  return array\n}\n\nfunction following (el: TaroElement, root: TaroElement): TaroElement | null {\n  const firstChild = el.firstChild\n\n  if (firstChild) {\n    return firstChild as TaroElement\n  }\n\n  let current: TaroElement | null = el\n\n  do {\n    if (current === root) {\n      return null\n    }\n\n    const nextSibling = current.nextSibling\n\n    if (nextSibling) {\n      return nextSibling as TaroElement\n    }\n    current = current.parentElement\n  } while (current)\n\n  return null\n}\n","import { EMPTY_OBJ, hooks, isArray, isFunction, isObject, isString, isUndefined, Shortcuts, toCamelCase, warn } from '@tarojs/shared'\n\nimport {\n  CATCH_VIEW,\n  CATCHMOVE,\n  CLASS,\n  EVENT_CALLBACK_RESULT,\n  FOCUS,\n  ID,\n  PROPERTY_THRESHOLD,\n  PURE_VIEW,\n  STATIC_VIEW,\n  STYLE,\n  VIEW\n} from '../constants'\nimport { MutationObserver, MutationRecordType } from '../dom-external/mutation-observer'\nimport { extend, getComponentsAlias, isElement, isHasExtractProp, shortcutAttr } from '../utils'\nimport { ClassList } from './class-list'\nimport { eventSource } from './event-source'\nimport { TaroNode } from './node'\nimport { NodeType } from './node_types'\nimport { Style } from './style'\nimport { treeToArray } from './tree'\n\nimport type { Attributes, Func } from '../interface'\nimport type { TaroEvent } from './event'\n\nexport class TaroElement extends TaroNode {\n  public tagName: string\n  public props: Record<string, any> = {}\n  public style: Style\n  public dataset: Record<string, unknown> = EMPTY_OBJ\n  public innerHTML: string\n\n  public constructor () {\n    super()\n    this.nodeType = NodeType.ELEMENT_NODE\n    this.style = new Style(this)\n    hooks.call('patchElement', this)\n  }\n\n  private _stopPropagation (event: TaroEvent) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let target = this\n    // eslint-disable-next-line no-cond-assign\n    while ((target = target.parentNode as this)) {\n      const listeners = target.__handlers[event.type]\n\n      if (!isArray(listeners)) {\n        continue\n      }\n\n      for (let i = listeners.length; i--;) {\n        const l = listeners[i]\n        l._stop = true\n      }\n    }\n  }\n\n  public get id (): string {\n    return this.getAttribute(ID)!\n  }\n\n  public set id (val: string) {\n    this.setAttribute(ID, val)\n  }\n\n  public get className (): string {\n    return this.getAttribute(CLASS) || ''\n  }\n\n  public set className (val: string) {\n    this.setAttribute(CLASS, val)\n  }\n\n  public get cssText (): string {\n    return this.getAttribute(STYLE) || ''\n  }\n\n  public get classList (): ClassList {\n    return new ClassList(this.className, this)\n  }\n\n  public get children (): TaroElement[] {\n    return this.childNodes.filter(isElement)\n  }\n\n  public get attributes (): Attributes[] {\n    const props = this.props\n    const propKeys = Object.keys(props)\n    const style = this.style.cssText\n    const attrs = propKeys.map(key => ({ name: key, value: props[key] }))\n    return attrs.concat(style ? { name: STYLE, value: style } : [])\n  }\n\n  public get textContent (): string {\n    let text = ''\n    const childNodes = this.childNodes\n\n    for (let i = 0; i < childNodes.length; i++) {\n      text += childNodes[i].textContent\n    }\n\n    return text\n  }\n\n  public set textContent (text: string) {\n    super.textContent = text\n  }\n\n  public hasAttribute (qualifiedName: string): boolean {\n    return !isUndefined(this.props[qualifiedName])\n  }\n\n  public hasAttributes (): boolean {\n    return this.attributes.length > 0\n  }\n\n  public get focus () {\n    return function () {\n      this.setAttribute(FOCUS, true)\n    }\n  }\n\n  // 兼容 Vue3，详情请见：https://github.com/NervJS/taro/issues/10579\n  public set focus (value) {\n    this.setAttribute(FOCUS, value)\n  }\n\n  public blur () {\n    this.setAttribute(FOCUS, false)\n  }\n\n  public setAttribute (qualifiedName: string, value: any): void {\n    process.env.NODE_ENV !== 'production' && warn(\n      isString(value) && value.length > PROPERTY_THRESHOLD,\n      `元素 ${this.nodeName} 的 ${qualifiedName} 属性值数据量过大，可能会影响渲染性能。考虑降低图片转为 base64 的阈值或在 CSS 中使用 base64。`\n    )\n\n    const isPureView = this.nodeName === VIEW && !isHasExtractProp(this) && !this.isAnyEventBinded()\n\n    if (qualifiedName !== STYLE) {\n      MutationObserver.record({\n        target: this,\n        type: MutationRecordType.ATTRIBUTES,\n        attributeName: qualifiedName,\n        oldValue: this.getAttribute(qualifiedName)\n      })\n    }\n\n    switch (qualifiedName) {\n      case STYLE:\n        this.style.cssText = value as string\n        break\n      case ID:\n        if (this.uid !== this.sid) {\n          // eventSource[sid] 永远保留，直到组件卸载\n          // eventSource[uid] 可变\n          eventSource.delete(this.uid)\n        }\n        value = String(value)\n        this.props[qualifiedName] = this.uid = value\n        eventSource.set(value, this)\n        break\n      default:\n        this.props[qualifiedName] = value as string\n\n        if (qualifiedName.startsWith('data-')) {\n          if (this.dataset === EMPTY_OBJ) {\n            this.dataset = Object.create(null)\n          }\n          this.dataset[toCamelCase(qualifiedName.replace(/^data-/, ''))] = value\n        }\n        break\n    }\n\n    // Serialization\n    if (!this._root) return\n\n    const componentsAlias = getComponentsAlias()\n    const _alias = componentsAlias[this.nodeName]\n    const viewAlias = componentsAlias[VIEW]._num\n    const staticViewAlias = componentsAlias[STATIC_VIEW]._num\n    const catchViewAlias = componentsAlias[CATCH_VIEW]._num\n    const _path = this._path\n\n    qualifiedName = shortcutAttr(qualifiedName)\n\n    const qualifiedNameInCamelCase = toCamelCase(qualifiedName)\n    const payload = {\n      path: `${_path}.${qualifiedNameInCamelCase}`,\n      value: isFunction(value) ? () => value : value\n    }\n\n    hooks.call('modifySetAttrPayload', this, qualifiedName, payload, componentsAlias)\n\n    if (_alias) {\n      const qualifiedNameAlias = _alias[qualifiedNameInCamelCase] || qualifiedName\n      payload.path = `${_path}.${toCamelCase(qualifiedNameAlias)}`\n    }\n\n    this.enqueueUpdate(payload)\n\n    if (this.nodeName === VIEW) {\n      if (qualifiedNameInCamelCase === CATCHMOVE) {\n        // catchMove = true: catch-view\n        // catchMove = false: view or static-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: value ? catchViewAlias : (\n            this.isAnyEventBinded() ? viewAlias : staticViewAlias\n          )\n        })\n      } else if (isPureView && isHasExtractProp(this)) {\n        // pure-view => static-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: staticViewAlias\n        })\n      }\n    }\n  }\n\n  public removeAttribute (qualifiedName: string) {\n    const isStaticView = this.nodeName === VIEW && isHasExtractProp(this) && !this.isAnyEventBinded()\n\n    MutationObserver.record({\n      target: this,\n      type: MutationRecordType.ATTRIBUTES,\n      attributeName: qualifiedName,\n      oldValue: this.getAttribute(qualifiedName)\n    })\n\n    if (qualifiedName === STYLE) {\n      this.style.cssText = ''\n    } else {\n      const isInterrupt = hooks.call('onRemoveAttribute', this, qualifiedName)\n      if (isInterrupt) {\n        return\n      }\n\n      if (!this.props.hasOwnProperty(qualifiedName)) {\n        return\n      }\n      delete this.props[qualifiedName]\n    }\n\n    // Serialization\n    if (!this._root) return\n\n    const componentsAlias = getComponentsAlias()\n    const _alias = componentsAlias[this.nodeName]\n    const viewAlias = componentsAlias[VIEW]._num\n    const staticViewAlias = componentsAlias[STATIC_VIEW]._num\n    const pureViewAlias = componentsAlias[PURE_VIEW]._num\n    const _path = this._path\n\n    qualifiedName = shortcutAttr(qualifiedName)\n\n    const qualifiedNameInCamelCase = toCamelCase(qualifiedName)\n    const payload = {\n      path: `${_path}.${qualifiedNameInCamelCase}`,\n      value: ''\n    }\n\n    hooks.call('modifyRmAttrPayload', this, qualifiedName, payload, componentsAlias)\n\n    if (_alias) {\n      const qualifiedNameAlias = _alias[qualifiedNameInCamelCase] || qualifiedName\n      payload.path = `${_path}.${toCamelCase(qualifiedNameAlias)}`\n    }\n\n    this.enqueueUpdate(payload)\n\n    if (this.nodeName === VIEW) {\n      if (qualifiedNameInCamelCase === CATCHMOVE) {\n        // catch-view => view or static-view or pure-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: this.isAnyEventBinded() ? viewAlias : (isHasExtractProp(this) ? staticViewAlias : pureViewAlias)\n        })\n      } else if (isStaticView && !isHasExtractProp(this)) {\n        // static-view => pure-view\n        this.enqueueUpdate({\n          path: `${_path}.${Shortcuts.NodeName}`,\n          value: pureViewAlias\n        })\n      }\n    }\n  }\n\n  public getAttribute (qualifiedName: string): string {\n    const attr = qualifiedName === STYLE ? this.style.cssText : this.props[qualifiedName]\n    return attr ?? ''\n  }\n\n  public getElementsByTagName (tagName: string): TaroElement[] {\n    return treeToArray(this, (el) => {\n      return el.nodeName === tagName || (tagName === '*' && this !== el)\n    })\n  }\n\n  public getElementsByClassName (className: string): TaroElement[] {\n    return treeToArray(this, (el) => {\n      const classList = el.classList\n      const classNames = className.trim().split(/\\s+/)\n      return classNames.every(c => classList.has(c))\n    })\n  }\n\n  public dispatchEvent (event: TaroEvent): boolean {\n    const cancelable = event.cancelable\n\n    const listeners = this.__handlers[event.type]\n\n    if (!isArray(listeners)) {\n      return false\n    }\n\n    for (let i = listeners.length; i--;) {\n      const listener = listeners[i]\n      let result: unknown\n      if (listener._stop) {\n        listener._stop = false\n      } else {\n        hooks.call('modifyDispatchEvent', event, this)\n        result = listener.call(this, event)\n      }\n      if ((result === false || event._end) && cancelable) {\n        event.defaultPrevented = true\n      }\n\n      if (!isUndefined(result) && event.mpEvent) {\n        event.mpEvent[EVENT_CALLBACK_RESULT] = result\n      }\n\n      if (event._end && event._stop) {\n        break\n      }\n    }\n\n    if (event._stop) {\n      this._stopPropagation(event)\n    } else {\n      event._stop = true\n    }\n\n    return listeners != null\n  }\n\n  public addEventListener (type, handler, options) {\n    const name = this.nodeName\n    const SPECIAL_NODES = hooks.call('getSpecialNodes')!\n\n    let sideEffect = true\n    if (isObject<Record<string, any>>(options) && options.sideEffect === false) {\n      sideEffect = false\n      delete options.sideEffect\n    }\n\n    if (sideEffect !== false && !this.isAnyEventBinded() && SPECIAL_NODES.indexOf(name) > -1) {\n      const componentsAlias = getComponentsAlias()\n      const alias = componentsAlias[name]._num\n      this.enqueueUpdate({\n        path: `${this._path}.${Shortcuts.NodeName}`,\n        value: alias\n      })\n    }\n\n    super.addEventListener(type, handler, options)\n  }\n\n  public removeEventListener (type, handler, sideEffect = true) {\n    super.removeEventListener(type, handler)\n\n    const name = this.nodeName\n    const SPECIAL_NODES = hooks.call('getSpecialNodes')!\n\n    if (sideEffect !== false && !this.isAnyEventBinded() && SPECIAL_NODES.indexOf(name) > -1) {\n      const componentsAlias = getComponentsAlias()\n      const value = isHasExtractProp(this) ? `static-${name}` : `pure-${name}`\n      const valueAlias = componentsAlias[value]._num\n      this.enqueueUpdate({\n        path: `${this._path}.${Shortcuts.NodeName}`,\n        value: valueAlias\n      })\n    }\n  }\n\n  static extend (methodName: string, options: Func | Record<string, any>) {\n    extend(TaroElement, methodName, options)\n  }\n}\n","import type { Options } from './interface'\n\nexport const options: Options = {\n  prerender: true,\n  debug: false\n}\n","import { options } from '../../options'\n\ninterface Position {\n  index: number\n  column: number\n  line: number\n}\n\nexport interface Token {\n  type: string\n  content?: string\n  position?: {\n    start?: Position\n    end?: Position\n  }\n  close?: boolean\n}\n\nfunction initPosition (): Position {\n  return {\n    index: 0,\n    column: 0,\n    line: 0\n  }\n}\n\nfunction feedPosition (position: Position, str: string, len: number) {\n  const start = position.index\n  const end = position.index = start + len\n  for (let i = start; i < end; i++) {\n    const char = str.charAt(i)\n    if (char === '\\n') {\n      position.line++\n      position.column = 0\n    } else {\n      position.column++\n    }\n  }\n}\n\nfunction jumpPosition (position: Position, str: string, end: number) {\n  const len = end - position.index\n  return feedPosition(position, str, len)\n}\n\nfunction copyPosition (position: Position) {\n  return {\n    index: position.index,\n    line: position.line,\n    column: position.column\n  }\n}\n\nconst whitespace = /\\s/\nfunction isWhitespaceChar (char: string) {\n  return whitespace.test(char)\n}\n\nconst equalSign = /=/\nfunction isEqualSignChar (char: string) {\n  return equalSign.test(char)\n}\n\nfunction shouldBeIgnore (tagName: string) {\n  const name = tagName.toLowerCase()\n  if (options.html!.skipElements.has(name)) {\n    return true\n  }\n  return false\n}\n\nconst alphanumeric = /[A-Za-z0-9]/\n\nfunction findTextEnd (str: string, index: number) {\n  while (true) {\n    const textEnd = str.indexOf('<', index)\n    if (textEnd === -1) {\n      return textEnd\n    }\n    const char = str.charAt(textEnd + 1)\n    if (char === '/' || char === '!' || alphanumeric.test(char)) {\n      return textEnd\n    }\n    index = textEnd + 1\n  }\n}\n\nfunction isWordEnd (cursor: number, wordBegin: number, html: string) {\n  if (!isWhitespaceChar(html.charAt(cursor))) return false\n\n  const len = html.length\n\n  // backwrad\n  for (let i = cursor - 1; i > wordBegin; i--) {\n    const char = html.charAt(i)\n    if (!isWhitespaceChar(char)) {\n      if (isEqualSignChar(char)) return false\n      break\n    }\n  }\n\n  // forward\n  for (let i = cursor + 1; i < len; i++) {\n    const char = html.charAt(i)\n    if (!isWhitespaceChar(char)) {\n      if (isEqualSignChar(char)) return false\n      return true\n    }\n  }\n}\n\nexport class Scaner {\n  private tokens: Token[] = []\n\n  private position: Position = initPosition()\n\n  private html: string\n\n  constructor (html: string) {\n    this.html = html\n  }\n\n  public scan (): Token[] {\n    const { html, position } = this\n    const len = html.length\n\n    while (position.index < len) {\n      const start = position.index\n      this.scanText()\n      if (position.index === start) {\n        const isComment = html.startsWith('!--', start + 1)\n        if (isComment) {\n          this.scanComment()\n        } else {\n          const tagName = this.scanTag()\n          if (shouldBeIgnore(tagName)) {\n            this.scanSkipTag(tagName)\n          }\n        }\n      }\n    }\n\n    return this.tokens\n  }\n\n  private scanText () {\n    const type = 'text'\n    const { html, position } = this\n    let textEnd = findTextEnd(html, position.index)\n    if (textEnd === position.index) {\n      return\n    }\n    if (textEnd === -1) {\n      textEnd = html.length\n    }\n\n    const start = copyPosition(position)\n    const content = html.slice(position.index, textEnd)\n    jumpPosition(position, html, textEnd)\n    const end = copyPosition(position)\n    this.tokens.push({ type, content, position: { start, end } })\n  }\n\n  private scanComment () {\n    const type = 'comment'\n    const { html, position } = this\n    const start = copyPosition(position)\n    feedPosition(position, html, 4) // \"<!--\".length\n    let contentEnd = html.indexOf('-->', position.index)\n    let commentEnd = contentEnd + 3 // \"-->\".length\n    if (contentEnd === -1) {\n      contentEnd = commentEnd = html.length\n    }\n\n    const content = html.slice(position.index, contentEnd)\n    jumpPosition(position, html, commentEnd)\n    this.tokens.push({\n      type,\n      content,\n      position: {\n        start,\n        end: copyPosition(position)\n      }\n    })\n  }\n\n  private scanTag () {\n    this.scanTagStart()\n    const tagName = this.scanTagName()\n    this.scanAttrs()\n    this.scanTagEnd()\n\n    return tagName\n  }\n\n  private scanTagStart () {\n    const type = 'tag-start'\n    const { html, position } = this\n\n    const secondChar = html.charAt(position.index + 1)\n    const close = secondChar === '/'\n    const start = copyPosition(position)\n    feedPosition(position, html, close ? 2 : 1)\n    this.tokens.push({ type, close, position: { start } })\n  }\n\n  private scanTagEnd () {\n    const type = 'tag-end'\n    const { html, position } = this\n\n    const firstChar = html.charAt(position.index)\n    const close = firstChar === '/'\n    feedPosition(position, html, close ? 2 : 1)\n    const end = copyPosition(position)\n    this.tokens.push({ type, close, position: { end } })\n  }\n\n  private scanTagName (): string {\n    const type = 'tag'\n    const { html, position } = this\n    const len = html.length\n    let start = position.index\n    while (start < len) {\n      const char = html.charAt(start)\n      const isTagChar = !(isWhitespaceChar(char) || char === '/' || char === '>')\n      if (isTagChar) break\n      start++\n    }\n\n    let end = start + 1\n    while (end < len) {\n      const char = html.charAt(end)\n      const isTagChar = !(isWhitespaceChar(char) || char === '/' || char === '>')\n      if (!isTagChar) break\n      end++\n    }\n\n    jumpPosition(position, html, end)\n    const tagName = html.slice(start, end)\n    this.tokens.push({\n      type,\n      content: tagName\n    })\n\n    return tagName\n  }\n\n  private scanAttrs () {\n    const { html, position, tokens } = this\n    let cursor = position.index\n    let quote: string | null = null // null, single-, or double-quote\n    let wordBegin = cursor // index of word start\n    const words: string[] = [] // \"key\", \"key=value\", \"key='value'\", etc\n    const len = html.length\n    while (cursor < len) {\n      const char = html.charAt(cursor)\n      if (quote) {\n        const isQuoteEnd = char === quote\n        if (isQuoteEnd) {\n          quote = null\n        }\n        cursor++\n        continue\n      }\n\n      const isTagEnd = char === '/' || char === '>'\n      if (isTagEnd) {\n        if (cursor !== wordBegin) {\n          words.push(html.slice(wordBegin, cursor))\n        }\n        break\n      }\n\n      if (isWordEnd(cursor, wordBegin, html)) {\n        if (cursor !== wordBegin) {\n          words.push(html.slice(wordBegin, cursor))\n        }\n        wordBegin = cursor + 1\n        cursor++\n        continue\n      }\n\n      const isQuoteStart = char === '\\'' || char === '\"'\n      if (isQuoteStart) {\n        quote = char\n        cursor++\n        continue\n      }\n\n      cursor++\n    }\n\n    jumpPosition(position, html, cursor)\n\n    const wLen = words.length\n    const type = 'attribute'\n    for (let i = 0; i < wLen; i++) {\n      const word = words[i]\n      const isNotPair = word.includes('=')\n      if (isNotPair) {\n        const secondWord = words[i + 1]\n        if (secondWord && secondWord.startsWith('=')) {\n          if (secondWord.length > 1) {\n            const newWord = word + secondWord\n            tokens.push({ type, content: newWord })\n            i += 1\n            continue\n          }\n          const thirdWord = words[i + 2]\n          i += 1\n          if (thirdWord) {\n            const newWord = word + '=' + thirdWord\n            tokens.push({ type, content: newWord })\n            i += 1\n            continue\n          }\n        }\n      }\n      if (word.endsWith('=')) {\n        const secondWord = words[i + 1]\n        if (secondWord && !secondWord.includes('=')) {\n          const newWord = word + secondWord\n          tokens.push({ type, content: newWord })\n          i += 1\n          continue\n        }\n\n        const newWord = word.slice(0, -1)\n        tokens.push({ type, content: newWord })\n        continue\n      }\n\n      tokens.push({ type, content: word })\n    }\n  }\n\n  private scanSkipTag (tagName: string) {\n    const { html, position } = this\n    const safeTagName = tagName.toLowerCase()\n    const len = html.length\n    while (position.index < len) {\n      const nextTag = html.indexOf('</', position.index)\n      if (nextTag === -1) {\n        this.scanText()\n        break\n      }\n\n      jumpPosition(position, html, nextTag)\n      const name = this.scanTag()\n      if (safeTagName === name.toLowerCase()) {\n        break\n      }\n    }\n  }\n}\n","export function unquote (str: string): string {\n  const car = str.charAt(0)\n  const end = str.length - 1\n  const isQuoteStart = car === '\"' || car === \"'\"\n  if (isQuoteStart && car === str.charAt(end)) {\n    return str.slice(1, end)\n  }\n  return str\n}\n","import { NodeType } from '../../dom/node_types'\nimport { unquote } from './utils'\n\nimport type { TaroNode } from '../../dom/node'\nimport type { ParsedTaroElement } from './parser'\n\nconst LEFT_BRACKET = '{'\nconst RIGHT_BRACKET = '}'\nconst CLASS_SELECTOR = '.'\nconst ID_SELECTOR = '#'\nconst CHILD_COMBINATOR = '>'\nconst GENERAL_SIBLING_COMBINATOR = '~'\nconst ADJACENT_SIBLING_COMBINATOR = '+'\n\ninterface ISelector {\n  isChild: boolean\n  isGeneralSibling: boolean\n  isAdjacentSibling: boolean\n  tag: string | null\n  id: string | null\n  class: string[]\n  attrs: {\n    all: boolean\n    key: string\n    value?: string | null\n  }[]\n}\n\ninterface IStyle {\n  content: string\n  selectorList: ISelector[]\n}\n\nexport default class StyleTagParser {\n  styles: IStyle[] = []\n\n  extractStyle (src: string) {\n    const REG_STYLE = /<style\\s?[^>]*>((.|\\n|\\s)+?)<\\/style>/g\n    let html = src\n    // let html = src.replace(/\\n/g, '')\n\n    html = html.replace(REG_STYLE, (_, $1: string) => {\n      const style = $1.trim()\n      this.stringToSelector(style)\n      return ''\n    })\n\n    return html.trim()\n  }\n\n  stringToSelector (style: string) {\n    let lb = style.indexOf(LEFT_BRACKET)\n\n    while (lb > -1) {\n      const rb = style.indexOf(RIGHT_BRACKET)\n      const selectors = style.slice(0, lb).trim()\n\n      let content = style.slice(lb + 1, rb)\n      content = content.replace(/:(.*);/g, function (_, $1) {\n        const t = $1.trim().replace(/ +/g, '+++')\n        return `:${t};`\n      })\n      content = content.replace(/ /g, '')\n      content = content.replace(/\\+\\+\\+/g, ' ')\n\n      if (!(/;$/.test(content))) {\n        content += ';'\n      }\n      selectors.split(',').forEach(src => {\n        const selectorList = this.parseSelector(src)\n        this.styles.push({\n          content,\n          selectorList\n        })\n      })\n      style = style.slice(rb + 1)\n      lb = style.indexOf(LEFT_BRACKET)\n    }\n    // console.log('res this.styles: ', this.styles)\n  }\n\n  parseSelector (src: string) {\n    const list = src\n      .trim()\n      .replace(/ *([>~+]) */g, ' $1')\n      .replace(/ +/g, ' ')\n      .replace(/\\[\\s*([^[\\]=\\s]+)\\s*=\\s*([^[\\]=\\s]+)\\s*\\]/g, '[$1=$2]')\n      .split(' ')\n    const selectors = list.map(item => {\n      const firstChar = item.charAt(0)\n      const selector: ISelector = {\n        isChild: firstChar === CHILD_COMBINATOR,\n        isGeneralSibling: firstChar === GENERAL_SIBLING_COMBINATOR,\n        isAdjacentSibling: firstChar === ADJACENT_SIBLING_COMBINATOR,\n        tag: null,\n        id: null,\n        class: [],\n        attrs: []\n      }\n\n      item = item.replace(/^[>~+]/, '')\n\n      // 属性选择器\n      item = item.replace(/\\[(.+?)\\]/g, function (_, $1: string) {\n        const [key, value] = $1.split('=')\n        const all = $1.indexOf('=') === -1\n\n        const attr = {\n          all,\n          key,\n          value: all ? null : value\n        }\n        selector.attrs.push(attr)\n        return ''\n      })\n\n      item = item.replace(/([.#][A-Za-z0-9-_]+)/g, function (_, $1: string) {\n        if ($1[0] === ID_SELECTOR) {\n          // id 选择器\n          selector.id = $1.substr(1)\n        } else if ($1[0] === CLASS_SELECTOR) {\n          // class 选择器\n          selector.class.push($1.substr(1))\n        }\n        return ''\n      })\n\n      // 标签选择器\n      if (item !== '') {\n        selector.tag = item\n      }\n\n      return selector\n    })\n    return selectors\n  }\n\n  matchStyle (tagName: string, el: ParsedTaroElement, list: number[]): string {\n    const res = sortStyles(this.styles).reduce((str, { content, selectorList }, i) => {\n      let idx = list[i]\n      let selector = selectorList[idx]\n      const nextSelector = selectorList[idx + 1]\n\n      if (nextSelector?.isGeneralSibling || nextSelector?.isAdjacentSibling) {\n        selector = nextSelector\n        idx += 1\n        list[i] += 1\n      }\n\n      let isMatch = this.matchCurrent(tagName, el, selector)\n\n      if (isMatch && selector.isGeneralSibling) {\n        let prev: ParsedTaroElement = getPreviousElement(el)\n        while (prev) {\n          if (prev.h5tagName && this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])) {\n            isMatch = true\n            break\n          }\n          prev = getPreviousElement(prev)\n          isMatch = false\n        }\n      }\n      if (isMatch && selector.isAdjacentSibling) {\n        const prev: ParsedTaroElement = getPreviousElement(el)\n        if (!prev || !prev.h5tagName) {\n          isMatch = false\n        } else {\n          const isSiblingMatch = this.matchCurrent(prev.h5tagName, prev, selectorList[idx - 1])\n          if (!isSiblingMatch) {\n            isMatch = false\n          }\n        }\n      }\n\n      if (isMatch) {\n        if (idx === selectorList.length - 1) {\n          return str + content\n        } else if (idx < selectorList.length - 1) {\n          list[i] += 1\n        }\n      } else {\n        // 直接子代组合器: >\n        if (selector.isChild && idx > 0) {\n          list[i] -= 1\n          if (this.matchCurrent(tagName, el, selectorList[list[i]])) {\n            list[i] += 1\n          }\n        }\n      }\n\n      return str\n    }, '')\n    return res\n  }\n\n  matchCurrent (tagName: string, el: ParsedTaroElement, selector: ISelector): boolean {\n    // 标签选择器\n    if (selector.tag && selector.tag !== tagName) return false\n\n    // id 选择器\n    if (selector.id && selector.id !== el.id) return false\n\n    // class 选择器\n    if (selector.class.length) {\n      const classList = el.className.split(' ')\n      for (let i = 0; i < selector.class.length; i++) {\n        const cls = selector.class[i]\n        if (classList.indexOf(cls) === -1) {\n          return false\n        }\n      }\n    }\n\n    // 属性选择器\n    if (selector.attrs.length) {\n      for (let i = 0; i < selector.attrs.length; i++) {\n        const { all, key, value } = selector.attrs[i]\n        if (all && !el.hasAttribute(key)) {\n          return false\n        } else {\n          const attr = el.getAttribute(key)\n          if (attr !== unquote(value || '')) {\n            return false\n          }\n        }\n      }\n    }\n\n    return true\n  }\n}\n\nfunction getPreviousElement (el: TaroNode) {\n  const parent = el.parentElement\n  if (!parent) return null\n\n  const prev = el.previousSibling\n  if (!prev) return null\n\n  if (prev.nodeType === NodeType.ELEMENT_NODE) {\n    return prev\n  } else {\n    return getPreviousElement(prev)\n  }\n}\n\n// 根据 css selector 权重排序: 权重大的靠后\n// @WARN 不考虑伪类\n// https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance#specificity_2\nfunction sortStyles (styles: IStyle[]) {\n  return styles.sort((s1, s2) => {\n    const hundreds1 = getHundredsWeight(s1.selectorList)\n    const hundreds2 = getHundredsWeight(s2.selectorList)\n\n    if (hundreds1 !== hundreds2) return hundreds1 - hundreds2\n\n    const tens1 = getTensWeight(s1.selectorList)\n    const tens2 = getTensWeight(s2.selectorList)\n\n    if (tens1 !== tens2) return tens1 - tens2\n\n    const ones1 = getOnesWeight(s1.selectorList)\n    const ones2 = getOnesWeight(s2.selectorList)\n\n    return ones1 - ones2\n  })\n}\n\nfunction getHundredsWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.id ? 1 : 0), 0)\n}\n\nfunction getTensWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + cur.class.length + cur.attrs.length, 0)\n}\n\nfunction getOnesWeight (selectors: ISelector[]) {\n  return selectors.reduce((pre, cur) => pre + (cur.tag ? 1 : 0), 0)\n}\n","import { internalComponents } from '@tarojs/shared'\n\nexport function makeMap (\n  str: string,\n  expectsLowerCase?: boolean\n): (key: string) => boolean {\n  const map: Record<string, boolean> = Object.create(null)\n  const list: Array<string> = str.split(',')\n  for (let i = 0; i < list.length; i++) {\n    map[list[i]] = true\n  }\n  return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val]\n}\n\nexport const specialMiniElements = {\n  img: 'image',\n  iframe: 'web-view'\n}\n\nconst internalCompsList = Object.keys(internalComponents)\n  .map(i => i.toLowerCase())\n  .join(',')\n\n// https://developers.weixin.qq.com/miniprogram/dev/component\nexport const isMiniElements = makeMap(internalCompsList, true)\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\nexport const isInlineElements = makeMap('a,i,abbr,iframe,select,acronym,slot,small,span,bdi,kbd,strong,big,map,sub,sup,br,mark,mark,meter,template,canvas,textarea,cite,object,time,code,output,u,data,picture,tt,datalist,var,dfn,del,q,em,s,embed,samp,b', true)\n\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\nexport const isBlockElements = makeMap('address,fieldset,li,article,figcaption,main,aside,figure,nav,blockquote,footer,ol,details,form,p,dialog,h1,h2,h3,h4,h5,h6,pre,dd,header,section,div,hgroup,table,dl,hr,ul,dt', true)\n","import { isFunction } from '@tarojs/shared'\n\nimport { options } from '../../options'\nimport { Scaner, Token } from './scaner'\nimport StyleTagParser from './style'\nimport { isBlockElements, isInlineElements, isMiniElements, specialMiniElements } from './tags'\nimport { unquote } from './utils'\n\nimport type { TaroDocument } from '../../dom/document'\nimport type { TaroElement } from '../../dom/element'\n\ninterface State {\n  tokens: Token[]\n  cursor: number\n  stack: Element[]\n}\n\nconst closingTagAncestorBreakers = {\n  li: ['ul', 'ol', 'menu'],\n  dt: ['dl'],\n  dd: ['dl'],\n  tbody: ['table'],\n  thead: ['table'],\n  tfoot: ['table'],\n  tr: ['table'],\n  td: ['table']\n}\n\ninterface Node {\n  type: string\n}\n\ninterface Comment extends Node {\n  type: 'comment'\n  content: string\n}\n\nexport interface Text extends Node {\n  type: 'text'\n  content: string\n}\n\nexport interface Element extends Node {\n  type: 'element'\n  tagName: string\n  children: ChildNode[]\n  attributes: string[]\n}\n\nexport interface ParsedTaroElement extends TaroElement{\n  h5tagName?: string\n}\n\ntype ChildNode = Comment | Text | Element\n\nfunction hasTerminalParent (tagName: string, stack: Element[]) {\n  const tagParents: undefined | string[] = closingTagAncestorBreakers[tagName]\n  if (tagParents) {\n    let currentIndex = stack.length - 1\n    while (currentIndex >= 0) {\n      const parentTagName = stack[currentIndex].tagName\n      if (parentTagName === tagName) {\n        break\n      }\n      if (tagParents && tagParents.includes(parentTagName!)) {\n        return true\n      }\n      currentIndex--\n    }\n  }\n  return false\n}\n\nfunction getTagName (tag: string) {\n  if (options.html!.renderHTMLTag) {\n    return tag\n  }\n\n  if (specialMiniElements[tag]) {\n    return specialMiniElements[tag]\n  } else if (isMiniElements(tag)) {\n    return tag\n  } else if (isBlockElements(tag)) {\n    return 'view'\n  } else if (isInlineElements(tag)) {\n    return 'text'\n  }\n\n  return 'view'\n}\n\nfunction splitEqual (str: string) {\n  const sep = '='\n  const idx = str.indexOf(sep)\n  if (idx === -1) return [str]\n  const key = str.slice(0, idx).trim()\n  const value = str.slice(idx + sep.length).trim()\n  return [key, value]\n}\n\nfunction format (\n  children: ChildNode[],\n  document: TaroDocument,\n  styleOptions: {\n    styleTagParser: StyleTagParser\n    descendantList: number[]\n  },\n  parent?: TaroElement\n) {\n  return children\n    .filter(child => {\n      // 过滤注释和空文本节点\n      if (child.type === 'comment') {\n        return false\n      } else if (child.type === 'text') {\n        return child.content !== ''\n      }\n      return true\n    })\n    .map((child: Text | Element) => {\n      // 文本节点\n      if (child.type === 'text') {\n        let text = document.createTextNode(child.content)\n        if (isFunction(options.html!.transformText)) {\n          text = options.html!.transformText(text, child)\n        }\n        parent?.appendChild(text)\n        return text\n      }\n\n      const el: ParsedTaroElement = document.createElement(getTagName(child.tagName))\n      el.h5tagName = child.tagName\n\n      parent?.appendChild(el)\n\n      if (!options.html!.renderHTMLTag) {\n        el.className = `h5-${child.tagName}`\n      }\n\n      for (let i = 0; i < child.attributes.length; i++) {\n        const attr = child.attributes[i]\n        const [key, value] = splitEqual(attr)\n        if (key === 'class') {\n          el.className += ' ' + unquote(value)\n        } else if (key[0] === 'o' && key[1] === 'n') {\n          continue\n        } else {\n          el.setAttribute(key, value == null ? true : unquote(value))\n        }\n      }\n\n      const { styleTagParser, descendantList } = styleOptions\n      const list = descendantList.slice()\n      const style = styleTagParser.matchStyle(child.tagName, el, list)\n\n      el.setAttribute('style', style + el.style.cssText)\n      // console.log('style, ', style)\n\n      format(child.children, document, {\n        styleTagParser,\n        descendantList: list\n      }, el)\n\n      if (isFunction(options.html!.transformElement)) {\n        return options.html!.transformElement(el, child)\n      }\n\n      return el\n    })\n}\n\nexport function parser (html: string, document: TaroDocument) {\n  const styleTagParser = new StyleTagParser()\n  html = styleTagParser.extractStyle(html)\n\n  const tokens = new Scaner(html).scan()\n\n  const root: Element = { tagName: '', children: [], type: 'element', attributes: [] }\n\n  const state = { tokens, options, cursor: 0, stack: [root] }\n  parse(state)\n\n  return format(root.children, document, {\n    styleTagParser,\n    descendantList: Array(styleTagParser.styles.length).fill(0)\n  })\n}\n\nfunction parse (state: State) {\n  const { tokens, stack } = state\n  let { cursor } = state\n\n  const len = tokens.length\n\n  let nodes = stack[stack.length - 1].children\n\n  while (cursor < len) {\n    const token = tokens[cursor]\n    if (token.type !== 'tag-start') {\n      // comment or text\n      nodes.push(token as ChildNode)\n      cursor++\n      continue\n    }\n\n    const tagToken = tokens[++cursor]\n    cursor++\n    const tagName = tagToken.content!.toLowerCase()\n    if (token.close) {\n      let index = stack.length\n      let shouldRewind = false\n      while (--index > -1) {\n        if (stack[index].tagName === tagName) {\n          shouldRewind = true\n          break\n        }\n      }\n      while (cursor < len) {\n        const endToken = tokens[cursor]\n        if (endToken.type !== 'tag-end') break\n        cursor++\n      }\n      if (shouldRewind) {\n        stack.splice(index)\n        break\n      } else {\n        continue\n      }\n    }\n\n    const isClosingTag = options.html!.closingElements.has(tagName)\n    let shouldRewindToAutoClose = isClosingTag\n    if (shouldRewindToAutoClose) {\n      shouldRewindToAutoClose = !hasTerminalParent(tagName, stack)\n    }\n\n    if (shouldRewindToAutoClose) {\n      let currentIndex = stack.length - 1\n      while (currentIndex > 0) {\n        if (tagName === stack[currentIndex].tagName) {\n          stack.splice(currentIndex)\n          const previousIndex = currentIndex - 1\n          nodes = stack[previousIndex].children\n          break\n        }\n        currentIndex = currentIndex - 1\n      }\n    }\n\n    const attributes: string[] = []\n    let attrToken: Token\n    while (cursor < len) {\n      attrToken = tokens[cursor]\n      if (attrToken.type === 'tag-end') break\n      attributes.push(attrToken.content!)\n      cursor++\n    }\n\n    cursor++\n    const children: Element[] = []\n    const element: Element = {\n      type: 'element',\n      tagName: tagToken.content!,\n      attributes,\n      children\n    }\n    nodes.push(element)\n\n    const hasChildren = !(attrToken!.close || options.html!.voidElements.has(tagName))\n    if (hasChildren) {\n      stack.push({ tagName, children } as any)\n      const innerState: State = { tokens, cursor, stack }\n      parse(innerState)\n      cursor = innerState.cursor\n    }\n  }\n\n  state.cursor = cursor\n}\n","import { options } from '../../options'\nimport { parser } from './parser'\n\nimport type { TaroNode } from '../../dom/node'\n\noptions.html = {\n  skipElements: new Set(['style', 'script']),\n  voidElements: new Set([\n    '!doctype', 'area', 'base', 'br', 'col', 'command',\n    'embed', 'hr', 'img', 'input', 'keygen', 'link',\n    'meta', 'param', 'source', 'track', 'wbr'\n  ]),\n  closingElements: new Set([\n    'html', 'head', 'body', 'p', 'dt', 'dd', 'li', 'option',\n    'thead', 'th', 'tbody', 'tr', 'td', 'tfoot', 'colgroup'\n  ]),\n  renderHTMLTag: false\n}\n\nexport function setInnerHTML (element: TaroNode, html: string) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild)\n  }\n  const children = parser(html, element.ownerDocument)\n\n  for (let i = 0; i < children.length; i++) {\n    element.appendChild(children[i])\n  }\n}\n","import { DOCUMENT_FRAGMENT } from '../constants'\nimport { options } from '../options'\n\nimport type { TaroElement } from '../dom/element'\n\nexport function getBoundingClientRectImpl (this: TaroElement): Promise<null> {\n  if (!options.miniGlobal) return Promise.resolve(null)\n  return new Promise(resolve => {\n    const query = options.miniGlobal.createSelectorQuery()\n    query.select(`#${this.uid}`).boundingClientRect(res => {\n      resolve(res)\n    }).exec()\n  })\n}\n\nexport function getTemplateContent (ctx: TaroElement): TaroElement | undefined {\n  if (ctx.nodeName === 'template') {\n    const document = ctx.ownerDocument\n    const content: TaroElement = document.createElement(DOCUMENT_FRAGMENT)\n    content.childNodes = ctx.childNodes\n    ctx.childNodes = [content]\n    content.parentNode = ctx\n    content.childNodes.forEach(nodes => {\n      nodes.parentNode = content\n    })\n    return content\n  }\n}\n","import { DATASET, OBJECT, PROPS, STYLE } from '../constants'\nimport { NodeType } from '../dom/node_types'\nimport { parser } from '../dom-external/inner-html/parser'\n\nimport type { TaroNode } from '../dom/node'\n\nexport type IPosition = 'beforebegin' | 'afterbegin' | 'beforeend' | 'afterend'\n\n/**\n * An implementation of `Element.insertAdjacentHTML()`\n * to support Vue 3 with a version of or greater than `vue@3.1.2`\n */\nexport function insertAdjacentHTML (\n  this: TaroNode,\n  position: IPosition,\n  html: string\n) {\n  const parsedNodes = parser(html, this.ownerDocument)\n\n  for (let i = 0; i < parsedNodes.length; i++) {\n    const n = parsedNodes[i]\n\n    switch (position) {\n      case 'beforebegin':\n        this.parentNode?.insertBefore(n, this)\n        break\n      case 'afterbegin':\n        if (this.hasChildNodes()) {\n          this.insertBefore(n, this.childNodes[0])\n        } else {\n          this.appendChild(n)\n        }\n        break\n      case 'beforeend':\n        this.appendChild(n)\n        break\n      case 'afterend':\n        this.parentNode?.appendChild(n)\n        break\n    }\n  }\n}\n\nexport function cloneNode (this: TaroNode, isDeep = false) {\n  const document = this.ownerDocument\n  let newNode\n\n  if (this.nodeType === NodeType.ELEMENT_NODE) {\n    newNode = document.createElement(this.nodeName)\n  } else if (this.nodeType === NodeType.TEXT_NODE) {\n    newNode = document.createTextNode('')\n  }\n\n  for (const key in this) {\n    const value: any = this[key]\n    if ([PROPS, DATASET].includes(key) && typeof value === OBJECT) {\n      newNode[key] = { ...value }\n    } else if (key === '_value') {\n      newNode[key] = value\n    } else if (key === STYLE) {\n      newNode.style._value = { ...value._value }\n      newNode.style._usedStyleProp = new Set(Array.from(value._usedStyleProp))\n    }\n  }\n\n  if (isDeep) {\n    newNode.childNodes = this.childNodes.map(node => (node as any).cloneNode(true))\n  }\n\n  return newNode\n}\n\nexport function contains (this: TaroNode, node: TaroNode & { id?: string }): boolean {\n  let isContains = false\n  this.childNodes.some(childNode => {\n    const { uid } = childNode\n    if (uid === node.uid || uid === node.id || (childNode as any).contains(node)) {\n      isContains = true\n      return true\n    }\n  })\n  return isContains\n}\n","import { isWebPlatform } from '@tarojs/shared'\n\nimport { TaroElement } from '../dom/element'\nimport { TaroNode } from '../dom/node'\nimport { setInnerHTML } from '../dom-external/inner-html/html'\nimport { getBoundingClientRectImpl, getTemplateContent } from './element'\nimport { cloneNode, contains, insertAdjacentHTML } from './node'\n\ndeclare const ENABLE_INNER_HTML: boolean\ndeclare const ENABLE_ADJACENT_HTML: boolean\ndeclare const ENABLE_CLONE_NODE: boolean\ndeclare const ENABLE_CONTAINS: boolean\n\ndeclare const ENABLE_SIZE_APIS: boolean\ndeclare const ENABLE_TEMPLATE_CONTENT: boolean\n\nif (!isWebPlatform()) {\n  if (ENABLE_INNER_HTML) {\n    TaroNode.extend('innerHTML', {\n      set (html: string) {\n        setInnerHTML.call(this, this, html)\n      },\n      get (): string {\n        return ''\n      }\n    })\n\n    if (ENABLE_ADJACENT_HTML) {\n      TaroNode.extend('insertAdjacentHTML', insertAdjacentHTML)\n    }\n  }\n\n  if (ENABLE_CLONE_NODE) {\n    TaroNode.extend('cloneNode', cloneNode)\n  }\n\n  if (ENABLE_CONTAINS) {\n    TaroNode.extend('contains', contains)\n  }\n\n  if (ENABLE_SIZE_APIS) {\n    TaroElement.extend('getBoundingClientRect', getBoundingClientRectImpl)\n  }\n\n  if (ENABLE_TEMPLATE_CONTENT) {\n    TaroElement.extend('content', {\n      get () {\n        return getTemplateContent(this)\n      }\n    })\n  }\n}\n","import { EMPTY_OBJ, hooks, isUndefined } from '@tarojs/shared'\n\nimport {\n  CONFIRM,\n  CURRENT_TARGET,\n  EVENT_CALLBACK_RESULT,\n  INPUT,\n  KEY_CODE,\n  TARGET,\n  TIME_STAMP,\n  TOUCHMOVE,\n  TYPE\n} from '../constants'\nimport env from '../env'\nimport { isParentBinded } from '../utils'\n\nimport type { EventOptions, MpEvent } from '../interface'\nimport type { TaroElement } from './element'\n\n// Taro 事件对象。以 Web 标准的事件对象为基础，加入小程序事件对象中携带的部分信息，并模拟实现事件冒泡。\nexport class TaroEvent {\n  private cacheTarget\n  private cacheCurrentTarget\n\n  public type: string\n\n  public bubbles: boolean\n\n  public cancelable: boolean\n\n  public _stop = false\n\n  public _end = false\n\n  public defaultPrevented = false\n\n  // Mouse Event botton property, it's used in 3rd lib, like react-router. default 0 in general\n  public button = 0\n\n  // timestamp can either be hi-res ( relative to page load) or low-res (relative to UNIX epoch)\n  // here use hi-res timestamp\n  public timeStamp = Date.now()\n\n  public mpEvent: MpEvent | undefined\n\n  public constructor (type: string, opts: EventOptions, event?: MpEvent) {\n    this.type = type.toLowerCase()\n    this.mpEvent = event\n    this.bubbles = Boolean(opts && opts.bubbles)\n    this.cancelable = Boolean(opts && opts.cancelable)\n  }\n\n  public stopPropagation () {\n    this._stop = true\n  }\n\n  public stopImmediatePropagation () {\n    this._end = this._stop = true\n  }\n\n  public preventDefault () {\n    this.defaultPrevented = true\n  }\n\n  get target () {\n    const cacheTarget = this.cacheTarget\n    if (!cacheTarget) {\n      const target = Object.create(this.mpEvent?.target || null)\n\n      const element = env.document.getElementById(target.id)\n      target.dataset = element !== null ? element.dataset : EMPTY_OBJ\n\n      for (const key in this.mpEvent?.detail) {\n        target[key] = this.mpEvent!.detail[key]\n      }\n\n      this.cacheTarget = target\n\n      return target\n    } else {\n      return cacheTarget\n    }\n  }\n\n  get currentTarget () {\n    const cacheCurrentTarget = this.cacheCurrentTarget\n    if (!cacheCurrentTarget) {\n      const doc = env.document\n\n      const currentTarget = Object.create(this.mpEvent?.currentTarget || null)\n\n      const element = doc.getElementById(currentTarget.id)\n      const targetElement = doc.getElementById(this.mpEvent?.target?.id || null)\n\n      if (element === null || (element && element === targetElement)) {\n        this.cacheCurrentTarget = this.target\n        return this.target\n      }\n\n      currentTarget.dataset = element.dataset\n\n      for (const key in this.mpEvent?.detail) {\n        currentTarget[key] = this.mpEvent!.detail[key]\n      }\n\n      this.cacheCurrentTarget = currentTarget\n\n      return currentTarget\n    } else {\n      return cacheCurrentTarget\n    }\n  }\n}\n\nexport function createEvent (event: MpEvent | string, node?: TaroElement) {\n  if (typeof event === 'string') {\n    // For Vue3 using document.createEvent\n    return new TaroEvent(event, { bubbles: true, cancelable: true })\n  }\n\n  const domEv = new TaroEvent(event.type, { bubbles: true, cancelable: true }, event)\n\n  for (const key in event) {\n    if (key === CURRENT_TARGET || key === TARGET || key === TYPE || key === TIME_STAMP) {\n      continue\n    } else {\n      domEv[key] = event[key]\n    }\n  }\n\n  if (domEv.type === CONFIRM && node?.nodeName === INPUT) {\n    // eslint-disable-next-line dot-notation\n    domEv[KEY_CODE] = 13\n  }\n\n  return domEv\n}\n\nconst eventsBatch = {}\n\nfunction getEventCBResult (event: MpEvent) {\n  const result = event[EVENT_CALLBACK_RESULT]\n  if (!isUndefined(result)) {\n    delete event[EVENT_CALLBACK_RESULT]\n  }\n  return result\n}\n\n// 小程序的事件代理回调函数\nexport function eventHandler (event: MpEvent) {\n  // Note: ohos 上事件没有设置 type、detail 类型 setter 方法，且部分事件（例如 load 等）缺失 target 导致事件错误\n  event.type === undefined && Object.defineProperty(event, 'type', {\n    value: (event as any)._type // ohos only\n  })\n  event.detail === undefined && Object.defineProperty(event, 'detail', {\n    value: (event as any)._detail || { ...event } // ohos only\n  })\n  event.currentTarget = event.currentTarget || event.target || { ...event }\n  hooks.call('modifyMpEventImpl', event)\n\n  const currentTarget = event.currentTarget\n  const id = currentTarget.dataset?.sid as string /** sid */ || currentTarget.id /** uid */ || event.detail?.id as string || ''\n\n  const node = env.document.getElementById(id)\n  if (node) {\n    const dispatch = () => {\n      const e = createEvent(event, node)\n      hooks.call('modifyTaroEvent', e, node)\n      node.dispatchEvent(e)\n    }\n    if (hooks.isExist('batchedEventUpdates')) {\n      const type = event.type\n\n      if (\n        !hooks.call('isBubbleEvents', type) ||\n        !isParentBinded(node, type) ||\n        (type === TOUCHMOVE && !!node.props.catchMove)\n      ) {\n        // 最上层组件统一 batchUpdate\n        hooks.call('batchedEventUpdates', () => {\n          if (eventsBatch[type]) {\n            eventsBatch[type].forEach(fn => fn())\n            delete eventsBatch[type]\n          }\n          dispatch()\n        })\n        return getEventCBResult(event)\n      } else {\n        // 如果上层组件也有绑定同类型的组件，委托给上层组件调用事件回调\n        (eventsBatch[type] ||= []).push(dispatch)\n      }\n    } else {\n      dispatch()\n      return getEventCBResult(event)\n    }\n  }\n}\n","import {\n  CHANGE,\n  INPUT,\n  VALUE\n} from '../constants'\nimport { TaroElement } from './element'\n\nimport type { TaroEvent } from './event'\n\nexport class FormElement extends TaroElement {\n  public get value () {\n    // eslint-disable-next-line dot-notation\n    const val = this.props[VALUE]\n    return val == null ? '' : val\n  }\n\n  public set value (val: string | boolean | number | any[]) {\n    this.setAttribute(VALUE, val)\n  }\n\n  public dispatchEvent (event: TaroEvent) {\n    if (event.mpEvent) {\n      const val = event.mpEvent.detail.value\n      if (event.type === CHANGE) {\n        this.props.value = val as string\n      } else if (event.type === INPUT) {\n        // Web 规范中表单组件的 value 应该跟着输入改变\n        // 只是改 this.props.value 的话不会进行 setData，因此这里修改 this.value。\n        // 只测试了 React、Vue、Vue3 input 组件的 onInput 事件，onChange 事件不确定有没有副作用，所以暂不修改。\n        this.value = val as string\n      }\n    }\n\n    return super.dispatchEvent(event)\n  }\n}\n","import { options } from './options'\n\nclass Performance {\n  private recorder = new Map<string, number>()\n\n  public start (id: string) {\n    if (!options.debug) {\n      return\n    }\n    this.recorder.set(id, Date.now())\n  }\n\n  public stop (id: string) {\n    if (!options.debug) {\n      return\n    }\n    const now = Date.now()\n    const prev = this.recorder.get(id)!\n    this.recorder.delete(id)\n    const time = now - prev\n    // eslint-disable-next-line no-console\n    console.log(`${id} 时长： ${time}ms`)\n  }\n}\n\nexport const perf = new Performance()\n","import { isArray, isFunction, isUndefined, Shortcuts } from '@tarojs/shared'\n\nimport {\n  CUSTOM_WRAPPER,\n  PAGE_INIT,\n  ROOT_STR,\n  SET_DATA\n} from '../constants'\nimport { options } from '../options'\nimport { perf } from '../perf'\nimport { customWrapperCache, isComment } from '../utils'\nimport { TaroElement } from './element'\n\nimport type { Func, HydratedData, MpInstance, UpdatePayload, UpdatePayloadValue } from '../interface'\n\nfunction findCustomWrapper (root: TaroRootElement, dataPathArr: string[]) {\n  // ['root', 'cn', '[0]'] remove 'root' => ['cn', '[0]']\n  const list = dataPathArr.slice(1)\n  let currentData: any = root\n  let customWrapper: Record<string, any> | undefined\n  let splitedPath = ''\n\n  list.some((item, i) => {\n    const key = item\n      // '[0]' => '0'\n      .replace(/^\\[(.+)\\]$/, '$1')\n      // 'cn' => 'childNodes'\n      .replace(/\\bcn\\b/g, 'childNodes')\n\n    currentData = currentData[key]\n\n    if (isArray(currentData)) {\n      currentData = currentData.filter(el => !isComment(el))\n    }\n\n    if (isUndefined(currentData)) return true\n\n    if (currentData.nodeName === CUSTOM_WRAPPER) {\n      const res = customWrapperCache.get(currentData.sid)\n      if (res) {\n        customWrapper = res\n        splitedPath = dataPathArr.slice(i + 2).join('.')\n      }\n    }\n  })\n\n  if (customWrapper) {\n    return {\n      customWrapper,\n      splitedPath\n    }\n  }\n}\n\nexport class TaroRootElement extends TaroElement {\n  private updatePayloads: UpdatePayload[] = []\n\n  private updateCallbacks: Func[] = []\n\n  public pendingUpdate = false\n\n  public ctx: null | MpInstance = null\n\n  public constructor () {\n    super()\n    this.nodeName = ROOT_STR\n    this.tagName = ROOT_STR.toUpperCase()\n  }\n\n  public get _path (): string {\n    return ROOT_STR\n  }\n\n  public get _root (): TaroRootElement {\n    return this\n  }\n\n  public enqueueUpdate (payload: UpdatePayload): void {\n    this.updatePayloads.push(payload)\n\n    if (!this.pendingUpdate && this.ctx) {\n      this.performUpdate()\n    }\n  }\n\n  public performUpdate (initRender = false, prerender?: Func) {\n    this.pendingUpdate = true\n\n    const ctx = this.ctx!\n\n    setTimeout(() => {\n      const setDataMark = `${SET_DATA} 开始时间戳 ${Date.now()}`\n      perf.start(setDataMark)\n      const data: Record<string, UpdatePayloadValue | ReturnType<HydratedData>> = Object.create(null)\n      const resetPaths = new Set<string>(\n        initRender\n          ? ['root.cn.[0]', 'root.cn[0]']\n          : []\n      )\n\n      while (this.updatePayloads.length > 0) {\n        const { path, value } = this.updatePayloads.shift()!\n        if (path.endsWith(Shortcuts.Childnodes)) {\n          resetPaths.add(path)\n        }\n        data[path] = value\n      }\n\n      for (const path in data) {\n        resetPaths.forEach(p => {\n          // 已经重置了数组，就不需要分别再设置了\n          if (path.includes(p) && path !== p) {\n            delete data[path]\n          }\n        })\n\n        const value = data[path]\n        if (isFunction(value)) {\n          data[path] = value()\n        }\n      }\n\n      // 预渲染\n      if (isFunction(prerender)) return prerender(data)\n\n      // 正常渲染\n      this.pendingUpdate = false\n      let normalUpdate = {}\n      const customWrapperMap: Map<Record<any, any>, Record<string, any>> = new Map()\n\n      if (initRender) {\n        // 初次渲染，使用页面级别的 setData\n        normalUpdate = data\n      } else {\n        // 更新渲染，区分 CustomWrapper 与页面级别的 setData\n        for (const p in data) {\n          const dataPathArr = p.split('.')\n          const found = findCustomWrapper(this, dataPathArr)\n          if (found) {\n            // 此项数据使用 CustomWrapper 去更新\n            const { customWrapper, splitedPath } = found\n            // 合并同一个 customWrapper 的相关更新到一次 setData 中\n            customWrapperMap.set(customWrapper, {\n              ...(customWrapperMap.get(customWrapper) || {}),\n              [`i.${splitedPath}`]: data[p]\n            })\n          } else {\n            // 此项数据使用页面去更新\n            normalUpdate[p] = data[p]\n          }\n        }\n      }\n\n      const customWrapperCount = customWrapperMap.size\n      const isNeedNormalUpdate = Object.keys(normalUpdate).length > 0\n      const updateArrLen = customWrapperCount + (isNeedNormalUpdate ? 1 : 0)\n      let executeTime = 0\n\n      const cb = () => {\n        if (++executeTime === updateArrLen) {\n          perf.stop(setDataMark)\n          this.flushUpdateCallback()\n          initRender && perf.stop(PAGE_INIT)\n        }\n      }\n\n      // custom-wrapper setData\n      if (customWrapperCount) {\n        customWrapperMap.forEach((data, ctx) => {\n          if (process.env.NODE_ENV !== 'production' && options.debug) {\n            // eslint-disable-next-line no-console\n            console.log('custom wrapper setData: ', data)\n          }\n          ctx.setData(data, cb)\n        })\n      }\n\n      // page setData\n      if (isNeedNormalUpdate) {\n        if (process.env.NODE_ENV !== 'production' && options.debug) {\n          // eslint-disable-next-line no-console\n          console.log('page setData:', normalUpdate)\n        }\n        ctx.setData(normalUpdate, cb)\n      }\n    }, 0)\n  }\n\n  public enqueueUpdateCallback (cb: Func, ctx?: Record<string, any>) {\n    this.updateCallbacks.push(() => {\n      ctx ? cb.call(ctx) : cb()\n    })\n  }\n\n  public flushUpdateCallback () {\n    const updateCallbacks = this.updateCallbacks\n    if (!updateCallbacks.length) return\n\n    const copies = updateCallbacks.slice(0)\n    this.updateCallbacks.length = 0\n    for (let i = 0; i < copies.length; i++) {\n      copies[i]()\n    }\n  }\n}\n","import { Shortcuts } from '@tarojs/shared'\n\nimport { MutationObserver, MutationRecordType } from '../dom-external/mutation-observer'\nimport { TaroNode } from './node'\nimport { NodeType } from './node_types'\n\nexport class TaroText extends TaroNode {\n  public _value: string\n  public nodeType = NodeType.TEXT_NODE\n  public nodeName = '#text'\n\n  constructor (value) {\n    super()\n    this._value = value\n  }\n\n  public set textContent (text: string) {\n    MutationObserver.record({\n      target: this,\n      type: MutationRecordType.CHARACTER_DATA,\n      oldValue: this._value\n    })\n    this._value = text\n    this.enqueueUpdate({\n      path: `${this._path}.${Shortcuts.Text}`,\n      value: text\n    })\n  }\n\n  public get textContent (): string {\n    return this._value\n  }\n\n  public set nodeValue (text: string) {\n    this.textContent = text\n  }\n\n  public get nodeValue (): string {\n    return this._value\n  }\n\n  public set data (text: string) {\n    this.textContent = text\n  }\n\n  public get data (): string {\n    return this._value\n  }\n}\n","import { isArray } from '@tarojs/shared'\n\nconst findReg = /[!'()~]|%20|%00/g\nconst plusReg = /\\+/g\nconst replaceCharMap = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+',\n  '%00': '\\x00',\n}\n\nfunction replacer (match: string) {\n  return replaceCharMap[match]\n}\n\nfunction appendTo (dict: Record<string, string[]>, name: string, value: string) {\n  const res = isArray(value) ? value.join(',') : value\n  if (name in dict) dict[name].push(res)\n  else dict[name] = [res]\n}\n\nfunction addEach (value: string, key: string) {\n  appendTo(this, key, value)\n}\n\nfunction decode (str: string) {\n  return decodeURIComponent(str.replace(plusReg, ' '))\n}\n\nfunction encode (str: string) {\n  return encodeURIComponent(str).replace(findReg, replacer)\n}\n\nexport class URLSearchParams {\n  #dict = Object.create(null)\n\n  constructor (query) {\n    query ??= ''\n\n    const dict = this.#dict\n\n    if (typeof query === 'string') {\n      if (query.charAt(0) === '?') {\n        query = query.slice(1)\n      }\n      for (let pairs = query.split('&'), i = 0, length = pairs.length; i < length; i++) {\n        const value = pairs[i]\n        const index = value.indexOf('=')\n        if (index > -1) {\n          appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)))\n        } else if (value.length) {\n          appendTo(dict, decode(value), '')\n        }\n      }\n    } else {\n      if (isArray(query)) {\n        for (let i = 0, length = query.length; i < length; i++) {\n          const value = query[i]\n          appendTo(dict, value[0], value[1])\n        }\n      } else if (query.forEach) {\n        query.forEach(addEach, dict)\n      } else {\n        for (const key in query) {\n          appendTo(dict, key, query[key])\n        }\n      }\n    }\n  }\n\n  append (name: string, value: string) {\n    appendTo(this.#dict, name, value)\n  }\n\n  delete (name: string) {\n    delete this.#dict[name]\n  }\n\n  get (name: string) {\n    const dict = this.#dict\n    return name in dict ? dict[name][0] : null\n  }\n\n  getAll (name: string) {\n    const dict = this.#dict\n    return name in dict ? dict[name].slice(0) : []\n  }\n\n  has (name: string) {\n    return name in this.#dict\n  }\n\n  keys (){\n    return Object.keys(this.#dict)\n  }\n\n  set (name: string, value: string) {\n    this.#dict[name] = ['' + value]\n  }\n\n  forEach (callback, thisArg) {\n    const dict = this.#dict\n    Object.getOwnPropertyNames(dict).forEach(function (name) {\n      dict[name].forEach(function (value: string) {\n        callback.call(thisArg, value, name, this)\n      }, this)\n    }, this)\n  }\n\n  toJSON () {\n    return {}\n  }\n\n  toString () {\n    const dict = this.#dict\n    const query: any[] = []\n    for (const key in dict) {\n      const name = encode(key)\n      for (let i = 0, value = dict[key]; i < value.length; i++) {\n        query.push(name + '=' + encode(value[i]))\n      }\n    }\n    return query.join('&')\n  }\n}\n","import { isString, isUndefined } from '@tarojs/shared'\n\nimport { URLSearchParams } from './URLSearchParams'\n\nexport class URL {\n  static createObjectURL () {\n    throw new Error('Oops, not support URL.createObjectURL() in miniprogram.')\n  }\n\n  static revokeObjectURL () {\n    throw new Error('Oops, not support URL.revokeObjectURL() in miniprogram.')\n  }\n\n  /* private property */\n  #hash = ''\n  #hostname = ''\n  #pathname = ''\n  #port = ''\n  #protocol = ''\n  #search: URLSearchParams\n\n  constructor (url: string, base?: string) {\n    if (!isString(url)) url = String(url)\n\n    const parseResult = parseUrlBase(url, base)\n    const { hash, hostname, pathname, port, protocol, search } = parseResult\n\n    this.#hash = hash\n    this.#hostname = hostname\n    this.#pathname = pathname || '/'\n    this.#port = port\n    this.#protocol = protocol\n    this.#search = new URLSearchParams(search)\n  }\n\n  /* public property */\n  get protocol () {\n    return this.#protocol\n  }\n\n  set protocol (val: string) {\n    isString(val) && (this.#protocol = val.trim())\n  }\n\n  get host () {\n    return this.hostname + (this.port ? ':' + this.port : '')\n  }\n\n  set host (val: string) {\n    if (val && isString(val)) {\n      val = val.trim()\n      const { hostname, port } = parseUrl(`//${val}`)\n      this.hostname = hostname\n      this.port = port\n    }\n  }\n\n  get hostname () {\n    return this.#hostname\n  }\n\n  set hostname (val: string) {\n    val && isString(val) && (this.#hostname = val.trim())\n  }\n\n  get port () {\n    return this.#port\n  }\n\n  set port (val: string) {\n    isString(val) && (this.#port = val.trim())\n  }\n\n  get pathname () {\n    return this.#pathname\n  }\n\n  set pathname (val: string) {\n    if (isString(val)) {\n      val = val.trim()\n      const HEAD_REG = /^(\\/|\\.\\/|\\.\\.\\/)/\n      let temp = val\n      while (HEAD_REG.test(temp)) {\n        temp = temp.replace(HEAD_REG, '')\n      }\n      if (temp) this.#pathname = '/' + temp\n      else this.#pathname = '/'\n    }\n  }\n\n  get search () {\n    const val = this.#search.toString()\n    return (val.length === 0 || val.startsWith('?')) ? val : `?${val}`\n  }\n\n  set search (val: string) {\n    if (isString(val)) {\n      val = val.trim()\n      this.#search = new URLSearchParams(val)\n    }\n  }\n\n  get hash () {\n    return this.#hash\n  }\n\n  set hash (val: string) {\n    if (isString(val)) {\n      val = val.trim()\n      if (val) this.#hash = val.startsWith('#') ? val : `#${val}`\n      else this.#hash = ''\n    }\n  }\n\n  get href () {\n    return `${this.protocol}//${this.host}${this.pathname}${this.search}${this.hash}`\n  }\n\n  set href (val: string) {\n    if (val && isString(val)) {\n      val = val.trim()\n      const { protocol, hostname, port, hash, search, pathname } = parseUrl(val)\n      this.protocol = protocol\n      this.hostname = hostname\n      this.pathname = pathname\n      this.port = port\n      this.hash = hash\n      this.search = search\n    }\n  }\n\n  get origin () {\n    return `${this.protocol}//${this.host}`\n  }\n\n  set origin (val: string) {\n    if (val && isString(val)) {\n      val = val.trim()\n      const { protocol, hostname, port } = parseUrl(val)\n      this.protocol = protocol\n      this.hostname = hostname\n      this.port = port\n    }\n  }\n\n  get searchParams () {\n    return this.#search\n  }\n\n  // public method\n  toString () {\n    return this.href\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  // convenient for deconstructor\n  _toRaw () {\n    return {\n      protocol: this.protocol,\n      port: this.port,\n      host: this.host,\n      hostname: this.hostname,\n      pathname: this.pathname,\n      hash: this.hash,\n      search: this.search,\n      origin: this.origin,\n      href: this.href,\n    }\n  }\n}\n\nexport function parseUrl (url = '') {\n  const result = {\n    href: '',\n    origin: '',\n    protocol: '',\n    hostname: '',\n    host: '',\n    port: '',\n    pathname: '',\n    search: '',\n    hash: ''\n  }\n  if (!url || !isString(url)) return result\n\n  url = url.trim()\n  const PATTERN = /^(([^:/?#]+):)?\\/\\/(([^/?#]+):(.+)@)?([^/?#:]*)(:(\\d+))?([^?#]*)(\\?([^#]*))?(#(.*))?/\n  const matches = url.match(PATTERN)\n\n  if (!matches) return result\n\n  // TODO: username & password ?\n  result.protocol = matches[1] || 'https:'\n  result.hostname = matches[6] || 'taro.com'\n  result.port = matches[8] || ''\n  result.pathname = matches[9] || '/'\n  result.search = matches[10] || ''\n  result.hash = matches[12] || ''\n  result.href = url\n  result.origin = result.protocol + '//' + result.hostname\n  result.host = result.hostname + (result.port ? `:${result.port}` : '')\n\n  return result\n}\n\nexport function parseUrlBase (url: string, base?: string) {\n  const VALID_URL = /^(https?:)\\/\\//i\n\n  let fullUrl = ''\n  let parsedBase: ReturnType<typeof parseUrl> | null = null\n\n  if (!isUndefined(base)) {\n    base = String(base).trim()\n    if (!VALID_URL.test(base)) throw new TypeError(`Failed to construct 'URL': Invalid base URL`)\n    parsedBase = parseUrl(base)\n  }\n\n  url = String(url).trim()\n\n  if (VALID_URL.test(url)) {\n    fullUrl = url\n  } else if (parsedBase) {\n    if (url) {\n      if (url.startsWith('//')) {\n        fullUrl = parsedBase.protocol + url\n      } else {\n        fullUrl = parsedBase.origin + (url.startsWith('/') ? url : `/${url}`)\n      }\n    } else {\n      fullUrl = parsedBase.href\n    }\n  } else {\n    throw new TypeError(`Failed to construct 'URL': Invalid URL`)\n  }\n\n  return parseUrl(fullUrl)\n}\n","import { parseUrl } from '../bom/URL'\nimport { TaroElement } from './element'\n\nconst enum AnchorElementAttrs {\n  HREF = 'href',\n  PROTOCOL = 'protocol',\n  HOST = 'host',\n  SEARCH = 'search',\n  HASH = 'hash',\n  HOSTNAME = 'hostname',\n  PORT = 'port',\n  PATHNAME = 'pathname'\n}\n\nexport class AnchorElement extends TaroElement {\n  public get href () {\n    return this.props[AnchorElementAttrs.HREF] ?? ''\n  }\n\n  public set href (val: string) {\n    this.setAttribute(AnchorElementAttrs.HREF, val)\n  }\n\n  get protocol () {\n    return this.props[AnchorElementAttrs.PROTOCOL] ?? ''\n  }\n\n  get host () {\n    return this.props[AnchorElementAttrs.HOST] ?? ''\n  }\n\n  get search () {\n    return this.props[AnchorElementAttrs.SEARCH] ?? ''\n  }\n\n  get hash () {\n    return this.props[AnchorElementAttrs.HASH] ?? ''\n  }\n\n  get hostname () {\n    return this.props[AnchorElementAttrs.HOSTNAME] ?? ''\n  }\n\n  get port () {\n    return this.props[AnchorElementAttrs.PORT] ?? ''\n  }\n\n  get pathname () {\n    return this.props[AnchorElementAttrs.PATHNAME] ?? ''\n  }\n\n  public setAttribute (qualifiedName: string, value: any): void {\n    if (qualifiedName === AnchorElementAttrs.HREF) {\n      const willSetAttr = parseUrl(value)\n      for (const k in willSetAttr) {\n        super.setAttribute(k, willSetAttr[k])\n      }\n    } else {\n      super.setAttribute(qualifiedName, value)\n    }\n  }\n\n}\n","import { TaroElement } from './element'\n\nexport class CustomWrapperElement extends TaroElement {\n  public ctx: any\n}\n","import { controlledComponent, isUndefined } from '@tarojs/shared'\n\nimport {\n  A,\n  COMMENT,\n  CUSTOM_WRAPPER,\n  DOCUMENT_ELEMENT_NAME,\n  ROOT_STR\n} from '../constants'\nimport { TaroElement } from '../dom/element'\nimport { createEvent } from '../dom/event'\nimport { eventSource } from '../dom/event-source'\nimport { FormElement } from '../dom/form'\nimport { NodeType } from '../dom/node_types'\nimport { TaroRootElement } from '../dom/root'\nimport { TaroText } from '../dom/text'\nimport env from '../env'\nimport { AnchorElement } from './anchor-element'\nimport { CustomWrapperElement } from './custom-wrapper'\n\nexport class TaroDocument extends TaroElement {\n  public documentElement: TaroElement\n  public head: TaroElement\n  public body: TaroElement\n  public createEvent = createEvent\n\n  public constructor () {\n    super()\n    this.nodeType = NodeType.DOCUMENT_NODE\n    this.nodeName = DOCUMENT_ELEMENT_NAME\n  }\n\n  public createElement (type: string): TaroElement | TaroRootElement | FormElement {\n    const nodeName = type.toLowerCase()\n\n    let element: TaroElement\n    switch (true) {\n      case nodeName === ROOT_STR:\n        element = new TaroRootElement()\n        return element\n      case controlledComponent.has(nodeName):\n        element = new FormElement()\n        break\n      case nodeName === A:\n        element = new AnchorElement()\n        break\n      case nodeName === CUSTOM_WRAPPER:\n        element = new CustomWrapperElement()\n        break\n      default:\n        element = new TaroElement()\n        break\n    }\n\n    element.nodeName = nodeName\n    element.tagName = type.toUpperCase()\n\n    return element\n  }\n\n  // an ugly fake createElementNS to deal with @vue/runtime-dom's\n  // support mounting app to svg container since vue@3.0.8\n  public createElementNS (_svgNS: string, type: string): TaroElement | TaroRootElement | FormElement {\n    return this.createElement(type)\n  }\n\n  public createTextNode (text: string): TaroText {\n    return new TaroText(text)\n  }\n\n  public getElementById<T extends TaroElement> (id: string | undefined | null): T | null {\n    const el = eventSource.get(id)\n    return isUndefined(el) ? null : el as T\n  }\n\n  public querySelector<T extends TaroElement> (query: string): T | null {\n    // 为了 Vue3 的乞丐版实现\n    if (/^#/.test(query)) {\n      return this.getElementById<T>(query.slice(1))\n    }\n    return null\n  }\n\n  public querySelectorAll () {\n    // fake hack\n    return []\n  }\n\n  // @TODO: @PERF: 在 hydrate 移除掉空的 node\n  public createComment (): TaroText {\n    const textnode = new TaroText('')\n    textnode.nodeName = COMMENT\n    return textnode\n  }\n\n  get defaultView () {\n    return env.window\n  }\n}\n","import { isWebPlatform } from '@tarojs/shared'\n\nimport {\n  APP,\n  BODY,\n  CONTAINER,\n  HEAD,\n  HTML\n} from '../constants'\nimport { TaroDocument } from '../dom/document'\nimport env from '../env'\n\nlet document\n\nif (process.env.TARO_ENV && !isWebPlatform()) {\n  /* eslint-disable no-inner-declarations */\n  function createDocument (): TaroDocument {\n    /**\n       * <document>\n       *   <html>\n       *     <head></head>\n       *     <body>\n       *       <container>\n       *         <app id=\"app\" />\n       *       </container>\n       *     </body>\n       *   </html>\n       * </document>\n       */\n    const doc = new TaroDocument()\n    const documentCreateElement = doc.createElement.bind(doc)\n    const html = documentCreateElement(HTML)\n    const head = documentCreateElement(HEAD)\n    const body = documentCreateElement(BODY)\n    const app = documentCreateElement(APP)\n    app.id = APP\n    const container = documentCreateElement(CONTAINER) // 多包一层主要为了兼容 vue\n\n    doc.appendChild(html)\n    html.appendChild(head)\n    html.appendChild(body)\n    body.appendChild(container)\n    container.appendChild(app)\n\n    doc.documentElement = html\n    doc.head = head\n    doc.body = body\n\n    return doc\n  }\n  document = env.document = createDocument()\n} else {\n  document = env.document\n}\n\nexport {\n  document\n}\n","import type { TaroElement } from '../dom/element'\nimport type { Style } from '../dom/style'\n\nexport function getComputedStyle (element: TaroElement): Style {\n  return element.style\n}\n","import { Events, hooks } from '@tarojs/shared'\n\nconst eventCenter = hooks.call('getEventCenter', Events)!\n\nexport type EventsType = typeof Events\nexport { eventCenter, Events }\n","/**\n * 一个小型缓存池，用于在切换页面时，存储一些上下文信息\n */\n\nexport class RuntimeCache<T> {\n  name: string\n  cache = new Map<string, T>()\n\n  constructor (name: string) {\n    this.name = name\n  }\n\n  has (identifier: string) {\n    return this.cache.has(identifier)\n  }\n\n  set (identifier: string, ctx: T) {\n    if (identifier && ctx) {\n      this.cache.set(identifier, ctx)\n    }\n  }\n\n  get (identifier: string): T | undefined {\n    if (this.has(identifier)) return this.cache.get(identifier)\n  }\n\n  delete (identifier: string) {\n    this.cache.delete(identifier)\n  }\n}\n","import { isNumber,isString } from '@tarojs/shared'\n\nimport { CONTEXT_ACTIONS } from '../constants'\nimport { Events } from '../emitter/emitter'\nimport { RuntimeCache } from '../utils/cache'\n\nimport type * as LocationType from './location'\n\nexport interface HistoryState {\n  state: Record<string, any> | null\n  title: string\n  url: string\n}\n\ntype Options = {\n  window: any\n}\ntype HistoryContext = {\n  location: LocationType.Location\n  stack: HistoryState[]\n  cur: number\n}\nconst cache = new RuntimeCache<HistoryContext>('history')\n\nexport class History extends Events {\n  /* private property */\n  #location: LocationType.Location\n  #stack: HistoryState[] = []\n  #cur = 0\n\n  #window: any\n\n  constructor (location: LocationType.Location, options: Options) {\n    super()\n\n    this.#window = options.window\n    this.#location = location\n\n    this.#location.on('__record_history__', (href: string) => {\n      this.#cur++\n      this.#stack = this.#stack.slice(0, this.#cur)\n      this.#stack.push({\n        state: null,\n        title: '',\n        url: href\n      })\n    }, null)\n\n    this.#location.on('__reset_history__', (href: string) => {\n      this.#reset(href)\n    }, null)\n\n    // 切换上下文行为\n\n    this.on(CONTEXT_ACTIONS.INIT, () => {\n      this.#reset()\n    }, null)\n\n    this.on(CONTEXT_ACTIONS.RESTORE, (pageId: string) => {\n      cache.set(pageId, {\n        location: this.#location,\n        stack: this.#stack.slice(),\n        cur: this.#cur\n      })\n    }, null)\n\n    this.on(CONTEXT_ACTIONS.RECOVER, (pageId: string) => {\n      if (cache.has(pageId)) {\n        const ctx = cache.get(pageId)!\n        this.#location = ctx.location\n        this.#stack = ctx.stack\n        this.#cur = ctx.cur\n      }\n    }, null)\n\n    this.on(CONTEXT_ACTIONS.DESTORY, (pageId: string) => {\n      cache.delete(pageId)\n    }, null)\n\n    this.#reset()\n  }\n\n  #reset (href = '') {\n    this.#stack = [\n      {\n        state: null,\n        title: '',\n        url: href || this.#location.href\n      }\n    ]\n    this.#cur = 0\n  }\n\n  /* public property */\n  get length () {\n    return this.#stack.length\n  }\n\n  get state () {\n    return this.#stack[this.#cur]\n  }\n\n  /* public method */\n  go (delta: number) {\n    if (!isNumber(delta) || isNaN(delta)) return\n\n    let targetIdx = this.#cur + delta\n    targetIdx = Math.min(Math.max(targetIdx, 0), this.length - 1)\n\n    this.#cur = targetIdx\n\n    this.#location.trigger('__set_href_without_history__', this.#stack[this.#cur].url)\n    this.#window.trigger('popstate', this.#stack[this.#cur])\n  }\n\n  back () {\n    this.go(-1)\n  }\n\n  forward () {\n    this.go(1)\n  }\n\n  pushState (state: any, title: string, url: string) {\n    if (!url || !isString(url)) return\n    this.#stack = this.#stack.slice(0, this.#cur + 1)\n    this.#stack.push({\n      state,\n      title,\n      url\n    })\n    this.#cur = this.length - 1\n\n    this.#location.trigger('__set_href_without_history__', url)\n  }\n\n  replaceState (state: any, title: string, url: string) {\n    if (!url || !isString(url)) return\n    this.#stack[this.#cur] = {\n      state,\n      title,\n      url\n    }\n\n    this.#location.trigger('__set_href_without_history__', url)\n  }\n\n  // For debug\n  get cache () {\n    return cache\n  }\n}\n","import { AppInstance, PageInstance } from './dsl/instance'\n\nexport interface Router {\n  params: Record<string, unknown>\n  path: string\n  $taroPath: string\n  onReady: string\n  onHide: string\n  onShow: string\n  exitState?: any\n}\n\ninterface Current {\n  app: AppInstance | null\n  router: Router | null\n  page: PageInstance | null\n  preloadData?: any\n}\n\nexport const Current: Current = {\n  app: null,\n  router: null,\n  page: null\n}\n\nexport const getCurrentInstance = () => Current\n","import { isNumber, isString, warn } from '@tarojs/shared'\n\nimport { CONTEXT_ACTIONS } from '../constants'\nimport { getCurrentInstance } from '../current'\nimport { Events } from '../emitter/emitter'\nimport { RuntimeCache } from '../utils/cache'\nimport { URL } from './URL'\n\ntype PreValue = ReturnType<typeof URL.prototype._toRaw>\n\ntype Options = {\n  window: any\n}\ntype LocationContext = {\n  lastHref: string\n}\n\nconst INIT_URL = 'https://taro.com'\nconst cache = new RuntimeCache<LocationContext>('location')\n\nexport class Location extends Events {\n  /* private property */\n  #url = new URL(INIT_URL)\n  #noCheckUrl = false\n  #window: any\n\n  constructor (options: Options) {\n    super()\n\n    this.#window = options.window\n\n    this.#reset()\n\n    this.on(\n      '__set_href_without_history__',\n      (href: string) => {\n        this.#noCheckUrl = true\n\n        const lastHash = this.#url.hash\n        this.#url.href = generateFullUrl(href)\n\n        if (lastHash !== this.#url.hash) {\n          this.#window.trigger('hashchange')\n        }\n\n        this.#noCheckUrl = false\n      },\n      null\n    )\n\n    // 切换上下文行为\n    this.on(\n      CONTEXT_ACTIONS.INIT,\n      () => {\n        this.#reset()\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RESTORE,\n      (pageId: string) => {\n        cache.set(pageId, {\n          lastHref: this.href,\n        })\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.RECOVER,\n      (pageId: string) => {\n        // 数据恢复时，不需要执行跳转\n        if (cache.has(pageId)) {\n          const ctx = cache.get(pageId)!\n          this.#noCheckUrl = true\n          this.#url.href = ctx.lastHref\n          this.#noCheckUrl = false\n        }\n      },\n      null\n    )\n\n    this.on(\n      CONTEXT_ACTIONS.DESTORY,\n      (pageId: string) => {\n        cache.delete(pageId)\n      },\n      null\n    )\n  }\n\n  /* private method */\n  #reset () {\n    const Current = getCurrentInstance()\n    const router = Current.router\n    if (router) {\n      const { path, params } = router\n      const searchArr = Object.keys(params).map((key) => {\n        return `${key}=${params[key]}`\n      })\n      const searchStr = searchArr.length > 0 ? '?' + searchArr.join('&') : ''\n      const url = `${INIT_URL}${path.startsWith('/') ? path : '/' + path}${searchStr}`\n\n      this.#url = new URL(url)\n\n      this.trigger('__reset_history__', this.href)\n    }\n  }\n\n  #getPreValue (): PreValue {\n    return this.#url._toRaw()\n  }\n\n  #rollBack (href: string) {\n    this.#url.href = href\n  }\n\n  #recordHistory () {\n    this.trigger('__record_history__', this.href)\n  }\n\n  /**\n   * 校验url的变化，是否需要更新history\n   */\n  #checkUrlChange (preValue: PreValue): boolean {\n    if (this.#noCheckUrl) {\n      return false\n    }\n\n    const { protocol, hostname, port, pathname, search, hash } = this.#url._toRaw()\n\n    // 跨域三要素不允许修改\n    if (protocol !== preValue.protocol || hostname !== preValue.hostname || port !== preValue.port) {\n      this.#rollBack(preValue.href)\n      return false\n    }\n\n    // pathname\n    if (pathname !== preValue.pathname) {\n      return true\n    }\n\n    // search\n    if (search !== preValue.search) {\n      return true\n    }\n\n    // hashchange\n    if (hash !== preValue.hash) {\n      this.#window.trigger('hashchange')\n      return true\n    }\n\n    this.#rollBack(preValue.href)\n    return false\n  }\n\n  /* public property */\n  get protocol () {\n    return this.#url.protocol\n  }\n\n  set protocol (val: string) {\n    const REG = /^(http|https):$/i\n    if (!val || !isString(val) || !REG.test(val.trim())) return\n\n    val = val.trim()\n    const preValue = this.#getPreValue()\n    this.#url.protocol = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get host () {\n    return this.#url.host\n  }\n\n  set host (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.host = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hostname () {\n    return this.#url.hostname\n  }\n\n  set hostname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.hostname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get port () {\n    return this.#url.port\n  }\n\n  set port (val: string) {\n    const xVal = Number((val = val.trim()))\n    if (!isNumber(xVal) || xVal <= 0) return\n\n    const preValue = this.#getPreValue()\n    this.#url.port = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get pathname () {\n    return this.#url.pathname\n  }\n\n  set pathname (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n\n    const preValue = this.#getPreValue()\n    this.#url.pathname = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get search () {\n    return this.#url.search\n  }\n\n  set search (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('?') ? val : `?${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.search = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get hash () {\n    return this.#url.hash\n  }\n\n  // 小程序的navigateTo存在截断hash字符串的问题\n  set hash (val: string) {\n    if (!val || !isString(val)) return\n    val = val.trim()\n    val = val.startsWith('#') ? val : `#${val}`\n\n    const preValue = this.#getPreValue()\n    this.#url.hash = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get href () {\n    return this.#url.href\n  }\n\n  set href (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.href = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  get origin () {\n    return this.#url.origin\n  }\n\n  set origin (val: string) {\n    const REG = /^(http:|https:)?\\/\\/.+/\n    if (!val || !isString(val) || !REG.test((val = val.trim()))) return\n\n    const preValue = this.#getPreValue()\n    this.#url.origin = val\n\n    if (this.#checkUrlChange(preValue)) this.#recordHistory()\n  }\n\n  /* public method */\n  assign () {\n    warn(true, '小程序环境中调用location.assign()无效.')\n  }\n\n  reload () {\n    warn(true, '小程序环境中调用location.reload()无效.')\n  }\n\n  replace (url: string) {\n    this.trigger('__set_href_without_history__', url)\n  }\n\n  toString () {\n    return this.href\n  }\n\n  // For debug\n  get cache () {\n    return cache\n  }\n}\n\nfunction generateFullUrl (val = '') {\n  const origin = INIT_URL\n  if (/^[/?#]/.test(val)) {\n    return origin + val\n  }\n  return val\n}\n","import { isWebPlatform } from '@tarojs/shared'\n\nimport env from '../env'\n\nconst machine = 'Macintosh'\nconst arch = 'Intel Mac OS X 10_14_5'\nconst engine = 'AppleWebKit/534.36 (KHTML, like Gecko) NodeJS/v4.1.0 Chrome/76.0.3809.132 Safari/534.36'\n\nconst msg = '(' + machine + '; ' + arch + ') ' + engine\n\nexport const nav = isWebPlatform() ? env.window.navigator : {\n  appCodeName: 'Mozilla',\n  appName: 'Netscape',\n  appVersion: '5.0 ' + msg,\n  cookieEnabled: true,\n  mimeTypes: [],\n  onLine: true,\n  platform: 'MacIntel',\n  plugins: [],\n  product: 'Taro',\n  productSub: '20030107',\n  userAgent: 'Mozilla/5.0 ' + msg,\n  vendor: 'Joyent',\n  vendorSub: ''\n}\n","// https://github.com/myrne/performance-now\nexport let now: () => number\n\n(function () {\n  let loadTime\n  if ((typeof performance !== 'undefined' && performance !== null) && performance.now) {\n    now = () => performance.now()\n  } else if (Date.now) {\n    loadTime = Date.now()\n    now = () => Date.now() - loadTime\n  } else {\n    loadTime = new Date().getTime()\n    now = () => new Date().getTime() - loadTime\n  }\n})()\n\nlet lastTime = 0\n\n// https://gist.github.com/paulirish/1579671\n// https://gist.github.com/jalbam/5fe05443270fa6d8136238ec72accbc0\nconst _raf = typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame !== null ? requestAnimationFrame : function (callback) {\n  const _now = now()\n  const nextTime = Math.max(lastTime + 16, _now) // First time will execute it immediately but barely noticeable and performance is gained.\n  return setTimeout(function () { callback(lastTime = nextTime) }, nextTime - _now)\n}\n\nconst _caf = typeof cancelAnimationFrame !== 'undefined' && cancelAnimationFrame !== null\n  ? cancelAnimationFrame\n  : function (seed) {\n    // fix https://github.com/NervJS/taro/issues/7749\n    clearTimeout(seed)\n  }\n\nexport {\n  _caf as caf,\n  _raf as raf\n}\n","import { isString, isWebPlatform } from '@tarojs/shared'\n\nimport { CONTEXT_ACTIONS } from '../constants'\nimport { Events } from '../emitter/emitter'\nimport env from '../env'\nimport { getComputedStyle } from './getComputedStyle'\nimport { History } from './history'\nimport { Location } from './location'\nimport { nav as navigator } from './navigator'\nimport { caf, raf } from './raf'\n\nlet window\n\nif (process.env.TARO_ENV && !isWebPlatform()) {\n  class Window extends Events {\n    navigator = navigator\n    requestAnimationFrame = raf\n    cancelAnimationFrame = caf\n    getComputedStyle = getComputedStyle\n    Date: DateConstructor\n\n    location: Location\n    history: History\n\n    constructor () {\n      super()\n\n      const globalProperties = [\n        ...Object.getOwnPropertyNames(global || {}),\n        ...Object.getOwnPropertySymbols(global || {})\n      ]\n\n      globalProperties.forEach(property => {\n        if (property === 'atob' || property === 'document') return\n        if (!Object.prototype.hasOwnProperty.call(this, property)) {\n          this[property] = global[property]\n        }\n      })\n\n      this.Date ||= Date\n\n      // 应用启动时，提供给需要读取历史信息的库使用\n      this.location = new Location({ window: this })\n      this.history = new History(this.location, { window: this })\n\n      this.initEvent()\n    }\n\n    initEvent () {\n      const _location = this.location\n      const _history = this.history\n\n      this.on(CONTEXT_ACTIONS.INIT, (pageId: string) => {\n        // 页面onload，为该页面建立新的上下文信息\n        _location.trigger(CONTEXT_ACTIONS.INIT, pageId)\n      }, null)\n\n      this.on(CONTEXT_ACTIONS.RECOVER, (pageId: string) => {\n        // 页面onshow，恢复当前页面的上下文信息\n        _location.trigger(CONTEXT_ACTIONS.RECOVER, pageId)\n        _history.trigger(CONTEXT_ACTIONS.RECOVER, pageId)\n      }, null)\n\n      this.on(CONTEXT_ACTIONS.RESTORE, (pageId: string) => {\n        // 页面onhide，缓存当前页面的上下文信息\n        _location.trigger(CONTEXT_ACTIONS.RESTORE, pageId)\n        _history.trigger(CONTEXT_ACTIONS.RESTORE, pageId)\n      }, null)\n\n      this.on(CONTEXT_ACTIONS.DESTORY, (pageId: string) => {\n        // 页面onunload，清除当前页面的上下文信息\n        _location.trigger(CONTEXT_ACTIONS.DESTORY, pageId)\n        _history.trigger(CONTEXT_ACTIONS.DESTORY, pageId)\n      }, null)\n    }\n\n    get document () {\n      return env.document\n    }\n\n    addEventListener (event: string, callback: (arg: any) => void) {\n      if (!isString(event)) return\n      this.on(event, callback, null)\n    }\n\n    removeEventListener (event: string, callback: (arg: any) => void) {\n      if (!isString(event)) return\n      this.off(event, callback, null)\n    }\n\n    setTimeout (...args: Parameters<typeof setTimeout>) {\n      return setTimeout(...args)\n    }\n\n    clearTimeout (...args: Parameters<typeof clearTimeout>) {\n      return clearTimeout(...args)\n    }\n  }\n\n  window = env.window = new Window()\n} else {\n  window = env.window\n}\n\nexport const location = window.location\nexport const history = window.history\n\nexport {\n  window\n}\n","import { TaroElement } from './element'\n\n// for Vue3\nexport class SVGElement extends TaroElement {}\n","/* eslint-disable dot-notation */\nimport {\n  EMPTY_OBJ, ensure, getComponentsAlias, hooks, internalComponents,\n  isArray, isFunction, isString, isUndefined, isWebPlatform, Shortcuts\n} from '@tarojs/shared'\n\nimport { raf } from '../bom/raf'\nimport { window } from '../bom/window'\nimport { BEHAVIORS, CONTEXT_ACTIONS, CUSTOM_WRAPPER, EXTERNAL_CLASSES, ON_HIDE, ON_LOAD, ON_READY, ON_SHOW, OPTIONS, PAGE_INIT, VIEW } from '../constants'\nimport { Current } from '../current'\nimport { eventHandler } from '../dom/event'\nimport { eventCenter } from '../emitter/emitter'\nimport env from '../env'\nimport { perf } from '../perf'\nimport { customWrapperCache, incrementId } from '../utils'\n\nimport type { PageConfig } from '@tarojs/taro'\nimport type { CustomWrapperElement } from '../dom/custom-wrapper'\nimport type { TaroRootElement } from '../dom/root'\nimport type { Func, MpInstance } from '../interface'\nimport type { Instance, PageInstance, PageProps } from './instance'\n\nconst instances = new Map<string, Instance>()\nconst pageId = incrementId()\nconst isWeb = isWebPlatform()\n\nexport function injectPageInstance (inst: Instance<PageProps>, id: string) {\n  hooks.call('mergePageInstance', instances.get(id), inst)\n  instances.set(id, inst)\n}\n\nexport function getPageInstance (id: string): Instance | undefined {\n  return instances.get(id)\n}\n\nexport function removePageInstance (id: string) {\n  instances.delete(id)\n}\n\nexport function addLeadingSlash (path?: string): string {\n  if (path == null) {\n    return ''\n  }\n  return path.charAt(0) === '/' ? path : '/' + path\n}\n\nexport function safeExecute (path: string, lifecycle: string, ...args: unknown[]) {\n  const instance = instances.get(path)\n\n  if (instance == null) {\n    return\n  }\n\n  const func = hooks.call('getLifecycle', instance, lifecycle as keyof PageInstance)\n\n  if (isArray(func)) {\n    const res = func.map(fn => fn.apply(instance, args))\n    return res[0]\n  }\n\n  if (!isFunction(func)) {\n    return\n  }\n\n  return func.apply(instance, args)\n}\n\nexport function stringify (obj?: Record<string, unknown>) {\n  if (obj == null) {\n    return ''\n  }\n  const path = Object.keys(obj).map((key) => {\n    return key + '=' + obj[key]\n  }).join('&')\n  return path === '' ? path : '?' + path\n}\n\nexport function getPath (id: string, options?: Record<string, unknown>): string {\n  const idx = id.indexOf('?')\n  if (isWeb) {\n    return `${idx > -1 ? id.substring(0, idx) : id}${stringify(options?.stamp ? { stamp: options.stamp } : {})}`\n  } else {\n    return `${idx > -1 ? id.substring(0, idx) : id}${stringify(options)}`\n  }\n}\n\nexport function getOnReadyEventKey (path: string) {\n  return path + '.' + ON_READY\n}\n\nexport function getOnShowEventKey (path: string) {\n  return path + '.' + ON_SHOW\n}\n\nexport function getOnHideEventKey (path: string) {\n  return path + '.' + ON_HIDE\n}\n\nexport function createPageConfig (component: any, pageName?: string, data?: Record<string, unknown>, pageConfig?: PageConfig) {\n  // 小程序 Page 构造器是一个傲娇小公主，不能把复杂的对象挂载到参数上\n  const id = pageName ?? `taro_page_${pageId()}`\n  const [\n    ONLOAD,\n    ONUNLOAD,\n    ONREADY,\n    ONSHOW,\n    ONHIDE,\n    LIFECYCLES,\n    SIDE_EFFECT_LIFECYCLES\n  ] = hooks.call('getMiniLifecycleImpl')!.page\n  let pageElement: TaroRootElement | null = null\n  let unmounting = false\n  let prepareMountList: (() => void)[] = []\n\n  function setCurrentRouter (page: MpInstance) {\n    const router = isWeb ? page.$taroPath : page.route || page.__route__ || page.$taroPath\n    Current.router = {\n      params: page.$taroParams!,\n      path: addLeadingSlash(router),\n      $taroPath: page.$taroPath,\n      onReady: getOnReadyEventKey(id),\n      onShow: getOnShowEventKey(id),\n      onHide: getOnHideEventKey(id)\n    }\n    if (!isUndefined(page.exitState)) {\n      Current.router.exitState = page.exitState\n    }\n  }\n  let loadResolver: (...args: unknown[]) => void\n  let hasLoaded: Promise<void>\n  const config: PageInstance = {\n    [ONLOAD] (this: MpInstance, options: Readonly<Record<string, unknown>> = {}, cb?: Func) {\n      hasLoaded = new Promise(resolve => { loadResolver = resolve })\n\n      perf.start(PAGE_INIT)\n\n      Current.page = this as any\n      this.config = pageConfig || {}\n\n      // this.$taroPath 是页面唯一标识\n      const uniqueOptions = Object.assign({}, options, { $taroTimestamp: Date.now() })\n      const $taroPath = this.$taroPath = getPath(id, uniqueOptions)\n      if (isWeb) {\n        config.path = $taroPath\n      }\n      // this.$taroParams 作为暴露给开发者的页面参数对象，可以被随意修改\n      if (this.$taroParams == null) {\n        this.$taroParams = uniqueOptions\n      }\n\n      setCurrentRouter(this)\n\n      // 初始化当前页面的上下文信息\n      if (!isWeb) {\n        window.trigger(CONTEXT_ACTIONS.INIT, $taroPath)\n      }\n\n      const mount = () => {\n        Current.app!.mount!(component, $taroPath, () => {\n          pageElement = env.document.getElementById<TaroRootElement>($taroPath)\n\n          ensure(pageElement !== null, '没有找到页面实例。')\n          safeExecute($taroPath, ON_LOAD, this.$taroParams)\n          loadResolver()\n          if (!isWeb) {\n            pageElement.ctx = this\n            pageElement.performUpdate(true, cb)\n          } else {\n            isFunction(cb) && cb()\n          }\n        })\n      }\n      if (unmounting) {\n        prepareMountList.push(mount)\n      } else {\n        mount()\n      }\n    },\n    [ONUNLOAD] () {\n      const $taroPath = this.$taroPath\n      // 销毁当前页面的上下文信息\n      if (!isWeb) {\n        window.trigger(CONTEXT_ACTIONS.DESTORY, $taroPath)\n      }\n      // 触发onUnload生命周期\n      safeExecute($taroPath, ONUNLOAD)\n      unmounting = true\n      Current.app!.unmount!($taroPath, () => {\n        unmounting = false\n        instances.delete($taroPath)\n        if (pageElement) {\n          pageElement.ctx = null\n          pageElement = null\n        }\n        if (prepareMountList.length) {\n          prepareMountList.forEach(fn => fn())\n          prepareMountList = []\n        }\n      })\n    },\n    [ONREADY] () {\n      hasLoaded.then(() => {\n        // 触发生命周期\n        safeExecute(this.$taroPath, ON_READY)\n        // 通过事件触发子组件的生命周期\n        raf(() => eventCenter.trigger(getOnReadyEventKey(id)))\n        this.onReady.called = true\n      })\n    },\n    [ONSHOW] (options = {}) {\n      hasLoaded.then(() => {\n        // 设置 Current 的 page 和 router\n        Current.page = this as any\n        setCurrentRouter(this)\n        // 恢复上下文信息\n        if (!isWeb) {\n          window.trigger(CONTEXT_ACTIONS.RECOVER, this.$taroPath)\n        }\n        // 触发生命周期\n        safeExecute(this.$taroPath, ON_SHOW, options)\n        // 通过事件触发子组件的生命周期\n        raf(() => eventCenter.trigger(getOnShowEventKey(id)))\n      })\n    },\n    [ONHIDE] () {\n      // 缓存当前页面上下文信息\n      if (!isWeb) {\n        window.trigger(CONTEXT_ACTIONS.RESTORE, this.$taroPath)\n      }\n      // 设置 Current 的 page 和 router\n      if (Current.page === this) {\n        Current.page = null\n        Current.router = null\n      }\n      // 触发生命周期\n      safeExecute(this.$taroPath, ON_HIDE)\n      // 通过事件触发子组件的生命周期\n      eventCenter.trigger(getOnHideEventKey(id))\n    }\n  }\n\n  LIFECYCLES.forEach((lifecycle) => {\n    config[lifecycle] = function () {\n      return safeExecute(this.$taroPath, lifecycle, ...arguments)\n    }\n  })\n\n  // onShareAppMessage 和 onShareTimeline 一样，会影响小程序右上方按钮的选项，因此不能默认注册。\n  SIDE_EFFECT_LIFECYCLES.forEach(lifecycle => {\n    if (component[lifecycle] ||\n      component.prototype?.[lifecycle] ||\n      component[lifecycle.replace(/^on/, 'enable')]\n    ) {\n      config[lifecycle] = function (...args) {\n        const target = args[0]?.target\n        if (target?.id) {\n          const id = target.id\n          const element = env.document.getElementById(id)\n          if (element) {\n            target.dataset = element.dataset\n          }\n        }\n        return safeExecute(this.$taroPath, lifecycle, ...args)\n      }\n    }\n  })\n\n  config.eh = eventHandler\n\n  if (!isUndefined(data)) {\n    config.data = data\n  }\n\n  hooks.call('modifyPageObject', config)\n\n  return config\n}\n\nexport function createComponentConfig (component: React.ComponentClass, componentName?: string, data?: Record<string, unknown>) {\n  const id = componentName ?? `taro_component_${pageId()}`\n  let componentElement: TaroRootElement | null = null\n  const [ ATTACHED, DETACHED ] = hooks.call('getMiniLifecycleImpl')!.component\n\n  const config: any = {\n    [ATTACHED] () {\n      perf.start(PAGE_INIT)\n      const path = getPath(id, { id: this.getPageId?.() || pageId() })\n      Current.app!.mount!(component, path, () => {\n        componentElement = env.document.getElementById<TaroRootElement>(path)\n        ensure(componentElement !== null, '没有找到组件实例。')\n        this.$taroInstances = instances.get(path)\n        safeExecute(path, ON_LOAD)\n        if (!isWeb) {\n          componentElement.ctx = this\n          componentElement.performUpdate(true)\n        }\n      })\n    },\n    [DETACHED] () {\n      const path = getPath(id, { id: this.getPageId() })\n      Current.app!.unmount!(path, () => {\n        instances.delete(path)\n        if (componentElement) {\n          componentElement.ctx = null\n        }\n      })\n    },\n    methods: {\n      eh: eventHandler\n    }\n  }\n\n  if (!isUndefined(data)) {\n    config.data = data\n  }\n\n  [OPTIONS, EXTERNAL_CLASSES, BEHAVIORS].forEach(key => {\n    config[key] = component[key] ?? EMPTY_OBJ\n  })\n\n  return config\n}\n\nexport function createRecursiveComponentConfig (componentName?: string) {\n  const isCustomWrapper = componentName === CUSTOM_WRAPPER\n  const [ ATTACHED, DETACHED ] = hooks.call('getMiniLifecycleImpl')!.component\n\n  const lifeCycles = isCustomWrapper\n    ? {\n      [ATTACHED] () {\n        const componentId = this.data.i?.sid || this.props.i?.sid\n        if (isString(componentId)) {\n          customWrapperCache.set(componentId, this)\n          const el = env.document.getElementById<CustomWrapperElement>(componentId)\n          if (el) {\n            el.ctx = this\n          }\n        }\n      },\n      [DETACHED] () {\n        const componentId = this.data.i?.sid || this.props.i?.sid\n        if (isString(componentId)) {\n          customWrapperCache.delete(componentId)\n          const el = env.document.getElementById<CustomWrapperElement>(componentId)\n          if (el) {\n            el.ctx = null\n          }\n        }\n      }\n    }\n    : EMPTY_OBJ\n\n  return {\n    properties: {\n      i: {\n        type: Object,\n        value: {\n          [Shortcuts.NodeName]: getComponentsAlias(internalComponents)[VIEW]._num\n        }\n      },\n      l: {\n        type: String,\n        value: ''\n      }\n    },\n    options: {\n      addGlobalClass: true,\n      virtualHost: !isCustomWrapper\n    },\n    methods: {\n      eh: eventHandler\n    },\n    ...lifeCycles\n  }\n}\n","import { isWebPlatform } from '@tarojs/shared'\n\nimport { Current } from './current'\nimport { TaroRootElement } from './dom/root'\nimport env from './env'\n\nimport type { Func } from './interface'\n\nexport const nextTick = (cb: Func, ctx?: Record<string, any>) => {\n  const router = Current.router\n  const timerFunc = () => {\n    setTimeout(function () {\n      ctx ? cb.call(ctx) : cb()\n    }, 1)\n  }\n\n  if (router !== null) {\n    let pageElement: TaroRootElement | null = null\n    const path = router.$taroPath\n    pageElement = env.document.getElementById<TaroRootElement>(path)\n    if (pageElement?.pendingUpdate) {\n      if (isWebPlatform()) {\n        // eslint-disable-next-line dot-notation\n        pageElement.firstChild?.['componentOnReady']?.().then(() => {\n          timerFunc()\n        }) ?? timerFunc()\n      } else {\n        pageElement.enqueueUpdateCallback(cb, ctx)\n      }\n    } else {\n      timerFunc()\n    }\n  } else {\n    timerFunc()\n  }\n}\n","export enum PLATFORM_TYPE {\n  MINI = 'mini',\n  WEB = 'web',\n  RN = 'rn',\n  HARMONY = 'harmony',\n  QUICK = 'quickapp'\n}\n\nexport const PLATFORM_CONFIG_MAP = {\n  h5: {\n    type: PLATFORM_TYPE.WEB\n  },\n  harmony: {\n    type: PLATFORM_TYPE.HARMONY\n  },\n  mini: {\n    type: PLATFORM_TYPE.MINI\n  },\n  rn: {\n    type: PLATFORM_TYPE.RN\n  },\n  quickapp: {\n    type: PLATFORM_TYPE.QUICK\n  }\n}\n","type Callback1<T1> = (arg1: T1) => any;\ntype Callback2<T1, T2> = (arg1: T1, arg2: T2) => any;\ntype Callback3<T1, T2, T3> = (arg1: T1, arg2: T2, arg3: T3) => any;\ntype Callback4<T1, T2, T3, T4> = (arg1: T1, arg2: T2, arg3: T3, arg4: T4) => any;\ntype Callback5<T1, T2, T3, T4, T5> = (arg1: T1, arg2: T2, arg3: T3,\n  arg4: T4, arg5: T5) => any;\ntype Callback6Rest<T1, T2, T3, T4, T5, T6> = (arg1: T1, arg2: T2, arg3: T3,\n  arg4: T4, arg5: T5, arg6: T6,\n  ...rest: any[]) => any;\n\nexport class Events {\n  protected callbacks?: Record<string, unknown>\n  static eventSplitter = ',' // Note: Harmony ACE API 8 开发板不支持使用正则 split 字符串 /\\s+/\n\n  constructor (opts?) {\n    this.callbacks = opts?.callbacks ?? {}\n  }\n\n  on<T>(event: string, callback: Callback1<T>, context?): this\n  on<T1, T2>(event: string, callback: Callback2<T1, T2>, context?): this\n  on<T1, T2, T3>(event: string, callback: Callback3<T1, T2, T3>, context?): this\n  on<T1, T2, T3, T4>(event: string, callback: Callback4<T1, T2, T3, T4>, comtext): this\n  on<T1, T2, T3, T4, T5>(event: string, callback: Callback5<T1, T2, T3, T4, T5>, context?): this\n  on<T1, T2, T3, T4, T5, T6>(event: string, callback: Callback6Rest<T1, T2, T3, T4, T5, T6>, context?): this\n  on (eventName, callback, context): this {\n    let event, node, tail, list\n    if (!callback) {\n      return this\n    }\n    eventName = eventName.split(Events.eventSplitter)\n    this.callbacks ||= {}\n    const calls = this.callbacks\n    while ((event = eventName.shift())) {\n      list = calls[event]\n      node = list ? list.tail : {}\n      node.next = tail = {}\n      node.context = context\n      node.callback = callback\n      calls[event] = {\n        tail,\n        next: list ? list.next : node\n      }\n    }\n    return this\n  }\n\n  once (events, callback, context) {\n    const wrapper = (...args) => {\n      callback.apply(this, args)\n      this.off(events, wrapper, context)\n    }\n\n    this.on(events, wrapper, context)\n\n    return this\n  }\n\n  off (events, callback?, context?) {\n    let event, calls, node, tail, cb, ctx\n    if (!(calls = this.callbacks)) {\n      return this\n    }\n    if (!(events || callback || context)) {\n      delete this.callbacks\n      return this\n    }\n    events = events ? events.split(Events.eventSplitter) : Object.keys(calls)\n    while ((event = events.shift())) {\n      node = calls[event]\n      delete calls[event]\n      if (!node || !(callback || context)) {\n        continue\n      }\n      tail = node.tail\n      while ((node = node.next) !== tail) {\n        cb = node.callback\n        ctx = node.context\n        if ((callback && cb !== callback) || (context && ctx !== context)) {\n          this.on(event, cb, ctx)\n        }\n      }\n    }\n    return this\n  }\n\n  trigger(event: string)\n  trigger<T1>(event: string, arg: T1)\n  trigger<T1, T2>(event: string, arg1: T1, arg2: T2)\n  trigger<T1, T2, T3>(event: string, arg1: T1, arg2: T2, arg3: T3)\n  trigger<T1, T2, T3, T4>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4)\n  trigger<T1, T2, T3, T4, T5>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5)\n  trigger<T1, T2, T3, T4, T5, T6>(event: string, arg1: T1, arg2: T2, arg3: T3, arg4: T4, arg5: T5,\n    arg6: T6, ...rest: any[])\n\n  trigger (events) {\n    let event, node, calls, tail\n    if (!(calls = this.callbacks)) {\n      return this\n    }\n    events = events.split(Events.eventSplitter)\n    const rest = [].slice.call(arguments, 1)\n    while ((event = events.shift())) {\n      if ((node = calls[event])) {\n        tail = node.tail\n        while ((node = node.next) !== tail) {\n          node.callback.apply(node.context || this, rest)\n        }\n      }\n    }\n    return this\n  }\n}\n","export function isString (o: unknown): o is string {\n  return typeof o === 'string'\n}\n\nexport function isUndefined (o: unknown): o is undefined {\n  return typeof o === 'undefined'\n}\n\nexport function isNull (o: unknown): o is null {\n  return o === null\n}\n\nexport function isObject<T> (o: unknown): o is T {\n  return o !== null && typeof o === 'object'\n}\n\nexport function isBoolean (o: unknown): o is boolean {\n  return o === true || o === false\n}\n\nexport function isFunction (o: unknown): o is (...args: any[]) => any {\n  return typeof o === 'function'\n}\n\nexport function isNumber (o: unknown): o is number {\n  return typeof o === 'number'\n}\n\nexport function isBooleanStringLiteral (o: unknown): o is string {\n  return o === 'true' || o === 'false'\n}\n\nexport const isArray = Array.isArray\n\nexport const isWebPlatform = () => process.env.TARO_ENV === 'h5' || process.env.TARO_PLATFORM === 'web'\n","import { Events } from './event-emitter'\nimport { isFunction } from './is'\n\nimport type { Shortcuts } from './template'\n\ntype Func = (...args: any[]) => any\n\nexport enum HOOK_TYPE {\n  SINGLE,\n  MULTI,\n  WATERFALL\n}\n\ninterface Hook {\n  type: HOOK_TYPE\n  initial?: Func | null\n}\n\ninterface Node {\n  next: Node\n  context?: any\n  callback?: Func\n}\n\ninterface MiniLifecycle {\n  app: [\n    string, /** onLaunch */\n    string, /** onShow */\n    string /** onHide */\n  ]\n  page: [\n    string, /** onLoad */\n    string, /** onUnload */\n    string, /** onReady */\n    string, /** onShow */\n    string, /** onHide */\n    string[], /** others */\n    string[] /** side-effects */\n  ]\n  component: [\n    string, /** attached */\n    string, /** detached */\n  ]\n}\n\ninterface MiniElementData {\n  [Shortcuts.Childnodes]?: MiniData[]\n  [Shortcuts.NodeName]: string\n  [Shortcuts.Class]?: string\n  [Shortcuts.Style]?: string\n  uid?: string\n  sid: string\n  [key: string]: unknown\n}\n\ninterface MiniTextData {\n  [Shortcuts.Text]: string\n  [Shortcuts.NodeName]: string\n}\n\ntype MiniData = MiniElementData | MiniTextData\n\ninterface UpdatePayload {\n  path: string\n  value: string | boolean | (() => MiniData | MiniData[])\n}\n\ntype Target = Record<string, unknown> & { dataset: Record<string, unknown>, id: string }\n\ninterface MpEvent {\n  type: string\n  detail: Record<string, unknown>\n  target: Target\n  currentTarget: Target\n}\n\nconst defaultMiniLifecycle: MiniLifecycle = {\n  app: [\n    'onLaunch',\n    'onShow',\n    'onHide'\n  ],\n  page: [\n    'onLoad',\n    'onUnload',\n    'onReady',\n    'onShow',\n    'onHide',\n    [\n      'onPullDownRefresh',\n      'onReachBottom',\n      'onPageScroll',\n      'onResize',\n      'onTabItemTap',\n      'onTitleClick',\n      'onOptionMenuClick',\n      'onPopMenuClick',\n      'onPullIntercept',\n      'onAddToFavorites'\n    ],\n    [\n      'onShareAppMessage',\n      'onShareTimeline'\n    ]\n  ],\n  component: [\n    'attached',\n    'detached'\n  ]\n}\n\nexport function TaroHook (type: HOOK_TYPE, initial?: Func): Hook {\n  return {\n    type,\n    initial: initial || null\n  }\n}\n\nexport class TaroHooks<T extends Record<string, Func> = any> extends Events {\n  hooks: Record<keyof T, Hook>\n\n  constructor (hooks: Record<keyof T, Hook>, opts?) {\n    super(opts)\n    this.hooks = hooks\n    for (const hookName in hooks) {\n      const { initial } = hooks[hookName]\n      if (isFunction(initial)) {\n        this.on(hookName, initial)\n      }\n    }\n  }\n\n  private tapOneOrMany<K extends Extract<keyof T, string>> (hookName: K, callback: T[K] | T[K][]) {\n    const list = isFunction(callback) ? [callback] : callback\n    list.forEach(cb => this.on(hookName, cb))\n  }\n\n  tap<K extends Extract<keyof T, string>> (hookName: K, callback: T[K] | T[K][]) {\n    const hooks = this.hooks\n    const { type, initial } = hooks[hookName]\n    if (type === HOOK_TYPE.SINGLE) {\n      this.off(hookName)\n      this.on(hookName, isFunction(callback) ? callback : callback[callback.length - 1])\n    } else {\n      initial && this.off(hookName, initial)\n      this.tapOneOrMany(hookName, callback)\n    }\n  }\n\n  call<K extends Extract<keyof T, string>> (hookName: K, ...rest: Parameters<T[K]>): ReturnType<T[K]> | undefined {\n    const hook = this.hooks[hookName]\n    if (!hook) return\n\n    const { type } = hook\n\n    const calls = this.callbacks\n    if (!calls) return\n\n    const list = calls[hookName] as { tail: Node, next: Node }\n\n    if (list) {\n      const tail = list.tail\n      let node: Node = list.next\n      let args = rest\n      let res\n\n      while (node !== tail) {\n        res = node.callback?.apply(node.context || this, args)\n        if (type === HOOK_TYPE.WATERFALL) {\n          const params: any = [res]\n          args = params\n        }\n        node = node.next\n      }\n      return res\n    }\n  }\n\n  isExist (hookName: string) {\n    return Boolean(this.callbacks?.[hookName])\n  }\n}\n\ntype ITaroHooks = {\n  /** 小程序端 App、Page 构造对象的生命周期方法名称 */\n  getMiniLifecycle: (defaultConfig: MiniLifecycle) => MiniLifecycle\n  getMiniLifecycleImpl: () => MiniLifecycle\n  /** 解决 React 生命周期名称的兼容问题 */\n  getLifecycle: (instance, lifecyle) => Func | Array<Func> | undefined\n  /** 解决百度小程序的模版语法问题 */\n  getPathIndex: (indexOfNode: number) => string\n  /** 解决支付宝小程序分包时全局作用域不一致的问题 */\n  getEventCenter: (EventsClass: typeof Events) => Events\n  isBubbleEvents: (eventName: string) => boolean\n  getSpecialNodes: () => string[]\n  /** 解决 Vue2 布尔值属性值的设置问题 */\n  onRemoveAttribute: (element, qualifiedName: string) => boolean\n  /** 用于把 React 同一事件回调中的所有 setState 合并到同一个更新处理中 */\n  batchedEventUpdates: (cb: Func) => void\n  /** 用于处理 React 中的小程序生命周期 hooks */\n  mergePageInstance: (prev, next) => void\n  /** 用于修改传递给小程序 Page 构造器的对象 */\n  modifyPageObject: (config: Record<any, any>) => void\n  /** H5 下拉刷新 wrapper */\n  createPullDownComponent: (el, path: string, framework, customWrapper?: any) => void\n  /** H5 获取原生 DOM 对象 */\n  getDOMNode: (instance) => any\n  /**\n   * @todo: multi\n   * 修改 Taro DOM 序列化数据\n   **/\n  modifyHydrateData:(data: Record<string, any>) => void\n  /**\n    * @todo: multi\n    * 修改 Taro DOM 序列化数据\n    **/\n  modifySetAttrPayload: (element, key: string, payload: UpdatePayload, componentsAlias: Record<string, any>) => void\n  /**\n    * @todo: multi\n    * 修改 Taro DOM 序列化数据\n    **/\n  modifyRmAttrPayload: (element, key: string, payload: UpdatePayload, componentsAlias: Record<string, any>) => void\n  /**\n    * @todo: multi\n    * 调用 addEventListener 时触发\n    **/\n  onAddEvent: (type: string, handler, options: any, node) => void\n  /** 用于修改小程序原生事件对象 */\n  modifyMpEvent: (event: MpEvent) => void\n  modifyMpEventImpl: (event: MpEvent) => void\n  /** 用于修改 Taro DOM 事件对象 */\n  modifyTaroEvent: (event, element) => void\n\n  modifyDispatchEvent: (event, element) => void\n  initNativeApi: (taro: Record<string, any>) => void\n  patchElement: (node) => void\n}\n\nexport const hooks = new TaroHooks<ITaroHooks>({\n  getMiniLifecycle: TaroHook(HOOK_TYPE.SINGLE, defaultConfig => defaultConfig),\n\n  getMiniLifecycleImpl: TaroHook(HOOK_TYPE.SINGLE, function (this: TaroHooks<ITaroHooks>) {\n    return this.call('getMiniLifecycle', defaultMiniLifecycle)\n  }),\n\n  getLifecycle: TaroHook(HOOK_TYPE.SINGLE, (instance, lifecycle) => instance[lifecycle]),\n\n  getPathIndex: TaroHook(HOOK_TYPE.SINGLE, indexOfNode => `[${indexOfNode}]`),\n\n  getEventCenter: TaroHook(HOOK_TYPE.SINGLE, Events => new Events()),\n\n  isBubbleEvents: TaroHook(HOOK_TYPE.SINGLE, eventName => {\n    /**\n     * 支持冒泡的事件, 除 支付宝小程序外，其余的可冒泡事件都和微信保持一致\n     * 详见 见 https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html\n     */\n    const BUBBLE_EVENTS = new Set([\n      'touchstart',\n      'touchmove',\n      'touchcancel',\n      'touchend',\n      'touchforcechange',\n      'tap',\n      'longpress',\n      'longtap',\n      'transitionend',\n      'animationstart',\n      'animationiteration',\n      'animationend'\n    ])\n\n    return BUBBLE_EVENTS.has(eventName)\n  }),\n\n  getSpecialNodes: TaroHook(HOOK_TYPE.SINGLE, () => ['view', 'text', 'image']),\n\n  onRemoveAttribute: TaroHook(HOOK_TYPE.SINGLE),\n\n  batchedEventUpdates: TaroHook(HOOK_TYPE.SINGLE),\n\n  mergePageInstance: TaroHook(HOOK_TYPE.SINGLE),\n\n  modifyPageObject: TaroHook(HOOK_TYPE.SINGLE),\n\n  createPullDownComponent: TaroHook(HOOK_TYPE.SINGLE),\n\n  getDOMNode: TaroHook(HOOK_TYPE.SINGLE),\n\n  modifyHydrateData: TaroHook(HOOK_TYPE.SINGLE),\n\n  modifySetAttrPayload: TaroHook(HOOK_TYPE.SINGLE),\n\n  modifyRmAttrPayload: TaroHook(HOOK_TYPE.SINGLE),\n\n  onAddEvent: TaroHook(HOOK_TYPE.SINGLE),\n\n  modifyMpEvent: TaroHook(HOOK_TYPE.MULTI),\n\n  modifyMpEventImpl: TaroHook(HOOK_TYPE.SINGLE, function (this: TaroHooks<ITaroHooks>, e: MpEvent) {\n    try {\n      // 有些小程序的事件对象的某些属性只读\n      this.call('modifyMpEvent', e)\n    } catch (error) {\n      console.warn('[Taro modifyMpEvent hook Error]: ' + error?.message)\n    }\n  }),\n\n  modifyTaroEvent: TaroHook(HOOK_TYPE.MULTI),\n\n  modifyDispatchEvent: TaroHook(HOOK_TYPE.MULTI),\n\n  initNativeApi: TaroHook(HOOK_TYPE.MULTI),\n\n  patchElement: TaroHook(HOOK_TYPE.MULTI)\n})\n","import { isFunction, isString } from './is'\nimport { nonsupport, setUniqueKeyToRoute } from './utils'\n\ndeclare const getCurrentPages: () => any\ndeclare const getApp: () => any\ndeclare const requirePlugin: () => void\n\ntype IObject = Record<string, any>\n\ninterface IProcessApisIOptions {\n  noPromiseApis?: Set<string>\n  needPromiseApis?: Set<string>\n  handleSyncApis?: (key: string, global: IObject, args: any[]) => any\n  transformMeta?: (key: string, options: IObject) => { key: string, options: IObject }\n  modifyApis?: (apis: Set<string>) => void\n  modifyAsyncResult?: (key: string, res) => void\n  isOnlyPromisify?: boolean\n  [propName: string]: any\n}\n\nexport interface IApiDiff {\n  [key: string]: {\n    /** API重命名 */\n    alias?: string\n    options?: {\n      /** API参数键名修改 */\n      change?: {\n        old: string\n        new: string\n      }[]\n      /** API参数值修改 */\n      set?: {\n        key: string\n        value: ((options: Record<string, any>) => unknown) | unknown\n      }[]\n    }\n  }\n}\n\nconst needPromiseApis = new Set<string>([\n  'addPhoneContact',\n  'authorize',\n  'canvasGetImageData',\n  'canvasPutImageData',\n  'canvasToTempFilePath',\n  'checkSession',\n  'chooseAddress',\n  'chooseImage',\n  'chooseInvoiceTitle',\n  'chooseLocation',\n  'chooseVideo',\n  'clearStorage',\n  'closeBLEConnection',\n  'closeBluetoothAdapter',\n  'closeSocket',\n  'compressImage',\n  'connectSocket',\n  'createBLEConnection',\n  'downloadFile',\n  'exitMiniProgram',\n  'getAvailableAudioSources',\n  'getBLEDeviceCharacteristics',\n  'getBLEDeviceServices',\n  'getBatteryInfo',\n  'getBeacons',\n  'getBluetoothAdapterState',\n  'getBluetoothDevices',\n  'getClipboardData',\n  'getConnectedBluetoothDevices',\n  'getConnectedWifi',\n  'getExtConfig',\n  'getFileInfo',\n  'getImageInfo',\n  'getLocation',\n  'getNetworkType',\n  'getSavedFileInfo',\n  'getSavedFileList',\n  'getScreenBrightness',\n  'getSetting',\n  'getStorage',\n  'getStorageInfo',\n  'getSystemInfo',\n  'getUserInfo',\n  'getWifiList',\n  'hideHomeButton',\n  'hideShareMenu',\n  'hideTabBar',\n  'hideTabBarRedDot',\n  'loadFontFace',\n  'login',\n  'makePhoneCall',\n  'navigateBack',\n  'navigateBackMiniProgram',\n  'navigateTo',\n  'navigateToBookshelf',\n  'navigateToMiniProgram',\n  'notifyBLECharacteristicValueChange',\n  'hideKeyboard',\n  'hideLoading',\n  'hideNavigationBarLoading',\n  'hideToast',\n  'openBluetoothAdapter',\n  'openDocument',\n  'openLocation',\n  'openSetting',\n  'pageScrollTo',\n  'previewImage',\n  'queryBookshelf',\n  'reLaunch',\n  'readBLECharacteristicValue',\n  'redirectTo',\n  'removeSavedFile',\n  'removeStorage',\n  'removeTabBarBadge',\n  'requestSubscribeMessage',\n  'saveFile',\n  'saveImageToPhotosAlbum',\n  'saveVideoToPhotosAlbum',\n  'scanCode',\n  'sendSocketMessage',\n  'setBackgroundColor',\n  'setBackgroundTextStyle',\n  'setClipboardData',\n  'setEnableDebug',\n  'setInnerAudioOption',\n  'setKeepScreenOn',\n  'setNavigationBarColor',\n  'setNavigationBarTitle',\n  'setScreenBrightness',\n  'setStorage',\n  'setTabBarBadge',\n  'setTabBarItem',\n  'setTabBarStyle',\n  'showActionSheet',\n  'showFavoriteGuide',\n  'showLoading',\n  'showModal',\n  'showShareMenu',\n  'showTabBar',\n  'showTabBarRedDot',\n  'showToast',\n  'startBeaconDiscovery',\n  'startBluetoothDevicesDiscovery',\n  'startDeviceMotionListening',\n  'startPullDownRefresh',\n  'stopBeaconDiscovery',\n  'stopBluetoothDevicesDiscovery',\n  'stopCompass',\n  'startCompass',\n  'startAccelerometer',\n  'stopAccelerometer',\n  'showNavigationBarLoading',\n  'stopDeviceMotionListening',\n  'stopPullDownRefresh',\n  'switchTab',\n  'uploadFile',\n  'vibrateLong',\n  'vibrateShort',\n  'writeBLECharacteristicValue'\n])\n\nfunction getCanIUseWebp (taro) {\n  return function () {\n    const res = taro.getSystemInfoSync?.()\n\n    if (!res) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('不支持 API canIUseWebp')\n      }\n      return false\n    }\n\n    const { platform } = res\n\n    const platformLower = platform.toLowerCase()\n    if (platformLower === 'android' || platformLower === 'devtools') {\n      return true\n    }\n    return false\n  }\n}\n\nfunction getNormalRequest (global) {\n  return function request (options) {\n    options = options\n      ? (\n        isString(options)\n          ? { url: options }\n          : options\n      )\n      : {}\n\n    const originSuccess = options.success\n    const originFail = options.fail\n    const originComplete = options.complete\n    let requestTask\n    const p: any = new Promise((resolve, reject) => {\n      options.success = res => {\n        originSuccess && originSuccess(res)\n        resolve(res)\n      }\n      options.fail = res => {\n        originFail && originFail(res)\n        reject(res)\n      }\n\n      options.complete = res => {\n        originComplete && originComplete(res)\n      }\n\n      requestTask = global.request(options)\n    })\n\n    equipTaskMethodsIntoPromise(requestTask, p)\n\n    p.abort = (cb) => {\n      cb && cb()\n      if (requestTask) {\n        requestTask.abort()\n      }\n      return p\n    }\n    return p\n  }\n}\n\nfunction processApis (taro, global, config: IProcessApisIOptions = {}) {\n  const patchNeedPromiseApis = config.needPromiseApis || []\n  const _needPromiseApis = new Set<string>([...patchNeedPromiseApis, ...needPromiseApis])\n  const preserved = [\n    'getEnv',\n    'interceptors',\n    'Current',\n    'getCurrentInstance',\n    'options',\n    'nextTick',\n    'eventCenter',\n    'Events',\n    'preload',\n    'webpackJsonp'\n  ]\n\n  const apis = new Set(\n    !config.isOnlyPromisify\n      ? Object.keys(global).filter(api => preserved.indexOf(api) === -1)\n      : patchNeedPromiseApis\n  )\n\n  if (config.modifyApis) {\n    config.modifyApis(apis)\n  }\n\n  apis.forEach(key => {\n    if (_needPromiseApis.has(key)) {\n      const originKey = key\n      taro[originKey] = (options: Record<string, any> | string = {}, ...args) => {\n        let key = originKey\n\n        // 第一个参数 options 为字符串，单独处理\n        if (typeof options === 'string') {\n          if (args.length) {\n            return global[key](options, ...args)\n          }\n          return global[key](options)\n        }\n\n        // 改变 key 或 option 字段，如需要把支付宝标准的字段对齐微信标准的字段\n        if (config.transformMeta) {\n          const transformResult = config.transformMeta(key, options)\n          key = transformResult.key\n          ; (options as Record<string, any>) = transformResult.options\n          // 新 key 可能不存在\n          if (!global.hasOwnProperty(key)) {\n            return nonsupport(key)()\n          }\n        }\n\n        let task: any = null\n        const obj: Record<string, any> = Object.assign({}, options)\n\n        // 为页面跳转相关的 API 设置一个随机数作为路由参数。为了给 runtime 区分页面。\n        setUniqueKeyToRoute(key, options)\n\n        // Promise 化\n        const p: any = new Promise((resolve, reject) => {\n          obj.success = res => {\n            config.modifyAsyncResult?.(key, res)\n            options.success?.(res)\n            if (key === 'connectSocket') {\n              resolve(\n                Promise.resolve().then(() => task ? Object.assign(task, res) : res)\n              )\n            } else {\n              resolve(res)\n            }\n          }\n          obj.fail = res => {\n            options.fail?.(res)\n            reject(res)\n          }\n          obj.complete = res => {\n            options.complete?.(res)\n          }\n          if (args.length) {\n            task = global[key](obj, ...args)\n          } else {\n            task = global[key](obj)\n          }\n        })\n\n        // 给 promise 对象挂载属性\n        if (['uploadFile', 'downloadFile'].includes(key)) {\n          equipTaskMethodsIntoPromise(task, p)\n          p.progress = cb => {\n            task?.onProgressUpdate(cb)\n            return p\n          }\n          p.abort = cb => {\n            cb?.()\n            task?.abort()\n            return p\n          }\n        }\n        return p\n      }\n    } else {\n      let platformKey = key\n\n      // 改变 key 或 option 字段，如需要把支付宝标准的字段对齐微信标准的字段\n      if (config.transformMeta) {\n        platformKey = config.transformMeta(key, {}).key\n      }\n\n      // API 不存在\n      if (!global.hasOwnProperty(platformKey)) {\n        taro[key] = nonsupport(key)\n        return\n      }\n      if (isFunction(global[key])) {\n        taro[key] = (...args) => {\n          if (config.handleSyncApis) {\n            return config.handleSyncApis(key, global, args)\n          } else {\n            return global[platformKey].apply(global, args)\n          }\n        }\n      } else {\n        taro[key] = global[platformKey]\n      }\n    }\n  })\n\n  !config.isOnlyPromisify && equipCommonApis(taro, global, config)\n}\n\n/**\n * 挂载常用 API\n * @param taro Taro 对象\n * @param global 小程序全局对象，如微信的 wx，支付宝的 my\n */\nfunction equipCommonApis (taro, global, apis: Record<string, any> = {}) {\n  taro.canIUseWebp = getCanIUseWebp(taro)\n  taro.getCurrentPages = getCurrentPages || nonsupport('getCurrentPages')\n  taro.getApp = getApp || nonsupport('getApp')\n  taro.env = global.env || {}\n\n  try {\n    taro.requirePlugin = requirePlugin || nonsupport('requirePlugin')\n  } catch (error) {\n    taro.requirePlugin = nonsupport('requirePlugin')\n  }\n\n  // request & interceptors\n  const request = apis.request || getNormalRequest(global)\n  function taroInterceptor (chain) {\n    return request(chain.requestParams)\n  }\n  const link = new taro.Link(taroInterceptor)\n  taro.request = link.request.bind(link)\n  taro.addInterceptor = link.addInterceptor.bind(link)\n  taro.cleanInterceptors = link.cleanInterceptors.bind(link)\n  taro.miniGlobal = taro.options.miniGlobal = global\n}\n\n/**\n * 将Task对象中的方法挂载到promise对象中，适配小程序api原生返回结果\n * @param task Task对象 {RequestTask | DownloadTask | UploadTask}\n * @param promise Promise\n */\nfunction equipTaskMethodsIntoPromise (task, promise) {\n  if (!task || !promise) return\n  const taskMethods = ['abort', 'onHeadersReceived', 'offHeadersReceived', 'onProgressUpdate', 'offProgressUpdate', 'onChunkReceived', 'offChunkReceived']\n  task && taskMethods.forEach(method => {\n    if (method in task) {\n      promise[method] = task[method].bind(task)\n    }\n  })\n}\n\nexport {\n  processApis\n}\n","const { hooks } = require('@tarojs/runtime')\nconst taro = require('@tarojs/api').default\n\nif (hooks.isExist('initNativeApi')) {\n  hooks.call('initNativeApi', taro)\n}\n\nmodule.exports = taro\nmodule.exports.default = module.exports\n","/* eslint-disable no-undef */\nimport { createRecursiveComponentConfig } from '@tarojs/runtime'\n// @ts-ignore\nComponent(createRecursiveComponentConfig())\n"],"names":[],"sourceRoot":""}