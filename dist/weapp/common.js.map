{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;;;;;;;;;;;;ACtBA;AACA;AACA","sources":["webpack://taro-vant4/._src_utils_constant.ts","webpack://taro-vant4/._src_utils_deep-clone.ts","webpack://taro-vant4/._src_utils_index.ts"],"sourcesContent":["// color\r\nexport const RED = '#ee0a24';\r\n\r\n// border\r\nexport const BORDER = 'van-hairline';\r\nexport const BORDER_TOP = `${BORDER}--top`;\r\nexport const BORDER_LEFT = `${BORDER}--left`;\r\nexport const BORDER_BOTTOM = `${BORDER}--bottom`;\r\nexport const BORDER_SURROUND = `${BORDER}--surround`;\r\nexport const BORDER_TOP_BOTTOM = `${BORDER}--top-bottom`;\r\nexport const BORDER_UNSET_TOP_BOTTOM = `${BORDER}-unset--top-bottom`;\r\n","import { isDef } from './index';\r\nimport { ObjectIndex } from './types';\r\n\r\nexport function deepClone(obj: ObjectIndex): object {\r\n  if (!isDef(obj)) {\r\n    return obj;\r\n  }\r\n\r\n  if (Array.isArray(obj)) {\r\n    return obj.map((item) => deepClone(item));\r\n  }\r\n\r\n  if (typeof obj === 'object') {\r\n    const to = {} as ObjectIndex;\r\n    Object.keys(obj).forEach((key) => {\r\n      to[key] = deepClone(obj[key]);\r\n    });\r\n\r\n    return to;\r\n  }\r\n\r\n  return obj;\r\n}\r\n","export function isDef<T>(val: T): val is NonNullable<T> {\r\n  return val !== undefined && val !== null;\r\n}\r\n"],"names":[],"sourceRoot":""}